{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":1,"renderable":0},{"_id":"source/images/avatar.jpg","path":"images/avatar.jpg","modified":1,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"source/images/entropy.jpg","path":"images/entropy.jpg","modified":1,"renderable":0},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","path":"lib/needsharebutton/font-embedded.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","path":"lib/needsharebutton/needsharebutton.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","path":"lib/needsharebutton/needsharebutton.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","path":"lib/Han/dist/font/han.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"058cbb5392a279396ef54cff0d01deb0a0b54c0e","modified":1547373828515},{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1547373828559},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1547373828559},{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1547373828559},{"_id":"themes/next/.gitignore","hash":"0b5c2ffd41f66eb1849d6426ba8cf9649eeed329","modified":1547373828560},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1547373828560},{"_id":"themes/next/.javascript_ignore","hash":"8a224b381155f10e6eb132a4d815c5b52962a9d1","modified":1547373828560},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1547373828560},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1547373828560},{"_id":"themes/next/.travis.yml","hash":"d60d4a5375fea23d53b2156b764a99b2e56fa660","modified":1547373828561},{"_id":"themes/next/LICENSE","hash":"f293bcfcdc06c0b77ba13570bb8af55eb5c059fd","modified":1547373828561},{"_id":"themes/next/README.cn.md","hash":"58ffe752bc4b7f0069fcd6304bbc2d5ff7b80f89","modified":1547373828561},{"_id":"themes/next/_config.yml","hash":"930dc6773ef7421f9703ac794bc4e81e3a899d03","modified":1547373828561},{"_id":"themes/next/README.md","hash":"898213e66d34a46c3cf8446bf693bd50db0d3269","modified":1547373828561},{"_id":"themes/next/bower.json","hash":"0674f11d3d514e087a176da0e1d85c2286aa5fba","modified":1547373828561},{"_id":"themes/next/gulpfile.coffee","hash":"031bffc483e417b20e90eceb6cf358e7596d2e69","modified":1547373828562},{"_id":"themes/next/package.json","hash":"036d3a1346203d2f1a3958024df7f74e7ac07bfe","modified":1547373828576},{"_id":"source/about/index.md","hash":"43b0d8c75d2cf928dccea7bf25353fed87652520","modified":1547373828538},{"_id":"source/categories/index.md","hash":"ce848f91fd6c328ab3326a3770952adac26c37fa","modified":1547373828538},{"_id":"source/_posts/12345678987654321.md","hash":"8727cdc07c7c35e231a6777c749ac08de2d850bb","modified":1559456082928},{"_id":"source/_posts/187.md","hash":"eab7c1a94cd9c38c261431ffa38621f4da93bff2","modified":1547373828515},{"_id":"source/_posts/4-Ways-of-Fibonacci-in-Python.md","hash":"8118f8dc1a7fc895a3126ec469fd661a1aa097f2","modified":1547373828515},{"_id":"source/_posts/Bitmap.md","hash":"6fa0a0597561bf7d3f474af72c4e5733e8041593","modified":1547373828516},{"_id":"source/_posts/Data-Structure-Alignment-and-Padding-in-C.md","hash":"c4d3afbd95f0bef9a6673b6f75edf5a3906a1929","modified":1547373828516},{"_id":"source/_posts/Floyd.md","hash":"f91d1794732d1e5f89a026f59230f22ed293e45a","modified":1547373828517},{"_id":"source/_posts/Generate-0-and-1-with-Equal-Probability.md","hash":"5547dfafb2eac221d9bee6e0a8d0114856a46a70","modified":1547373828519},{"_id":"source/_posts/Generate-Verification-Code-in-Python.md","hash":"411a5753da5d517a2230ae8c602e5dbc48148d64","modified":1547373828520},{"_id":"source/_posts/List-Files-and-Directory-Tree-Structure-in-Python.md","hash":"e29aff2e4c85bd96ee8bf4548686dfab89bd403b","modified":1547373828522},{"_id":"source/_posts/Similar-Strings.md","hash":"faaa487288aaf9292302a166837b351912d354ed","modified":1547373828522},{"_id":"source/_posts/Sort-a-Special-Array.md","hash":"233483c2930aa408e35e204f9f9445ad5ebc44a7","modified":1547373828522},{"_id":"source/_posts/Sports-Meeting.md","hash":"2d26c3b6cb5fbc3566b13d45fae02f3b8eff493c","modified":1547373828523},{"_id":"source/_posts/Transformer.md","hash":"5d68ddf723750255945a1198d7285f16748de4de","modified":1547373828525},{"_id":"source/_posts/Use-Homebrew-to-Install-both-Python-2-and-3-on-Mac.md","hash":"deb1905183c6f15743f6f4d604f74aff3527da1e","modified":1549886325579},{"_id":"source/_posts/built-in-types-in-python.md","hash":"05e58ab069bd875336605625ead8487f2da9fb07","modified":1547373828525},{"_id":"source/_posts/calc-entropy-and-divergence.md","hash":"72097029aefab50716bb18bcd01b70b3b61bba60","modified":1547373828525},{"_id":"source/_posts/calculate-the-number-of-uppercase-letters-in-a-file.md","hash":"4aa02a3329d958519363573f8b98584e23539461","modified":1547373828525},{"_id":"source/_posts/callatz-conjecture.md","hash":"d4f9716a34b5fed0bd4fcd7ebfd1f3eaf8ed29ad","modified":1547373828525},{"_id":"source/_posts/chrome-aw-snap.md","hash":"29f4df6024e3dfbb4bad811ae32fb312d81a436e","modified":1547373828526},{"_id":"source/_posts/compare_version.md","hash":"cc5bea2239b3845b326078108991513d8d7aa2a2","modified":1547373828526},{"_id":"source/_posts/failed-to-start-mysql8-0-in-centos7.md","hash":"2f5de019507ffad04898bbc41a8445c37f54c72b","modified":1547992727987},{"_id":"source/_posts/fashion-ai.md","hash":"cd6202a37355f3fe0ac41d8bcbbc46d98023c3b9","modified":1547373828526},{"_id":"source/_posts/hello-world.md","hash":"c4d9711b70de17a241b8e6a16d10743fbf57e5b8","modified":1547373828526},{"_id":"source/_posts/if-else-in-Python.md","hash":"1111943df3b70e2aaf5fcad2a6a9ef9d915f4ad8","modified":1556107672804},{"_id":"source/_posts/linux_tips.md","hash":"cedce28c513e0855a515ce84739e69518bf160c4","modified":1547373828526},{"_id":"source/_posts/lrzsz.md","hash":"b3977eae0ca25e34cd15724787ae502780bf9eb1","modified":1547373828526},{"_id":"source/_posts/method-chaining-or-cascading-in-python.md","hash":"6a5631ae8f6bc1df5bd34841506d6c77ae3422db","modified":1548245412008},{"_id":"source/_posts/remove-special-substrings-in-a-string.md","hash":"9cf6ae2be990eb7cbe9350ffc3c8ae75dd605158","modified":1547373828526},{"_id":"source/_posts/reverse-string.md","hash":"05689ffd05ed1225afc81d9d1afec0b8fca5aab7","modified":1547373828527},{"_id":"source/_posts/shuffle-a-list-in-place.md","hash":"34a9a291d738420c74b6d32b61ad64acccbf03e1","modified":1547373828527},{"_id":"source/_posts/sort-strings-in-c.md","hash":"4670c06154b1465492bf42ec2e29e85b8d48cd3d","modified":1547373828527},{"_id":"source/_posts/ssh-failed-to-connect-centos7-in-vultr.md","hash":"2dfedfdf8e8e65cc0af43f61766ceedec874735b","modified":1547373828528},{"_id":"source/_posts/system-path-of-python-in-windows-and-ubuntu.md","hash":"30925a9512a9baaac89489f1ab39fed452fddb96","modified":1547373828537},{"_id":"source/_posts/tank.md","hash":"b4cbb30809bf66b83df055f978a88330143188ce","modified":1547373828538},{"_id":"source/images/avatar.jpg","hash":"f637c7c594ac5104ead28ccf8442be8bb2a851c0","modified":1547373828538},{"_id":"source/schedule/index.md","hash":"728255c3a2a0e94783c0f276ec71de5639c4d15f","modified":1547373828540},{"_id":"source/tags/index.md","hash":"ffd6b2e374cf491a4a587a481d0b0c221220625d","modified":1547373828540},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"3b5eafd32abb718e56ccf8d1cee0607ad8ce611d","modified":1547373828559},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"352093a1b210c72136687fd2eee649244cee402c","modified":1547373828560},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"902f627155a65099e0a37842ff396a58d0dc306f","modified":1547373828560},{"_id":"themes/next/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1547373828560},{"_id":"themes/next/layout/_layout.swig","hash":"da0929166674ea637e0ad454f85ad0d7bac4aff2","modified":1547373828565},{"_id":"themes/next/layout/archive.swig","hash":"f0a8225feafd971419837cdb4bcfec98a4a59b2f","modified":1547373828575},{"_id":"themes/next/layout/category.swig","hash":"4472255f4a3e3dd6d79201523a9526dcabdfbf18","modified":1547373828575},{"_id":"themes/next/layout/index.swig","hash":"783611349c941848a0e26ee2f1dc44dd14879bd1","modified":1547373828576},{"_id":"themes/next/layout/page.swig","hash":"969caaee05bdea725e99016eb63d810893a73e99","modified":1547373828576},{"_id":"themes/next/layout/post.swig","hash":"b3589a8e46288a10d20e41c7a5985d2493725aec","modified":1547373828576},{"_id":"themes/next/layout/schedule.swig","hash":"d86f8de4e118f8c4d778b285c140474084a271db","modified":1547373828576},{"_id":"themes/next/layout/tag.swig","hash":"7e0a7d7d832883eddb1297483ad22c184e4368de","modified":1547373828576},{"_id":"themes/next/languages/de.yml","hash":"057e7df11ddeb1c8c15a5d7c5ff29430d725ec6b","modified":1547373828562},{"_id":"themes/next/languages/default.yml","hash":"44ef3f26917f467459326c2c8be2f73e4d947f35","modified":1547373828562},{"_id":"themes/next/languages/en.yml","hash":"7e680d9bb8f3a3a9d1ba1c9d312b3d257183dded","modified":1547373828562},{"_id":"themes/next/languages/fr-FR.yml","hash":"7e4eb7011b8feee641cfb11c6e73180b0ded1c0f","modified":1547373828562},{"_id":"themes/next/languages/id.yml","hash":"b5de1ea66dd9ef54cac9a1440eaa4e3f5fc011f5","modified":1547373828563},{"_id":"themes/next/languages/it.yml","hash":"aa595f2bda029f73ef7bfa104b4c55c3f4e9fb4c","modified":1547373828563},{"_id":"themes/next/languages/ja.yml","hash":"3c76e16fd19b262864475faa6854b718bc08c4d8","modified":1547373828563},{"_id":"themes/next/languages/ko.yml","hash":"ea5b46056e73ebcee121d5551627af35cbffc900","modified":1547373828563},{"_id":"themes/next/languages/nl-NL.yml","hash":"edca4f3598857dbc3cbf19ed412213329b6edd47","modified":1547373828563},{"_id":"themes/next/languages/pt-BR.yml","hash":"b1694ae766ed90277bcc4daca4b1cfa19cdcb72b","modified":1547373828563},{"_id":"themes/next/languages/pt.yml","hash":"44b61f2d085b827b507909a0b8f8ce31c6ef5d04","modified":1547373828563},{"_id":"themes/next/languages/ru.yml","hash":"98ec6f0b7183282e11cffc7ff586ceb82400dd75","modified":1547373828564},{"_id":"themes/next/languages/vi.yml","hash":"fd08d3c8d2c62965a98ac420fdaf95e54c25d97c","modified":1547373828564},{"_id":"themes/next/languages/zh-Hans.yml","hash":"16ef56d0dea94638de7d200984c90ae56f26b4fe","modified":1547373828564},{"_id":"themes/next/languages/zh-hk.yml","hash":"9396f41ae76e4fef99b257c93c7354e661f6e0fa","modified":1547373828564},{"_id":"themes/next/languages/zh-tw.yml","hash":"50b71abb3ecc0686f9739e179e2f829cd074ecd9","modified":1547373828564},{"_id":"themes/next/scripts/merge-configs.js","hash":"81e86717ecfb775986b945d17f0a4ba27532ef07","modified":1547373828576},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1547373828577},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1547373828630},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1547373828630},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1547373828630},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1547373828597},{"_id":"source/_posts/4-Ways-of-Fibonacci-in-Python/fibonacci_time.png","hash":"b34bbd535ac8a0ebaedf23f68cfae14cd7672975","modified":1547373828515},{"_id":"source/_posts/4-Ways-of-Fibonacci-in-Python/fibonacci_time_2.png","hash":"93cef131e1dad6143c48d127060c0b0370af5c6c","modified":1547373828516},{"_id":"source/_posts/4-Ways-of-Fibonacci-in-Python/spiral.jpg","hash":"fe06d4f5b9c23805d2520c850a970a2493c31893","modified":1547373828516},{"_id":"source/_posts/Data-Structure-Alignment-and-Padding-in-C/alignment.png","hash":"92553e69f6a0c2d1ea98c42f519d50aec511120c","modified":1547373828517},{"_id":"source/_posts/Floyd/floyd.png","hash":"f0ed92675b3b5566cf69d3fd9a59225b47178759","modified":1547373828517},{"_id":"source/_posts/Generate-0-and-1-with-Equal-Probability/infinite_loop.jpg","hash":"e26db064ae74e05101847f6ae9370c57e3291910","modified":1547373828520},{"_id":"source/_posts/Generate-Verification-Code-in-Python/chr.png","hash":"03aac0993b25f5afd3208e6c793f95e311004643","modified":1547373828520},{"_id":"source/_posts/Generate-Verification-Code-in-Python/ord.png","hash":"b37fc49e1d9e75ca54cb43bda9cc570da00fcc8b","modified":1547373828521},{"_id":"source/_posts/List-Files-and-Directory-Tree-Structure-in-Python/dir_structure.png","hash":"e4df59c55655a2b59e0f18bc724fd634bf0605ae","modified":1547373828522},{"_id":"source/_posts/Similar-Strings/similar_strings.png","hash":"9029d7d354655fd743b9b1d120fb38f5423c501d","modified":1547373828522},{"_id":"source/_posts/Sort-a-Special-Array/sort.png","hash":"eb7a2c6acdf3623a130bf309a7f27aaf755cc009","modified":1547373828523},{"_id":"source/_posts/Sports-Meeting/answer2.png","hash":"452b013429e47e792228ef49c72706350f9c7f54","modified":1547373828523},{"_id":"source/_posts/Transformer/transformer.jpg","hash":"fecfd25865b23601068e8f92f38dc1db1bf3d413","modified":1547373828525},{"_id":"source/_posts/Use-Homebrew-to-Install-both-Python-2-and-3-on-Mac/activate.jpg","hash":"01ccc6baddcbcfafe2323cfc06c7e7b2530fa8c5","modified":1548581604092},{"_id":"source/_posts/Use-Homebrew-to-Install-both-Python-2-and-3-on-Mac/deactivate.jpg","hash":"72bee20a92f9f78ca1425266cdf687f177dd2de6","modified":1548581702508},{"_id":"source/_posts/failed-to-start-mysql8-0-in-centos7/.DS_Store","hash":"7d17b3a9a2d0975e86fd5d86c43f43d8397e8611","modified":1547991397559},{"_id":"source/_posts/failed-to-start-mysql8-0-in-centos7/35968830.png","hash":"81531ec945f197033ae4f262a217ba4f15bb9987","modified":1547991372452},{"_id":"source/_posts/failed-to-start-mysql8-0-in-centos7/36006075.png","hash":"782d7cbbc93f843206cf67363d061df3fbe6a6e5","modified":1547991372452},{"_id":"source/_posts/failed-to-start-mysql8-0-in-centos7/71003550.png","hash":"d548c206b5bff6d6265c14da90190f059ee7f226","modified":1547991372455},{"_id":"source/_posts/failed-to-start-mysql8-0-in-centos7/36201778.png","hash":"e9b1316409e164cc16d1686e4eb983a8f53f7dd3","modified":1547991654801},{"_id":"source/_posts/failed-to-start-mysql8-0-in-centos7/71918674.png","hash":"bac394e227473c0d76b39edd444cb8cf240871db","modified":1547991789315},{"_id":"source/_posts/failed-to-start-mysql8-0-in-centos7/72127872.png","hash":"6a73f3f69682292f06b2d87a74f08cc2893b002b","modified":1547992281848},{"_id":"source/_posts/failed-to-start-mysql8-0-in-centos7/72326504.png","hash":"c5efa550a7d6d9400d5a84d636f5e8ba88e0585f","modified":1547991913754},{"_id":"source/_posts/failed-to-start-mysql8-0-in-centos7/75749952.png","hash":"7949b701ec436bef3eeacf58a699f24d840ff659","modified":1547991372459},{"_id":"source/_posts/failed-to-start-mysql8-0-in-centos7/76232995.png","hash":"3df9826e61c3f9f8be6224c8541c50fee80d9a1a","modified":1547991372463},{"_id":"source/_posts/failed-to-start-mysql8-0-in-centos7/vultr_hardinfo.jpg","hash":"b62cb6abb890897d5f9f2612e00af09988f04d13","modified":1547989681181},{"_id":"source/_posts/remove-special-substrings-in-a-string/remove_substrings.png","hash":"1b3c89259cd47ffa40f92fa45571e25b2c0fdbf6","modified":1547373828527},{"_id":"source/_posts/ssh-failed-to-connect-centos7-in-vultr/ssh1.png","hash":"d71ea9cf8e824b3df3bed3716ab826e41d90d810","modified":1547373828528},{"_id":"source/_posts/ssh-failed-to-connect-centos7-in-vultr/ssh12.png","hash":"f799e57513d029dedf0098dfbbe4221de10a59bf","modified":1547373828530},{"_id":"source/_posts/ssh-failed-to-connect-centos7-in-vultr/ssh13.png","hash":"dec7d83788eecdbe2f3f951396f71bd885d33d8d","modified":1547373828530},{"_id":"source/_posts/ssh-failed-to-connect-centos7-in-vultr/ssh4.jpg","hash":"a5a9dce69b906e7f1a25500450bcdbe2347b3bd0","modified":1547373828534},{"_id":"source/_posts/ssh-failed-to-connect-centos7-in-vultr/ssh5.png","hash":"47b5fa1cf6dbb084609216e46868e63f50a99229","modified":1547373828535},{"_id":"source/_posts/ssh-failed-to-connect-centos7-in-vultr/ssh9.png","hash":"9bba11e2cf99cf0cca233ce6460a8560845938d3","modified":1547373828537},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1547373828564},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1547373828565},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1547373828565},{"_id":"themes/next/layout/_macro/post.swig","hash":"446a35a2cd389f8cfc3aa38973a9b44ad0740134","modified":1547373828565},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"665a928604f99d2ba7dc4a4a9150178229568cc6","modified":1547373828565},{"_id":"themes/next/layout/_macro/reward.swig","hash":"56e8d8556cf474c56ae1bef9cb7bbd26554adb07","modified":1547373828565},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"6a54c3c85ff6b19d275827a327abbf4bd99b2ebf","modified":1547373828565},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"39852700e4084ecccffa6d4669168e5cc0514c9e","modified":1547373828566},{"_id":"themes/next/layout/_partials/comments.swig","hash":"4a6f5b1792b2e5262b7fdab9a716b3108e2f09c7","modified":1547373828566},{"_id":"themes/next/layout/_partials/footer.swig","hash":"7b99601cdf8cca45f2e0b95b8fa839fb0a17e3d4","modified":1547373828566},{"_id":"themes/next/layout/_partials/head.swig","hash":"6b94fe8f3279daea5623c49ef4bb35917ba57510","modified":1547373828566},{"_id":"themes/next/layout/_partials/header.swig","hash":"ed042be6252848058c90109236ec988e392d91d4","modified":1547373828567},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1efd925d34a5d4ba2dc0838d9c86ba911e705fc9","modified":1547373828567},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1547373828567},{"_id":"themes/next/layout/_partials/search.swig","hash":"9dbd378e94abfcb3f864a5b8dbbf18d212ca2ee0","modified":1547373828567},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1547373828569},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1547373828569},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"a266f96ad06ee87bdeae6e105a4b53cd587bbd04","modified":1547373828570},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1547373828573},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"7c04a42319d728be356746363aff8ea247791d24","modified":1547373828573},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1547373828573},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"5fe0447cc88a5a63b530cf0426f93c4634811876","modified":1547373828574},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1547373828574},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1547373828574},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"1ddb2336a1a19b47af3017047012c01ec5f54529","modified":1547373828574},{"_id":"themes/next/scripts/tags/button.js","hash":"d023f10a00077f47082b0517e2ad666e6e994f60","modified":1547373828577},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1547373828577},{"_id":"themes/next/scripts/tags/exturl.js","hash":"8d7e60f60779bde050d20fd76f6fdc36fc85e06d","modified":1547373828577},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1547373828578},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1547373828578},{"_id":"themes/next/scripts/tags/label.js","hash":"2f8f41a7316372f0d1ed6b51190dc4acd3e16fff","modified":1547373828578},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"eeeabede68cf263de9e6593ecf682f620da16f0a","modified":1547373828578},{"_id":"themes/next/scripts/tags/note.js","hash":"64de4e9d01cf3b491ffc7d53afdf148ee5ad9779","modified":1547373828578},{"_id":"themes/next/scripts/tags/tabs.js","hash":"5786545d51c38e8ca38d1bfc7dd9e946fc70a316","modified":1547373828578},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1547373828597},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1547373828597},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1547373828597},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1547373828597},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1547373828597},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1547373828598},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1547373828598},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1547373828598},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1547373828598},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1547373828598},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1547373828598},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1547373828598},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1547373828599},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1547373828599},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1547373828599},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1547373828599},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1547373828599},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1547373828599},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1547373828599},{"_id":"source/_posts/Generate-Verification-Code-in-Python/random.sample.png","hash":"05790ed8f57d4300de9c6ad9258eff20d661d741","modified":1547373828521},{"_id":"source/_posts/Sports-Meeting/answer.png","hash":"b77e3e70554af8eec301825661e0aff4880af70d","modified":1547373828523},{"_id":"source/_posts/Use-Homebrew-to-Install-both-Python-2-and-3-on-Mac/wrong2.jpg","hash":"64c9158bf40aefdf1d1f17320c56fdbb29b38e17","modified":1548581523568},{"_id":"source/_posts/failed-to-start-mysql8-0-in-centos7/36115949.png","hash":"649f7a1483ebeccd3b0720e76ca857f6e65bb22d","modified":1547991543973},{"_id":"source/_posts/failed-to-start-mysql8-0-in-centos7/71982775.png","hash":"ce813040ef5113b2e93d331c7316fe5db53420c4","modified":1547992485638},{"_id":"source/_posts/failed-to-start-mysql8-0-in-centos7/75771201.png","hash":"f442d9cdeccccc851dea043c6c8b43fee558053a","modified":1547991372460},{"_id":"source/_posts/failed-to-start-mysql8-0-in-centos7/75840236.png","hash":"69b3edb17609e3a968d89e743ed1dd4fffe6f8a7","modified":1547991372461},{"_id":"source/_posts/failed-to-start-mysql8-0-in-centos7/76140575.png","hash":"79fbff8bc7ebca58bbea2c613fb3d44403c61acd","modified":1547991372462},{"_id":"source/_posts/sort-strings-in-c/sort_strings_question.jpg","hash":"cc083c22246400a43676b54947721360c4a73cfd","modified":1547373828528},{"_id":"source/_posts/ssh-failed-to-connect-centos7-in-vultr/ssh11.png","hash":"ee7381608d80ce9ece3d7c3fb2bb9e9bdea3e85f","modified":1547373828530},{"_id":"source/_posts/ssh-failed-to-connect-centos7-in-vultr/ssh7.png","hash":"1455dee16d8a74bc973b9f46df1a0ebefabded3c","modified":1547373828536},{"_id":"source/_posts/ssh-failed-to-connect-centos7-in-vultr/ssh6.png","hash":"f1f93a556a96e0525f3f7a0518e6fb0a25f37ca6","modified":1547373828535},{"_id":"source/_posts/ssh-failed-to-connect-centos7-in-vultr/ssh8.png","hash":"9de23fc8faabadd33432fc3281d3b46b9d48cccc","modified":1547373828537},{"_id":"source/images/entropy.jpg","hash":"568d802639ba6cdbd6ebbdad7c8b1180053961d1","modified":1547373828540},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1547373828570},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1547373828570},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1547373828592},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1547373828592},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1547373828592},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1547373828596},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1547373828596},{"_id":"source/_posts/Floyd/floyd_2.png","hash":"3120c7592fc78906632b2c83e4f6935aba165069","modified":1547373828519},{"_id":"source/_posts/Floyd/floyd_1.png","hash":"0717cb79e6f29c9174b6a339766c2566cbaed0b8","modified":1547373828518},{"_id":"source/_posts/Sports-Meeting/question.jpg","hash":"be7d71caec5896ad4081d09a3e1f552b86a29230","modified":1547373828524},{"_id":"source/_posts/ssh-failed-to-connect-centos7-in-vultr/ssh3.png","hash":"658d97b3c0b263bf2600911125437347b8fb7827","modified":1547373828534},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1547373828566},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1547373828567},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1547373828568},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1547373828568},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1547373828568},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1547373828568},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1547373828569},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1547373828569},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"048fd5e98149469f8c28c21ba3561a7a67952c9b","modified":1547373828569},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1547373828569},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1547373828569},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1547373828570},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"98df9d72e37dd071e882f2d5623c9d817815b139","modified":1547373828570},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1547373828570},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1547373828570},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"18e7bef8923d83ea42df6c97405e515a876cede4","modified":1547373828571},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1547373828571},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1547373828571},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"1cd01c6e92ab1913d48e556a92bb4f28b6dc4996","modified":1547373828571},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1547373828571},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"5e9bb24c750b49513d9a65799e832f07410002ac","modified":1547373828571},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"fc65b9c98a0a8ab43a5e7aabff6c5f03838e09c8","modified":1547373828571},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1547373828572},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1547373828572},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1547373828572},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1547373828572},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"c316758546dc9ba6c60cb4d852c17ca6bb6d6724","modified":1547373828572},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1547373828572},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"10160daceaa6f1ecf632323d422ebe2caae49ddf","modified":1547373828572},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1547373828573},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"aa0629277d751c55c6d973e7691bf84af9b17a60","modified":1547373828573},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"8a2e393d2e49f7bf560766d8a07cd461bf3fce4f","modified":1547373828573},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"fcabbb241f894c9a6309c44e126cf3e8fea81fd4","modified":1547373828573},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"8b6650f77fe0a824c8075b2659e0403e0c78a705","modified":1547373828573},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1547373828575},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"385c066af96bee30be2459dbec8aae1f15d382f5","modified":1547373828575},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1547373828575},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1547373828575},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"2b8852c5ab88109c0d188c05692df29785cbae22","modified":1547373828591},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1547373828591},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"9ab65361ba0a12a986edd103e56492644c2db0b8","modified":1547373828592},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"82f9055955920ed88a2ab6a20ab02169abb2c634","modified":1547373828592},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"99fbb4686ea9a3e03a4726ed7cf4d8f529034452","modified":1547373828596},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"be087dcc060e8179f7e7f60ab4feb65817bd3d9f","modified":1547373828596},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"f29165e36489a87ba32d17dddfd2720d84e3f3ec","modified":1547373828596},{"_id":"themes/next/source/css/_variables/base.styl","hash":"29c261fa6b4046322559074d75239c6b272fb8a3","modified":1547373828596},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1547373828600},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1547373828600},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1547373828600},{"_id":"themes/next/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1547373828600},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1547373828601},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1547373828601},{"_id":"themes/next/source/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1547373828601},{"_id":"themes/next/source/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1547373828601},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1547373828602},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1547373828602},{"_id":"themes/next/source/js/src/utils.js","hash":"9b1325801d27213083d1487a12b1a62b539ab6f8","modified":1547373828602},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1547373828605},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1547373828607},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1547373828607},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1547373828610},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1547373828610},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1547373828610},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1547373828610},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1547373828611},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1547373828611},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1547373828611},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1547373828611},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1547373828612},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1547373828620},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1547373828620},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1547373828620},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1547373828621},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1547373828621},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1547373828621},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1547373828621},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1547373828621},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1547373828622},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1547373828622},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1547373828622},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1547373828622},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1547373828622},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1547373828622},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1547373828623},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1547373828623},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1547373828623},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1547373828623},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1547373828623},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1547373828623},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1547373828623},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1547373828624},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1547373828624},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1547373828624},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1547373828624},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1547373828624},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1547373828624},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1547373828627},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1547373828627},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1547373828629},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1547373828629},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1547373828629},{"_id":"source/_posts/Use-Homebrew-to-Install-both-Python-2-and-3-on-Mac/sudo.jpg","hash":"95841db3c13f6174a724153f3092d46db447ebc5","modified":1548581281223},{"_id":"source/_posts/ssh-failed-to-connect-centos7-in-vultr/ssh10.png","hash":"d6034a3c860e26d81503b514de4edb4164ef47f0","modified":1547373828529},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1547373828620},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1547373828574},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1547373828574},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"4719ce717962663c5c33ef97b1119a0b3a4ecdc3","modified":1547373828579},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1547373828579},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"7e509c7c28c59f905b847304dd3d14d94b6f3b8e","modified":1547373828579},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1547373828579},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1547373828579},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"c5d48863f332ff8ce7c88dec2c893f709d7331d3","modified":1547373828582},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1547373828587},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1547373828590},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"f7c44b0ee46cf2cf82a4c9455ba8d8b55299976f","modified":1547373828590},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1547373828590},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"47a46583a1f3731157a3f53f80ed1ed5e2753e8e","modified":1547373828591},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1547373828591},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1547373828591},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1547373828591},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"18c3336ee3d09bd2da6a876e1336539f03d5a973","modified":1547373828592},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1547373828592},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1547373828593},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1547373828593},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1547373828593},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"3b25edfa187d1bbbd0d38b50dd013cef54758abf","modified":1547373828593},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1547373828593},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1547373828593},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1547373828594},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1547373828594},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"02fb8fa6b6c252b6bed469539cd057716606a787","modified":1547373828594},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1547373828594},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1547373828595},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1547373828595},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"5b93958239d3d2bf9aeaede44eced2434d784462","modified":1547373828595},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"215de948be49bcf14f06d500cef9f7035e406a43","modified":1547373828595},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1547373828595},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"9d16fa3c14ed76b71229f022b63a02fd0f580958","modified":1547373828595},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1547373828596},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1547373828601},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1547373828604},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1547373828607},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1547373828607},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1547373828607},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1547373828608},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1547373828608},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1547373828608},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1547373828609},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1547373828609},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1547373828610},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1547373828611},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1547373828611},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1547373828612},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1547373828612},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1547373828627},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1547373828627},{"_id":"source/_posts/ssh-failed-to-connect-centos7-in-vultr/ssh14.png","hash":"adbc875e75ea021ee0960924724c7375b8895dbc","modified":1547373828531},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1547373828603},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1547373828604},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1547373828612},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1547373828619},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1547373828628},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"7905a7f625702b45645d8be1268cb8af3f698c70","modified":1547373828580},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1547373828580},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1547373828580},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1547373828580},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1547373828580},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1547373828580},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1547373828580},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"25dc25f61a232f03ca72472b7852f882448ec185","modified":1547373828581},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1547373828581},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"f5aa2ba3bfffc15475e7e72a55b5c9d18609fdf5","modified":1547373828581},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1547373828581},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1547373828581},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1547373828581},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1547373828582},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1547373828582},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"0f7f522cc6bfb3401d5afd62b0fcdf48bb2d604b","modified":1547373828582},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1547373828582},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1547373828582},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"535b3b4f8cb1eec2558e094320e7dfb01f94c0e7","modified":1547373828583},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1547373828583},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"aea21141015ca8c409d8b33e3e34ec505f464e93","modified":1547373828583},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1547373828583},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"36332c8a91f089f545f3c3e8ea90d08aa4d6e60c","modified":1547373828584},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1547373828584},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1547373828584},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"d5a4e4fc17f1f7e7c3a61b52d8e2e9677e139de7","modified":1547373828584},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1547373828585},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"e4055a0d2cd2b0ad9dc55928e2f3e7bd4e499da3","modified":1547373828585},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"262debfd4442fa03d9919ceb88b948339df03fb0","modified":1547373828585},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"0a6c0efffdf18bddbc1d1238feaed282b09cd0fe","modified":1547373828585},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1547373828585},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl.360","hash":"41ce1a63adab4cd7710f8fa7e165d148c0e546bd","modified":1547373828585},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"89dd4f8b1f1cce3ad46cf2256038472712387d02","modified":1547373828586},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1547373828586},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl.bak","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1547373828586},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1547373828586},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1547373828586},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1547373828587},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"12937cae17c96c74d5c58db6cb29de3b2dfa14a2","modified":1547373828586},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"50305b6ad7d09d2ffa4854e39f41ec1f4fe984fd","modified":1547373828587},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1547373828587},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1547373828587},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1547373828588},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"37e951e734a252fe8a81f452b963df2ba90bfe90","modified":1547373828588},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1547373828588},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1547373828588},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"ee7528900578ef4753effe05b346381c40de5499","modified":1547373828588},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"32c9156bea5bac9e9ad0b4c08ffbca8b3d9aac4b","modified":1547373828588},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"4ab5deed8c3b0c338212380f678f8382672e1bcb","modified":1547373828588},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"ead0d0f2321dc71505788c7f689f92257cf14947","modified":1547373828589},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"fd42777b9125fd8969dc39d4f15473e2b91b4142","modified":1547373828589},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1547373828589},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1547373828589},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1547373828589},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"34935b40237c074be5f5e8818c14ccfd802b7439","modified":1547373828589},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1547373828590},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1547373828589},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1547373828590},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"a5e3e6b4b4b814a9fe40b34d784fed67d6d977fa","modified":1547373828590},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"1ccfbd4d0f5754b2dc2719a91245c95f547a7652","modified":1547373828590},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1547373828594},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1547373828594},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1547373828595},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1547373828602},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1547373828603},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1547373828603},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1547373828603},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1547373828603},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1547373828604},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1547373828608},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1547373828608},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1547373828608},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1547373828609},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1547373828609},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1547373828609},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1547373828619},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1547373828619},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1547373828615},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1547373828606},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1547373828614},{"_id":"source/_posts/ssh-failed-to-connect-centos7-in-vultr/ssh2.png","hash":"47025cb14cfb7f458b789c3949da16f63c7c3f02","modified":1547373828533},{"_id":"source/_posts/Use-Homebrew-to-Install-both-Python-2-and-3-on-Mac/wrong.jpg","hash":"2a7e5f3658a01edf2ff58c85ab4115513394ff59","modified":1548581378878},{"_id":"themes/next/source/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1547373828627},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1547373828617},{"_id":"public/sitemap.xml","hash":"f6d02946e7f2f65be13fb50de0e70b84a8ee6401","modified":1563266145582},{"_id":"public/about/index.html","hash":"c67ce9b2ae25306cdd737f41911270d54ec88cc9","modified":1563266145619},{"_id":"public/categories/index.html","hash":"3b8f50c4d877efb9eea6f914adbc8c61c404e1ae","modified":1563266145620},{"_id":"public/tags/index.html","hash":"b74f44b1732ac69ded554c0e14c7312fc6d38feb","modified":1563266145620},{"_id":"public/schedule/index.html","hash":"d064a5598690a78e7a631104c82fdf160b8f0018","modified":1563266145620},{"_id":"public/archives/2018/10/index.html","hash":"e500cc2fbe2330a8127e0734f0f89fafa906706f","modified":1563266145620},{"_id":"public/archives/2019/02/index.html","hash":"33fddf6a89da36337d30e3f15a9f92bb5506f203","modified":1563266145620},{"_id":"public/archives/2019/04/index.html","hash":"bd09a2bf75d51833ac172ed729b9ac62ff5b5abd","modified":1563266145620},{"_id":"public/archives/2019/06/index.html","hash":"0fb8eb8feb16c6471496bab51d7d6aca19081512","modified":1563266145620},{"_id":"public/categories/leetcode/index.html","hash":"f30a3820fc3e6bdb91b9cf10d2aeb8a37c9a1a1d","modified":1563266145620},{"_id":"public/categories/python/index.html","hash":"dee6d7f8b5959d44fcaf016dfe94fc7ac54ed332","modified":1563266145620},{"_id":"public/categories/oj/index.html","hash":"6d29fde30b51b88277d058a12bde1e72cbf76474","modified":1563266145620},{"_id":"public/categories/others/index.html","hash":"28e379e12c8923a296fc873ca05dbc3e64eeb312","modified":1563266145620},{"_id":"public/categories/linux/index.html","hash":"2f0454dbab76d113d327003db9ea75e40d4a67ac","modified":1563266145620},{"_id":"public/tags/leetcode/index.html","hash":"f231ee5d70fc4bced7826c1b9764796367130983","modified":1563266145620},{"_id":"public/tags/nlp/index.html","hash":"9814cb4069daba69dc20e49d22b2521787438f55","modified":1563266145620},{"_id":"public/tags/ml/index.html","hash":"76c7ca381f9e647435e40d3e8fc43f1b9862e38f","modified":1563266145620},{"_id":"public/tags/oj/index.html","hash":"4d90b8b74e8bad3fd03355e229e1c68fa14a5609","modified":1563266145620},{"_id":"public/12345678987654321/index.html","hash":"0b4ec0372e6a69eee5419a6a78eeb258d9b640d3","modified":1563266145621},{"_id":"public/if-else-in-Python/index.html","hash":"ab32d5130ec4c7195618a9391ef2dde97c30400a","modified":1563266145621},{"_id":"public/Use-Homebrew-to-Install-both-Python-2-and-3-on-Mac/index.html","hash":"186bd9e0382c78198009714012a70d027c900395","modified":1563266145621},{"_id":"public/method-chaining-or-cascading-in-python/index.html","hash":"21c835b86ff5a8298a682f0ff8c5aaecd059db4c","modified":1563266145621},{"_id":"public/failed-to-start-mysql8-0-in-centos7/index.html","hash":"83533a81adcc1a6ee7f0411e9caf97943d855fbd","modified":1563266145621},{"_id":"public/compare_version/index.html","hash":"0948c42643dd797224384d466305c13a1f826e25","modified":1563266145621},{"_id":"public/hello-world/index.html","hash":"17445850af9bcce6d252f41463998449a63a6644","modified":1563266145621},{"_id":"public/Generate-Verification-Code-in-Python/index.html","hash":"73a55208127fbe8fb1e010aee0450b57f7c8e2f2","modified":1563266145621},{"_id":"public/List-Files-and-Directory-Tree-Structure-in-Python/index.html","hash":"9681ca016f90a16c6ddfc210acbe125b65e03d26","modified":1563266145621},{"_id":"public/Floyd/index.html","hash":"9e00e758a271249944eed59b06d6925848746cb4","modified":1563266145621},{"_id":"public/Sports-Meeting/index.html","hash":"30ef2264fa9ceb523cd5e5b21af51ddb6892ee21","modified":1563266145621},{"_id":"public/Bitmap/index.html","hash":"dcfeebb55b877470c4975624c20d6443cc310c10","modified":1563266145621},{"_id":"public/Sort-a-Special-Array/index.html","hash":"4d949ae2d681ff5b3313c433fb644bd7454ec670","modified":1563266145621},{"_id":"public/Transformer/index.html","hash":"f78d7be0a361180bcf282b4302525d07ee2a11fb","modified":1563266145621},{"_id":"public/Similar-Strings/index.html","hash":"585db3755af5bdc4c58cf751c45b7f64f1b27077","modified":1563266145621},{"_id":"public/Data-Structure-Alignment-and-Padding-in-C/index.html","hash":"d3e6f4521f0060902fc8164b0e5fcdb09a0c1258","modified":1563266145621},{"_id":"public/remove-special-substrings-in-a-string/index.html","hash":"81a501b92919dc1305c5c1f4704cb28eedd1acd8","modified":1563266145622},{"_id":"public/system-path-of-python-in-windows-and-ubuntu/index.html","hash":"a2cb3766d989266816b0aad1a40e4074467958c5","modified":1563266145622},{"_id":"public/sort-strings-in-c/index.html","hash":"d47504b00f817db147a38109d7f93ec901977c3f","modified":1563266145622},{"_id":"public/built-in-types-in-python/index.html","hash":"6c107963fb754acf1cdab9aeb7f665642f522716","modified":1563266145622},{"_id":"public/shuffle-a-list-in-place/index.html","hash":"c03384c8f00fe66cbfaf425bbacf5c63de2d912e","modified":1563266145622},{"_id":"public/calculate-the-number-of-uppercase-letters-in-a-file/index.html","hash":"1473f3697b72691bb3a13cff1dc82e6b4ccb23c6","modified":1563266145622},{"_id":"public/callatz-conjecture/index.html","hash":"11fa60b2e6fe1c7a337f44fae06dc3349ec08a24","modified":1563266145622},{"_id":"public/Generate-0-and-1-with-Equal-Probability/index.html","hash":"3e46546b6ed6d75424f39f30011b23a1d04f26f5","modified":1563266145622},{"_id":"public/4-Ways-of-Fibonacci-in-Python/index.html","hash":"57ecd2728c7943e47512fed0900529905809f1b4","modified":1563266145622},{"_id":"public/chrome-aw-snap/index.html","hash":"b79eac66fe8ef251dfd657c70356a0a5d8fc5552","modified":1563266145622},{"_id":"public/ssh-failed-to-connect-centos7-in-vultr/index.html","hash":"7acc9c7334d01bee1b51677e2e55da9feb25db96","modified":1563266145622},{"_id":"public/lrzsz/index.html","hash":"8bda16e265353ff4fd626ba6d2e5e6fbf2f715dc","modified":1563266145622},{"_id":"public/reverse-string/index.html","hash":"ac5009069bb565721ed4c840311be684f8fbbff3","modified":1563266145622},{"_id":"public/tank/index.html","hash":"746c049cd680ab1973feb885cb8dbfa19955c27c","modified":1563266145622},{"_id":"public/calc-entropy-and-divergence/index.html","hash":"2a84e442c6f6d4b80157408a5f0001afd9a0b780","modified":1563266145622},{"_id":"public/187/index.html","hash":"5e0ce4e4ca7e4e42717d1c4360b053f70a4fe013","modified":1563266145623},{"_id":"public/fashion-ai/index.html","hash":"6311bbd37985728cac1269beca6222d33dc614d5","modified":1563266145623},{"_id":"public/linux_tips/index.html","hash":"16633096ac6717ef1dd68686a1354a0d95ae3169","modified":1563266145623},{"_id":"public/archives/index.html","hash":"2fca0a7af4286963d266dd571f0f7b1324644946","modified":1563266145623},{"_id":"public/archives/page/2/index.html","hash":"173c0e26bc6ce3b5f15ccfc38dc4fb06475f719d","modified":1563266145623},{"_id":"public/archives/page/3/index.html","hash":"11fef67193ceedb70cce3bbe709c02c9d316cf60","modified":1563266145623},{"_id":"public/archives/page/4/index.html","hash":"79a79db19ca3cc8617001edcc01d93463cff416b","modified":1563266145623},{"_id":"public/archives/2018/index.html","hash":"a71f7c170abfb7111dff54cb44166f5d1b6afae6","modified":1563266145623},{"_id":"public/archives/2018/page/2/index.html","hash":"e758fdfa0b236d252ce229fe7818720faec22fb0","modified":1563266145623},{"_id":"public/archives/2018/page/3/index.html","hash":"3d3bcd3d6fe33d6de222475fe8044d33a9367b68","modified":1563266145623},{"_id":"public/archives/2018/07/index.html","hash":"0ba0fc0a9baa6c64084e034f221daa435f21afe3","modified":1563266145624},{"_id":"public/archives/2018/11/index.html","hash":"79730c3f35afa0f9c729bc2fe2012d2caba0610f","modified":1563266145624},{"_id":"public/archives/2018/12/index.html","hash":"86dd91e8d81f7572d6884893b4ae495ac74b87d0","modified":1563266145625},{"_id":"public/archives/2019/index.html","hash":"6c84e35e35d0a32d5cf05f7fb928bf90b9528bc5","modified":1563266145625},{"_id":"public/archives/2019/01/index.html","hash":"691f00b8946fbab9989d5e98cad73e603a0b2afc","modified":1563266145625},{"_id":"public/index.html","hash":"fd4bc3b6d1824e9d0a819fe994369ef78cc0bc3f","modified":1563266145625},{"_id":"public/page/2/index.html","hash":"e3a82b94da5a9b24a2cfa2bad05657807ed75498","modified":1563266145625},{"_id":"public/page/3/index.html","hash":"dfe799d48d056c1c407bed3d7d03410e5012c644","modified":1563266145625},{"_id":"public/page/4/index.html","hash":"ec521caedf958020240be0ae1dda57c4309b51b8","modified":1563266145625},{"_id":"public/tags/python/index.html","hash":"2b971744719989c04249d377754edc09b4a53b81","modified":1563266145625},{"_id":"public/CNAME","hash":"058cbb5392a279396ef54cff0d01deb0a0b54c0e","modified":1563266145638},{"_id":"public/images/avatar.jpg","hash":"f637c7c594ac5104ead28ccf8442be8bb2a851c0","modified":1563266145638},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1563266145638},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1563266145638},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1563266145638},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1563266145638},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1563266145638},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1563266145638},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1563266145638},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1563266145638},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1563266145639},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1563266145639},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1563266145639},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1563266145639},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1563266145639},{"_id":"public/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1563266145639},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1563266145639},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1563266145639},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1563266145639},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1563266145639},{"_id":"public/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1563266145639},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1563266145639},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1563266145639},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1563266145639},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1563266145639},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1563266145639},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1563266145639},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1563266145640},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1563266145640},{"_id":"public/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1563266145640},{"_id":"public/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1563266145640},{"_id":"public/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1563266145640},{"_id":"public/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1563266145640},{"_id":"public/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1563266145640},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1563266145640},{"_id":"public/Data-Structure-Alignment-and-Padding-in-C/alignment.png","hash":"92553e69f6a0c2d1ea98c42f519d50aec511120c","modified":1563266145640},{"_id":"public/Generate-0-and-1-with-Equal-Probability/infinite_loop.jpg","hash":"e26db064ae74e05101847f6ae9370c57e3291910","modified":1563266145640},{"_id":"public/List-Files-and-Directory-Tree-Structure-in-Python/dir_structure.png","hash":"e4df59c55655a2b59e0f18bc724fd634bf0605ae","modified":1563266145640},{"_id":"public/remove-special-substrings-in-a-string/remove_substrings.png","hash":"1b3c89259cd47ffa40f92fa45571e25b2c0fdbf6","modified":1563266145640},{"_id":"public/Sort-a-Special-Array/sort.png","hash":"eb7a2c6acdf3623a130bf309a7f27aaf755cc009","modified":1563266145640},{"_id":"public/Transformer/transformer.jpg","hash":"fecfd25865b23601068e8f92f38dc1db1bf3d413","modified":1563266145640},{"_id":"public/Floyd/floyd.png","hash":"f0ed92675b3b5566cf69d3fd9a59225b47178759","modified":1563266145640},{"_id":"public/4-Ways-of-Fibonacci-in-Python/spiral.jpg","hash":"fe06d4f5b9c23805d2520c850a970a2493c31893","modified":1563266145640},{"_id":"public/4-Ways-of-Fibonacci-in-Python/fibonacci_time_2.png","hash":"93cef131e1dad6143c48d127060c0b0370af5c6c","modified":1563266145640},{"_id":"public/Generate-Verification-Code-in-Python/ord.png","hash":"b37fc49e1d9e75ca54cb43bda9cc570da00fcc8b","modified":1563266145641},{"_id":"public/Sports-Meeting/answer2.png","hash":"452b013429e47e792228ef49c72706350f9c7f54","modified":1563266145641},{"_id":"public/Use-Homebrew-to-Install-both-Python-2-and-3-on-Mac/activate.jpg","hash":"01ccc6baddcbcfafe2323cfc06c7e7b2530fa8c5","modified":1563266145641},{"_id":"public/Use-Homebrew-to-Install-both-Python-2-and-3-on-Mac/deactivate.jpg","hash":"72bee20a92f9f78ca1425266cdf687f177dd2de6","modified":1563266145641},{"_id":"public/ssh-failed-to-connect-centos7-in-vultr/ssh1.png","hash":"d71ea9cf8e824b3df3bed3716ab826e41d90d810","modified":1563266145641},{"_id":"public/ssh-failed-to-connect-centos7-in-vultr/ssh12.png","hash":"f799e57513d029dedf0098dfbbe4221de10a59bf","modified":1563266145641},{"_id":"public/ssh-failed-to-connect-centos7-in-vultr/ssh13.png","hash":"dec7d83788eecdbe2f3f951396f71bd885d33d8d","modified":1563266145641},{"_id":"public/ssh-failed-to-connect-centos7-in-vultr/ssh4.jpg","hash":"a5a9dce69b906e7f1a25500450bcdbe2347b3bd0","modified":1563266145641},{"_id":"public/ssh-failed-to-connect-centos7-in-vultr/ssh5.png","hash":"47b5fa1cf6dbb084609216e46868e63f50a99229","modified":1563266145641},{"_id":"public/ssh-failed-to-connect-centos7-in-vultr/ssh9.png","hash":"9bba11e2cf99cf0cca233ce6460a8560845938d3","modified":1563266145641},{"_id":"public/failed-to-start-mysql8-0-in-centos7/35968830.png","hash":"81531ec945f197033ae4f262a217ba4f15bb9987","modified":1563266145641},{"_id":"public/failed-to-start-mysql8-0-in-centos7/36006075.png","hash":"782d7cbbc93f843206cf67363d061df3fbe6a6e5","modified":1563266145641},{"_id":"public/failed-to-start-mysql8-0-in-centos7/36201778.png","hash":"e9b1316409e164cc16d1686e4eb983a8f53f7dd3","modified":1563266145641},{"_id":"public/failed-to-start-mysql8-0-in-centos7/71918674.png","hash":"bac394e227473c0d76b39edd444cb8cf240871db","modified":1563266145641},{"_id":"public/failed-to-start-mysql8-0-in-centos7/71003550.png","hash":"d548c206b5bff6d6265c14da90190f059ee7f226","modified":1563266145641},{"_id":"public/failed-to-start-mysql8-0-in-centos7/72127872.png","hash":"6a73f3f69682292f06b2d87a74f08cc2893b002b","modified":1563266145641},{"_id":"public/failed-to-start-mysql8-0-in-centos7/72326504.png","hash":"c5efa550a7d6d9400d5a84d636f5e8ba88e0585f","modified":1563266145642},{"_id":"public/failed-to-start-mysql8-0-in-centos7/75749952.png","hash":"7949b701ec436bef3eeacf58a699f24d840ff659","modified":1563266145642},{"_id":"public/failed-to-start-mysql8-0-in-centos7/vultr_hardinfo.jpg","hash":"b62cb6abb890897d5f9f2612e00af09988f04d13","modified":1563266145642},{"_id":"public/failed-to-start-mysql8-0-in-centos7/76232995.png","hash":"3df9826e61c3f9f8be6224c8541c50fee80d9a1a","modified":1563266145642},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1563266146073},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1563266146078},{"_id":"public/Similar-Strings/similar_strings.png","hash":"9029d7d354655fd743b9b1d120fb38f5423c501d","modified":1563266146079},{"_id":"public/4-Ways-of-Fibonacci-in-Python/fibonacci_time.png","hash":"b34bbd535ac8a0ebaedf23f68cfae14cd7672975","modified":1563266146079},{"_id":"public/sort-strings-in-c/sort_strings_question.jpg","hash":"cc083c22246400a43676b54947721360c4a73cfd","modified":1563266146079},{"_id":"public/Generate-Verification-Code-in-Python/chr.png","hash":"03aac0993b25f5afd3208e6c793f95e311004643","modified":1563266146079},{"_id":"public/Sports-Meeting/answer.png","hash":"b77e3e70554af8eec301825661e0aff4880af70d","modified":1563266146079},{"_id":"public/Use-Homebrew-to-Install-both-Python-2-and-3-on-Mac/wrong2.jpg","hash":"64c9158bf40aefdf1d1f17320c56fdbb29b38e17","modified":1563266146079},{"_id":"public/ssh-failed-to-connect-centos7-in-vultr/ssh11.png","hash":"ee7381608d80ce9ece3d7c3fb2bb9e9bdea3e85f","modified":1563266146079},{"_id":"public/ssh-failed-to-connect-centos7-in-vultr/ssh7.png","hash":"1455dee16d8a74bc973b9f46df1a0ebefabded3c","modified":1563266146079},{"_id":"public/ssh-failed-to-connect-centos7-in-vultr/ssh6.png","hash":"f1f93a556a96e0525f3f7a0518e6fb0a25f37ca6","modified":1563266146079},{"_id":"public/ssh-failed-to-connect-centos7-in-vultr/ssh8.png","hash":"9de23fc8faabadd33432fc3281d3b46b9d48cccc","modified":1563266146080},{"_id":"public/failed-to-start-mysql8-0-in-centos7/36115949.png","hash":"649f7a1483ebeccd3b0720e76ca857f6e65bb22d","modified":1563266146080},{"_id":"public/failed-to-start-mysql8-0-in-centos7/71982775.png","hash":"ce813040ef5113b2e93d331c7316fe5db53420c4","modified":1563266146080},{"_id":"public/failed-to-start-mysql8-0-in-centos7/75771201.png","hash":"f442d9cdeccccc851dea043c6c8b43fee558053a","modified":1563266146080},{"_id":"public/failed-to-start-mysql8-0-in-centos7/75840236.png","hash":"69b3edb17609e3a968d89e743ed1dd4fffe6f8a7","modified":1563266146080},{"_id":"public/failed-to-start-mysql8-0-in-centos7/76140575.png","hash":"79fbff8bc7ebca58bbea2c613fb3d44403c61acd","modified":1563266146080},{"_id":"public/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1563266146089},{"_id":"public/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1563266146090},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1563266146090},{"_id":"public/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1563266146091},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1563266146091},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1563266146091},{"_id":"public/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1563266146091},{"_id":"public/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1563266146091},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1563266146091},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1563266146091},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1563266146091},{"_id":"public/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1563266146091},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1563266146091},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1563266146091},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1563266146091},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1563266146091},{"_id":"public/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1563266146092},{"_id":"public/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1563266146092},{"_id":"public/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1563266146092},{"_id":"public/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1563266146092},{"_id":"public/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1563266146092},{"_id":"public/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1563266146092},{"_id":"public/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1563266146092},{"_id":"public/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1563266146092},{"_id":"public/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1563266146092},{"_id":"public/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1563266146092},{"_id":"public/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1563266146092},{"_id":"public/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1563266146092},{"_id":"public/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1563266146093},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1563266146093},{"_id":"public/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1563266146093},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1563266146093},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1563266146093},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1563266146093},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1563266146093},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1563266146093},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1563266146093},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1563266146093},{"_id":"public/lib/fastclick/README.html","hash":"c5a4c05ca80132b7e343d5fd1d1d1a976b4ad151","modified":1563266146093},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"81057e5b518b8ab60474e1ad027e868b558f15b7","modified":1563266146093},{"_id":"public/lib/jquery_lazyload/README.html","hash":"18a600ca1aafd3bf08af52b6a6fe5f056aeed9f4","modified":1563266146093},{"_id":"public/css/main.css","hash":"53fac1d80888fe93fff054860f55915638f19e27","modified":1563266146093},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1563266146093},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1563266146093},{"_id":"public/Floyd/floyd_1.png","hash":"0717cb79e6f29c9174b6a339766c2566cbaed0b8","modified":1563266146093},{"_id":"public/Floyd/floyd_2.png","hash":"3120c7592fc78906632b2c83e4f6935aba165069","modified":1563266146093},{"_id":"public/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1563266146104},{"_id":"public/js/src/utils.js","hash":"9b1325801d27213083d1487a12b1a62b539ab6f8","modified":1563266146104},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1563266146104},{"_id":"public/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1563266146104},{"_id":"public/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1563266146104},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1563266146105},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1563266146105},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1563266146105},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1563266146105},{"_id":"public/Sports-Meeting/question.jpg","hash":"be7d71caec5896ad4081d09a3e1f552b86a29230","modified":1563266146105},{"_id":"public/Use-Homebrew-to-Install-both-Python-2-and-3-on-Mac/sudo.jpg","hash":"95841db3c13f6174a724153f3092d46db447ebc5","modified":1563266146105},{"_id":"public/ssh-failed-to-connect-centos7-in-vultr/ssh10.png","hash":"d6034a3c860e26d81503b514de4edb4164ef47f0","modified":1563266146105},{"_id":"public/Generate-Verification-Code-in-Python/random.sample.png","hash":"05790ed8f57d4300de9c6ad9258eff20d661d741","modified":1563266146106},{"_id":"public/ssh-failed-to-connect-centos7-in-vultr/ssh3.png","hash":"658d97b3c0b263bf2600911125437347b8fb7827","modified":1563266146106},{"_id":"public/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1563266146110},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1563266146110},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1563266146116},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1563266146116},{"_id":"public/images/entropy.jpg","hash":"568d802639ba6cdbd6ebbdad7c8b1180053961d1","modified":1563266146118},{"_id":"public/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1563266146128},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1563266146128},{"_id":"public/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1563266146129},{"_id":"public/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1563266146130},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1563266146130},{"_id":"public/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1563266146130},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1563266146130},{"_id":"public/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1563266146135},{"_id":"public/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1563266146135},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1563266146135},{"_id":"public/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1563266146138},{"_id":"public/ssh-failed-to-connect-centos7-in-vultr/ssh14.png","hash":"adbc875e75ea021ee0960924724c7375b8895dbc","modified":1563266146142},{"_id":"public/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1563266146148},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1563266146148},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1563266146151},{"_id":"public/Use-Homebrew-to-Install-both-Python-2-and-3-on-Mac/wrong.jpg","hash":"2a7e5f3658a01edf2ff58c85ab4115513394ff59","modified":1563266146152},{"_id":"public/ssh-failed-to-connect-centos7-in-vultr/ssh2.png","hash":"47025cb14cfb7f458b789c3949da16f63c7c3f02","modified":1563266146152},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1563266146156},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1563266146164},{"_id":"public/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1563266146168}],"Category":[{"name":"leetcode","_id":"cjy5kaqtl00065ge8etd98tei"},{"name":"python","_id":"cjy5kaquk000r5ge82vkqxovm"},{"name":"oj","_id":"cjy5kaquo000y5ge8m4d63sds"},{"name":"others","_id":"cjy5kaqur00165ge8xpzw15d8"},{"name":"linux","_id":"cjy5kaqut001d5ge8whez5l1g"}],"Data":[],"Page":[{"title":"about","date":"2018-07-23T07:55:12.000Z","categories":null,"_content":"","source":"about/index.md","raw":"---\ntitle: about\ndate: 2018-07-23 15:55:12\ncategories:\n---\n","updated":"2019-01-13T10:03:48.538Z","path":"about/index.html","comments":1,"layout":"page","_id":"cjy5kaqta00005ge8tb58ogl5","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"All categories","date":"2018-07-23T03:47:16.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: All categories\ndate: 2018-07-23 11:47:16\ntype: \"categories\"\n---\n","updated":"2019-01-13T10:03:48.538Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cjy5kaqtg00025ge84lrslvdc","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"All tags","date":"2018-07-23T07:45:30.000Z","type":"tags","categories":null,"_content":"","source":"tags/index.md","raw":"---\ntitle: All tags\ndate: 2018-07-23 15:45:30\ntype: \"tags\"\ncategories:\n---\n","updated":"2019-01-13T10:03:48.540Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cjy5kaqtj00045ge8c6042ext","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"schedule","date":"2018-07-27T10:01:30.000Z","categories":null,"_content":"","source":"schedule/index.md","raw":"---\ntitle: schedule\ndate: 2018-07-27 18:01:30\ncategories:\n---\n","updated":"2019-01-13T10:03:48.540Z","path":"schedule/index.html","comments":1,"layout":"page","_id":"cjy5kaqto00085ge882vittbe","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"12345678987654320","date":"2019-06-02T06:07:30.000Z","_content":"# 题目\n假设可以不考虑计算机运行资源（如内存、堆栈）的限制，以下Python3代码预期的输出结果是\n```python3\ndef rec(n):\n    if n < 2:\n        return 1\n    return rec(n // 2) + rec(n // 4)\nprint(rec(12345678987654321))\n```\nprint(rec(123456789))可以很容易跑出结果317811，但是print(rec(12345678987654321))运行了一晚上也没出来结果。\nPS. 题目来自朋友圈一个同学去360的面试题。\n# 联想\n递归是有规律的。联想到高中的数学归纳法，可以从小的数据慢慢往后推倒。从小数字推到大数字。\n有点逆向思维的意思。题目中的递归是从大数字慢慢推到小数字，直至递归出口。\n# 找规律\n(0) = 1\n(1) = 1\n(2) = (1) + (0) = 1 + 1 = 2\n(3) = (1) + (0) = 1 + 1 = 2\n(4) = (2) + (1) = 3\n(5) = (2) + (1) = 3\n(6) = (3) + (1) = 3\n(7) = (3) + (1) = 3\n(8) = (4) + (2) = 5\n...\n写多了就会发现规律：把该数转化为二进制数。二进制数的长度相同，则结果相同。其实，除以2和除以4也能看出，大概跟二进制有关系。\n# 思考\n把一个十进制的数n表示成二进制数为abcde...xyz，它的rec应该是去掉末一位abcde...xy的rec加上去掉末两位abcde...x的rec，即\nrec(abcde...xyz) = rec(abcde...xy) + rec(abcde...x)\n似曾相识的感觉！有点像斐波那契数列！是变形的斐波那契数列！是关于二进制数长度的斐波那契数列，即斐波那契数列的下标是二进制数的长度。\n# 转化为迭代\n```python\n#! /usr/bin/env python\nfrom math import log\n# n = 123456789\nn = 12345678987654321\nlength = int(log(n, 2)) + 1\na, b = 0, 1\nfor i in range(length):\n    a, b = b, a + b\nprint b\n```\noutput: 139583862445\n```python\nIn [1]: bin(8)\nOut[1]: '0b1000'\n# 结果是字符串，但有0b标识为二进制\n```\n# 总结\n可以使用较小的数，两个代码同时运行，验证结果。\n再大的数n，也可以迅速算出结果。因为知道n对应的二进制数有多少位即可。\n# 启示\n1、有时问题比较抽象，可以举几个简单的例子，实际笔算一下，感受一下过程，说不准灵感就来了。\n2、有时候思考了很久还没有结果，那就直接去找答案吧，避免长时间的挫败感。说不准会有醍醐灌顶的效果。\n3、有的题目可能会有多种解法。多种解法综合比较一下，或许有意想不到的收获。\n4、思考的过程是值得的，沿途的风景会很美！慢慢培养成就感~\n","source":"_posts/12345678987654321.md","raw":"---\ntitle: 12345678987654321\ndate: 2019-06-02 14:07:30\ncategories:\ntags:\n---\n# 题目\n假设可以不考虑计算机运行资源（如内存、堆栈）的限制，以下Python3代码预期的输出结果是\n```python3\ndef rec(n):\n    if n < 2:\n        return 1\n    return rec(n // 2) + rec(n // 4)\nprint(rec(12345678987654321))\n```\nprint(rec(123456789))可以很容易跑出结果317811，但是print(rec(12345678987654321))运行了一晚上也没出来结果。\nPS. 题目来自朋友圈一个同学去360的面试题。\n# 联想\n递归是有规律的。联想到高中的数学归纳法，可以从小的数据慢慢往后推倒。从小数字推到大数字。\n有点逆向思维的意思。题目中的递归是从大数字慢慢推到小数字，直至递归出口。\n# 找规律\n(0) = 1\n(1) = 1\n(2) = (1) + (0) = 1 + 1 = 2\n(3) = (1) + (0) = 1 + 1 = 2\n(4) = (2) + (1) = 3\n(5) = (2) + (1) = 3\n(6) = (3) + (1) = 3\n(7) = (3) + (1) = 3\n(8) = (4) + (2) = 5\n...\n写多了就会发现规律：把该数转化为二进制数。二进制数的长度相同，则结果相同。其实，除以2和除以4也能看出，大概跟二进制有关系。\n# 思考\n把一个十进制的数n表示成二进制数为abcde...xyz，它的rec应该是去掉末一位abcde...xy的rec加上去掉末两位abcde...x的rec，即\nrec(abcde...xyz) = rec(abcde...xy) + rec(abcde...x)\n似曾相识的感觉！有点像斐波那契数列！是变形的斐波那契数列！是关于二进制数长度的斐波那契数列，即斐波那契数列的下标是二进制数的长度。\n# 转化为迭代\n```python\n#! /usr/bin/env python\nfrom math import log\n# n = 123456789\nn = 12345678987654321\nlength = int(log(n, 2)) + 1\na, b = 0, 1\nfor i in range(length):\n    a, b = b, a + b\nprint b\n```\noutput: 139583862445\n```python\nIn [1]: bin(8)\nOut[1]: '0b1000'\n# 结果是字符串，但有0b标识为二进制\n```\n# 总结\n可以使用较小的数，两个代码同时运行，验证结果。\n再大的数n，也可以迅速算出结果。因为知道n对应的二进制数有多少位即可。\n# 启示\n1、有时问题比较抽象，可以举几个简单的例子，实际笔算一下，感受一下过程，说不准灵感就来了。\n2、有时候思考了很久还没有结果，那就直接去找答案吧，避免长时间的挫败感。说不准会有醍醐灌顶的效果。\n3、有的题目可能会有多种解法。多种解法综合比较一下，或许有意想不到的收获。\n4、思考的过程是值得的，沿途的风景会很美！慢慢培养成就感~\n","slug":"12345678987654321","published":1,"updated":"2019-06-02T06:14:42.928Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjy5kaqtc00015ge8b281tnhu","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>假设可以不考虑计算机运行资源（如内存、堆栈）的限制，以下Python3代码预期的输出结果是</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">def rec(n):</span><br><span class=\"line\">    if n &lt; 2:</span><br><span class=\"line\">        return 1</span><br><span class=\"line\">    return rec(n // 2) + rec(n // 4)</span><br><span class=\"line\">print(rec(12345678987654321))</span><br></pre></td></tr></table></figure>\n\n<p>print(rec(123456789))可以很容易跑出结果317811，但是print(rec(12345678987654321))运行了一晚上也没出来结果。<br>PS. 题目来自朋友圈一个同学去360的面试题。</p>\n<h1 id=\"联想\"><a href=\"#联想\" class=\"headerlink\" title=\"联想\"></a>联想</h1><p>递归是有规律的。联想到高中的数学归纳法，可以从小的数据慢慢往后推倒。从小数字推到大数字。<br>有点逆向思维的意思。题目中的递归是从大数字慢慢推到小数字，直至递归出口。</p>\n<h1 id=\"找规律\"><a href=\"#找规律\" class=\"headerlink\" title=\"找规律\"></a>找规律</h1><p>(0) = 1<br>(1) = 1<br>(2) = (1) + (0) = 1 + 1 = 2<br>(3) = (1) + (0) = 1 + 1 = 2<br>(4) = (2) + (1) = 3<br>(5) = (2) + (1) = 3<br>(6) = (3) + (1) = 3<br>(7) = (3) + (1) = 3<br>(8) = (4) + (2) = 5<br>…<br>写多了就会发现规律：把该数转化为二进制数。二进制数的长度相同，则结果相同。其实，除以2和除以4也能看出，大概跟二进制有关系。</p>\n<h1 id=\"思考\"><a href=\"#思考\" class=\"headerlink\" title=\"思考\"></a>思考</h1><p>把一个十进制的数n表示成二进制数为abcde…xyz，它的rec应该是去掉末一位abcde…xy的rec加上去掉末两位abcde…x的rec，即<br>rec(abcde…xyz) = rec(abcde…xy) + rec(abcde…x)<br>似曾相识的感觉！有点像斐波那契数列！是变形的斐波那契数列！是关于二进制数长度的斐波那契数列，即斐波那契数列的下标是二进制数的长度。</p>\n<h1 id=\"转化为迭代\"><a href=\"#转化为迭代\" class=\"headerlink\" title=\"转化为迭代\"></a>转化为迭代</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#! /usr/bin/env python</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> math <span class=\"keyword\">import</span> log</span><br><span class=\"line\"><span class=\"comment\"># n = 123456789</span></span><br><span class=\"line\">n = <span class=\"number\">12345678987654321</span></span><br><span class=\"line\">length = int(log(n, <span class=\"number\">2</span>)) + <span class=\"number\">1</span></span><br><span class=\"line\">a, b = <span class=\"number\">0</span>, <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(length):</span><br><span class=\"line\">    a, b = b, a + b</span><br><span class=\"line\"><span class=\"keyword\">print</span> b</span><br></pre></td></tr></table></figure>\n\n<p>output: 139583862445</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">In [<span class=\"number\">1</span>]: bin(<span class=\"number\">8</span>)</span><br><span class=\"line\">Out[<span class=\"number\">1</span>]: <span class=\"string\">'0b1000'</span></span><br><span class=\"line\"><span class=\"comment\"># 结果是字符串，但有0b标识为二进制</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>可以使用较小的数，两个代码同时运行，验证结果。<br>再大的数n，也可以迅速算出结果。因为知道n对应的二进制数有多少位即可。</p>\n<h1 id=\"启示\"><a href=\"#启示\" class=\"headerlink\" title=\"启示\"></a>启示</h1><p>1、有时问题比较抽象，可以举几个简单的例子，实际笔算一下，感受一下过程，说不准灵感就来了。<br>2、有时候思考了很久还没有结果，那就直接去找答案吧，避免长时间的挫败感。说不准会有醍醐灌顶的效果。<br>3、有的题目可能会有多种解法。多种解法综合比较一下，或许有意想不到的收获。<br>4、思考的过程是值得的，沿途的风景会很美！慢慢培养成就感~</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>假设可以不考虑计算机运行资源（如内存、堆栈）的限制，以下Python3代码预期的输出结果是</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">def rec(n):</span><br><span class=\"line\">    if n &lt; 2:</span><br><span class=\"line\">        return 1</span><br><span class=\"line\">    return rec(n // 2) + rec(n // 4)</span><br><span class=\"line\">print(rec(12345678987654321))</span><br></pre></td></tr></table></figure>\n\n<p>print(rec(123456789))可以很容易跑出结果317811，但是print(rec(12345678987654321))运行了一晚上也没出来结果。<br>PS. 题目来自朋友圈一个同学去360的面试题。</p>\n<h1 id=\"联想\"><a href=\"#联想\" class=\"headerlink\" title=\"联想\"></a>联想</h1><p>递归是有规律的。联想到高中的数学归纳法，可以从小的数据慢慢往后推倒。从小数字推到大数字。<br>有点逆向思维的意思。题目中的递归是从大数字慢慢推到小数字，直至递归出口。</p>\n<h1 id=\"找规律\"><a href=\"#找规律\" class=\"headerlink\" title=\"找规律\"></a>找规律</h1><p>(0) = 1<br>(1) = 1<br>(2) = (1) + (0) = 1 + 1 = 2<br>(3) = (1) + (0) = 1 + 1 = 2<br>(4) = (2) + (1) = 3<br>(5) = (2) + (1) = 3<br>(6) = (3) + (1) = 3<br>(7) = (3) + (1) = 3<br>(8) = (4) + (2) = 5<br>…<br>写多了就会发现规律：把该数转化为二进制数。二进制数的长度相同，则结果相同。其实，除以2和除以4也能看出，大概跟二进制有关系。</p>\n<h1 id=\"思考\"><a href=\"#思考\" class=\"headerlink\" title=\"思考\"></a>思考</h1><p>把一个十进制的数n表示成二进制数为abcde…xyz，它的rec应该是去掉末一位abcde…xy的rec加上去掉末两位abcde…x的rec，即<br>rec(abcde…xyz) = rec(abcde…xy) + rec(abcde…x)<br>似曾相识的感觉！有点像斐波那契数列！是变形的斐波那契数列！是关于二进制数长度的斐波那契数列，即斐波那契数列的下标是二进制数的长度。</p>\n<h1 id=\"转化为迭代\"><a href=\"#转化为迭代\" class=\"headerlink\" title=\"转化为迭代\"></a>转化为迭代</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#! /usr/bin/env python</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> math <span class=\"keyword\">import</span> log</span><br><span class=\"line\"><span class=\"comment\"># n = 123456789</span></span><br><span class=\"line\">n = <span class=\"number\">12345678987654321</span></span><br><span class=\"line\">length = int(log(n, <span class=\"number\">2</span>)) + <span class=\"number\">1</span></span><br><span class=\"line\">a, b = <span class=\"number\">0</span>, <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(length):</span><br><span class=\"line\">    a, b = b, a + b</span><br><span class=\"line\"><span class=\"keyword\">print</span> b</span><br></pre></td></tr></table></figure>\n\n<p>output: 139583862445</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">In [<span class=\"number\">1</span>]: bin(<span class=\"number\">8</span>)</span><br><span class=\"line\">Out[<span class=\"number\">1</span>]: <span class=\"string\">'0b1000'</span></span><br><span class=\"line\"><span class=\"comment\"># 结果是字符串，但有0b标识为二进制</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>可以使用较小的数，两个代码同时运行，验证结果。<br>再大的数n，也可以迅速算出结果。因为知道n对应的二进制数有多少位即可。</p>\n<h1 id=\"启示\"><a href=\"#启示\" class=\"headerlink\" title=\"启示\"></a>启示</h1><p>1、有时问题比较抽象，可以举几个简单的例子，实际笔算一下，感受一下过程，说不准灵感就来了。<br>2、有时候思考了很久还没有结果，那就直接去找答案吧，避免长时间的挫败感。说不准会有醍醐灌顶的效果。<br>3、有的题目可能会有多种解法。多种解法综合比较一下，或许有意想不到的收获。<br>4、思考的过程是值得的，沿途的风景会很美！慢慢培养成就感~</p>\n"},{"title":"187. Repeated DNA Sequences","date":"2018-07-26T15:44:14.000Z","_content":"\n# Repeated DNA Sequences\n```python\n#! /usr/bin/python\n\nclass Solution(object):\n    def findRepeatedDnaSequences(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: List[str]\n        \"\"\"\n#        print s\n        l = len(s)\n#        print l\n        dict = {}        \n        for i in range(l-9):\n#            print i        \n            substr = s[i:i+10]\n            if dict.has_key(substr):\n                dict[substr] = dict[substr] + 1\n            else:\n                dict[substr] = 1\n\n#        print dict\n        \n        list = []\n        for keys in dict.keys():\n#            print keys\n            if dict[keys] > 1:\n                list.append(keys)\n\n        print list\n        return list\n\nif __name__ == \"__main__\":\n    S = Solution()\n    s = raw_input()\n    S.findRepeatedDnaSequences(s)\n\n```\n","source":"_posts/187.md","raw":"---\ntitle: 187. Repeated DNA Sequences\ndate: 2018-07-26 23:44:14\ncategories: leetcode\ntags: [python, leetcode]\n---\n\n# Repeated DNA Sequences\n```python\n#! /usr/bin/python\n\nclass Solution(object):\n    def findRepeatedDnaSequences(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: List[str]\n        \"\"\"\n#        print s\n        l = len(s)\n#        print l\n        dict = {}        \n        for i in range(l-9):\n#            print i        \n            substr = s[i:i+10]\n            if dict.has_key(substr):\n                dict[substr] = dict[substr] + 1\n            else:\n                dict[substr] = 1\n\n#        print dict\n        \n        list = []\n        for keys in dict.keys():\n#            print keys\n            if dict[keys] > 1:\n                list.append(keys)\n\n        print list\n        return list\n\nif __name__ == \"__main__\":\n    S = Solution()\n    s = raw_input()\n    S.findRepeatedDnaSequences(s)\n\n```\n","slug":"187","published":1,"updated":"2019-01-13T10:03:48.515Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjy5kaqth00035ge8h2kgnrxh","content":"<h1 id=\"Repeated-DNA-Sequences\"><a href=\"#Repeated-DNA-Sequences\" class=\"headerlink\" title=\"Repeated DNA Sequences\"></a>Repeated DNA Sequences</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#! /usr/bin/python</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span><span class=\"params\">(object)</span>:</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">findRepeatedDnaSequences</span><span class=\"params\">(self, s)</span>:</span></span><br><span class=\"line\">        <span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">        :type s: str</span></span><br><span class=\"line\"><span class=\"string\">        :rtype: List[str]</span></span><br><span class=\"line\"><span class=\"string\">        \"\"\"</span></span><br><span class=\"line\"><span class=\"comment\">#        print s</span></span><br><span class=\"line\">        l = len(s)</span><br><span class=\"line\"><span class=\"comment\">#        print l</span></span><br><span class=\"line\">        dict = &#123;&#125;        </span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(l<span class=\"number\">-9</span>):</span><br><span class=\"line\"><span class=\"comment\">#            print i        </span></span><br><span class=\"line\">            substr = s[i:i+<span class=\"number\">10</span>]</span><br><span class=\"line\">            <span class=\"keyword\">if</span> dict.has_key(substr):</span><br><span class=\"line\">                dict[substr] = dict[substr] + <span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                dict[substr] = <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#        print dict</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        list = []</span><br><span class=\"line\">        <span class=\"keyword\">for</span> keys <span class=\"keyword\">in</span> dict.keys():</span><br><span class=\"line\"><span class=\"comment\">#            print keys</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> dict[keys] &gt; <span class=\"number\">1</span>:</span><br><span class=\"line\">                list.append(keys)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">print</span> list</span><br><span class=\"line\">        <span class=\"keyword\">return</span> list</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">\"__main__\"</span>:</span><br><span class=\"line\">    S = Solution()</span><br><span class=\"line\">    s = raw_input()</span><br><span class=\"line\">    S.findRepeatedDnaSequences(s)</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Repeated-DNA-Sequences\"><a href=\"#Repeated-DNA-Sequences\" class=\"headerlink\" title=\"Repeated DNA Sequences\"></a>Repeated DNA Sequences</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#! /usr/bin/python</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span><span class=\"params\">(object)</span>:</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">findRepeatedDnaSequences</span><span class=\"params\">(self, s)</span>:</span></span><br><span class=\"line\">        <span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">        :type s: str</span></span><br><span class=\"line\"><span class=\"string\">        :rtype: List[str]</span></span><br><span class=\"line\"><span class=\"string\">        \"\"\"</span></span><br><span class=\"line\"><span class=\"comment\">#        print s</span></span><br><span class=\"line\">        l = len(s)</span><br><span class=\"line\"><span class=\"comment\">#        print l</span></span><br><span class=\"line\">        dict = &#123;&#125;        </span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(l<span class=\"number\">-9</span>):</span><br><span class=\"line\"><span class=\"comment\">#            print i        </span></span><br><span class=\"line\">            substr = s[i:i+<span class=\"number\">10</span>]</span><br><span class=\"line\">            <span class=\"keyword\">if</span> dict.has_key(substr):</span><br><span class=\"line\">                dict[substr] = dict[substr] + <span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                dict[substr] = <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#        print dict</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        list = []</span><br><span class=\"line\">        <span class=\"keyword\">for</span> keys <span class=\"keyword\">in</span> dict.keys():</span><br><span class=\"line\"><span class=\"comment\">#            print keys</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> dict[keys] &gt; <span class=\"number\">1</span>:</span><br><span class=\"line\">                list.append(keys)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">print</span> list</span><br><span class=\"line\">        <span class=\"keyword\">return</span> list</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">\"__main__\"</span>:</span><br><span class=\"line\">    S = Solution()</span><br><span class=\"line\">    s = raw_input()</span><br><span class=\"line\">    S.findRepeatedDnaSequences(s)</span><br></pre></td></tr></table></figure>\n\n"},{"title":"4 Ways of Fibonacci in Python","date":"2018-11-12T11:28:20.000Z","_content":"![](spiral.jpg)\n```python\nimport numpy\nimport time\n\nclass Solution:\n    '''1.递归法'''\n    def fib_recur(self, n):\n        assert n >= 0, \"n >= 0\"\n        if n in (0, 1):\n            return n\n        return self.fib_recur(n - 1) + self.fib_recur(n - 2)\n\n    '''2.memorization'''\n    memo = {0: 0, 1: 1}\n    def fib_recur_memo(self, n):\n        if not n in Solution.memo:\n            Solution.memo[n] = self.fib_recur_memo(n-1) + self.fib_recur_memo(n-2)\n        return Solution.memo[n]\n\n    '''3.递推法'''\n    def fib_loop(self, n):\n        a, b = 0, 1\n        for i in range(n):\n            a, b = b, a + b\n        return a\n\n    '''4.yield'''\n    def fib_yield(self, n):\n        a, b = 0, 1\n        for i in range(n):\n            a, b = b, a + b\n        yield a\n\n    '''5.矩阵法'''  # numpy\n    def fib_matr(self, n):\n        res = (numpy.matrix([[1, 1], [1, 0]]) ** (n - 1) * numpy.matrix([[1], [0]]))\n        return res[0, 0]\n\n    '''6.矩阵法''' # pow\n    def fib_matr_pow(self, n):\n        res = pow(numpy.matrix([[1, 1], [1, 0]]), n - 1) * numpy.matrix([[1], [0]])\n        return res[0, 0]\n\n'''7.类实现内部魔法方法'''\nclass Fibonacci(object):\n    def __init__(self, num):\n        self.num = num\n\n    def __iter__(self):\n        if self.num < 1:\n            return 1\n        a, b = 0, 1\n        while self.num > 0:\n            a, b = a + b, a\n            self.num -= 1\n        yield a\n\n    def __next__(self):\n        return self.__iter__()\n\nif __name__ == \"__main__\":\n    n = 45\n    t1 = time.clock()\n    print(Solution().fib_recur(n))\n    t2 = time.clock()\n    print(\"recursion time : \", t2 -t1)\n\n    t1 = time.clock()\n    print(Solution().fib_recur_memo(n))\n    t2 = time.clock()\n    print(\"recursion memo time : \", t2 - t1)\n\n    t1 = time.clock()\n    print(Solution().fib_loop(n))\n    t2 = time.clock()\n    print(\"loop time : \", t2 - t1)\n\n    t1 = time.clock()\n    print(Solution().fib_yield(n).__next__())\n    t2 = time.clock()\n    print(\"yield time : \", t2 - t1)\n\n    t1 = time.clock()\n    print(Solution().fib_matr(n))\n    t2 = time.clock()\n    print(\"matrix time : \", t2 - t1)\n\n    t1 = time.clock()\n    print(Solution().fib_matr_pow(n))\n    t2 = time.clock()\n    print(\"matrix (pow) time : \", t2 - t1)\n\n    t1 = time.clock()\n    print(Fibonacci(n).__iter__().__next__())\n    t2 = time.clock()\n    print(\"class time : \", t2 - t1)\n```\n![](fibonacci_time_2.png)\n","source":"_posts/4-Ways-of-Fibonacci-in-Python.md","raw":"---\ntitle: 4 Ways of Fibonacci in Python\ndate: 2018-11-12 19:28:20\ncategories:\ntags:\n---\n![](spiral.jpg)\n```python\nimport numpy\nimport time\n\nclass Solution:\n    '''1.递归法'''\n    def fib_recur(self, n):\n        assert n >= 0, \"n >= 0\"\n        if n in (0, 1):\n            return n\n        return self.fib_recur(n - 1) + self.fib_recur(n - 2)\n\n    '''2.memorization'''\n    memo = {0: 0, 1: 1}\n    def fib_recur_memo(self, n):\n        if not n in Solution.memo:\n            Solution.memo[n] = self.fib_recur_memo(n-1) + self.fib_recur_memo(n-2)\n        return Solution.memo[n]\n\n    '''3.递推法'''\n    def fib_loop(self, n):\n        a, b = 0, 1\n        for i in range(n):\n            a, b = b, a + b\n        return a\n\n    '''4.yield'''\n    def fib_yield(self, n):\n        a, b = 0, 1\n        for i in range(n):\n            a, b = b, a + b\n        yield a\n\n    '''5.矩阵法'''  # numpy\n    def fib_matr(self, n):\n        res = (numpy.matrix([[1, 1], [1, 0]]) ** (n - 1) * numpy.matrix([[1], [0]]))\n        return res[0, 0]\n\n    '''6.矩阵法''' # pow\n    def fib_matr_pow(self, n):\n        res = pow(numpy.matrix([[1, 1], [1, 0]]), n - 1) * numpy.matrix([[1], [0]])\n        return res[0, 0]\n\n'''7.类实现内部魔法方法'''\nclass Fibonacci(object):\n    def __init__(self, num):\n        self.num = num\n\n    def __iter__(self):\n        if self.num < 1:\n            return 1\n        a, b = 0, 1\n        while self.num > 0:\n            a, b = a + b, a\n            self.num -= 1\n        yield a\n\n    def __next__(self):\n        return self.__iter__()\n\nif __name__ == \"__main__\":\n    n = 45\n    t1 = time.clock()\n    print(Solution().fib_recur(n))\n    t2 = time.clock()\n    print(\"recursion time : \", t2 -t1)\n\n    t1 = time.clock()\n    print(Solution().fib_recur_memo(n))\n    t2 = time.clock()\n    print(\"recursion memo time : \", t2 - t1)\n\n    t1 = time.clock()\n    print(Solution().fib_loop(n))\n    t2 = time.clock()\n    print(\"loop time : \", t2 - t1)\n\n    t1 = time.clock()\n    print(Solution().fib_yield(n).__next__())\n    t2 = time.clock()\n    print(\"yield time : \", t2 - t1)\n\n    t1 = time.clock()\n    print(Solution().fib_matr(n))\n    t2 = time.clock()\n    print(\"matrix time : \", t2 - t1)\n\n    t1 = time.clock()\n    print(Solution().fib_matr_pow(n))\n    t2 = time.clock()\n    print(\"matrix (pow) time : \", t2 - t1)\n\n    t1 = time.clock()\n    print(Fibonacci(n).__iter__().__next__())\n    t2 = time.clock()\n    print(\"class time : \", t2 - t1)\n```\n![](fibonacci_time_2.png)\n","slug":"4-Ways-of-Fibonacci-in-Python","published":1,"updated":"2019-01-13T10:03:48.515Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjy5kaqtj00055ge8j7lm66t9","content":"<p><img src=\"spiral.jpg\" alt></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span>:</span></span><br><span class=\"line\">    <span class=\"string\">'''1.递归法'''</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">fib_recur</span><span class=\"params\">(self, n)</span>:</span></span><br><span class=\"line\">        <span class=\"keyword\">assert</span> n &gt;= <span class=\"number\">0</span>, <span class=\"string\">\"n &gt;= 0\"</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> n <span class=\"keyword\">in</span> (<span class=\"number\">0</span>, <span class=\"number\">1</span>):</span><br><span class=\"line\">            <span class=\"keyword\">return</span> n</span><br><span class=\"line\">        <span class=\"keyword\">return</span> self.fib_recur(n - <span class=\"number\">1</span>) + self.fib_recur(n - <span class=\"number\">2</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">'''2.memorization'''</span></span><br><span class=\"line\">    memo = &#123;<span class=\"number\">0</span>: <span class=\"number\">0</span>, <span class=\"number\">1</span>: <span class=\"number\">1</span>&#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">fib_recur_memo</span><span class=\"params\">(self, n)</span>:</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> n <span class=\"keyword\">in</span> Solution.memo:</span><br><span class=\"line\">            Solution.memo[n] = self.fib_recur_memo(n<span class=\"number\">-1</span>) + self.fib_recur_memo(n<span class=\"number\">-2</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Solution.memo[n]</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">'''3.递推法'''</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">fib_loop</span><span class=\"params\">(self, n)</span>:</span></span><br><span class=\"line\">        a, b = <span class=\"number\">0</span>, <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(n):</span><br><span class=\"line\">            a, b = b, a + b</span><br><span class=\"line\">        <span class=\"keyword\">return</span> a</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">'''4.yield'''</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">fib_yield</span><span class=\"params\">(self, n)</span>:</span></span><br><span class=\"line\">        a, b = <span class=\"number\">0</span>, <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(n):</span><br><span class=\"line\">            a, b = b, a + b</span><br><span class=\"line\">        <span class=\"keyword\">yield</span> a</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">'''5.矩阵法'''</span>  <span class=\"comment\"># numpy</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">fib_matr</span><span class=\"params\">(self, n)</span>:</span></span><br><span class=\"line\">        res = (numpy.matrix([[<span class=\"number\">1</span>, <span class=\"number\">1</span>], [<span class=\"number\">1</span>, <span class=\"number\">0</span>]]) ** (n - <span class=\"number\">1</span>) * numpy.matrix([[<span class=\"number\">1</span>], [<span class=\"number\">0</span>]]))</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res[<span class=\"number\">0</span>, <span class=\"number\">0</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">'''6.矩阵法'''</span> <span class=\"comment\"># pow</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">fib_matr_pow</span><span class=\"params\">(self, n)</span>:</span></span><br><span class=\"line\">        res = pow(numpy.matrix([[<span class=\"number\">1</span>, <span class=\"number\">1</span>], [<span class=\"number\">1</span>, <span class=\"number\">0</span>]]), n - <span class=\"number\">1</span>) * numpy.matrix([[<span class=\"number\">1</span>], [<span class=\"number\">0</span>]])</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res[<span class=\"number\">0</span>, <span class=\"number\">0</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''7.类实现内部魔法方法'''</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Fibonacci</span><span class=\"params\">(object)</span>:</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span><span class=\"params\">(self, num)</span>:</span></span><br><span class=\"line\">        self.num = num</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__iter__</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> self.num &lt; <span class=\"number\">1</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">1</span></span><br><span class=\"line\">        a, b = <span class=\"number\">0</span>, <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span> self.num &gt; <span class=\"number\">0</span>:</span><br><span class=\"line\">            a, b = a + b, a</span><br><span class=\"line\">            self.num -= <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">yield</span> a</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__next__</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> self.__iter__()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">\"__main__\"</span>:</span><br><span class=\"line\">    n = <span class=\"number\">45</span></span><br><span class=\"line\">    t1 = time.clock()</span><br><span class=\"line\">    print(Solution().fib_recur(n))</span><br><span class=\"line\">    t2 = time.clock()</span><br><span class=\"line\">    print(<span class=\"string\">\"recursion time : \"</span>, t2 -t1)</span><br><span class=\"line\"></span><br><span class=\"line\">    t1 = time.clock()</span><br><span class=\"line\">    print(Solution().fib_recur_memo(n))</span><br><span class=\"line\">    t2 = time.clock()</span><br><span class=\"line\">    print(<span class=\"string\">\"recursion memo time : \"</span>, t2 - t1)</span><br><span class=\"line\"></span><br><span class=\"line\">    t1 = time.clock()</span><br><span class=\"line\">    print(Solution().fib_loop(n))</span><br><span class=\"line\">    t2 = time.clock()</span><br><span class=\"line\">    print(<span class=\"string\">\"loop time : \"</span>, t2 - t1)</span><br><span class=\"line\"></span><br><span class=\"line\">    t1 = time.clock()</span><br><span class=\"line\">    print(Solution().fib_yield(n).__next__())</span><br><span class=\"line\">    t2 = time.clock()</span><br><span class=\"line\">    print(<span class=\"string\">\"yield time : \"</span>, t2 - t1)</span><br><span class=\"line\"></span><br><span class=\"line\">    t1 = time.clock()</span><br><span class=\"line\">    print(Solution().fib_matr(n))</span><br><span class=\"line\">    t2 = time.clock()</span><br><span class=\"line\">    print(<span class=\"string\">\"matrix time : \"</span>, t2 - t1)</span><br><span class=\"line\"></span><br><span class=\"line\">    t1 = time.clock()</span><br><span class=\"line\">    print(Solution().fib_matr_pow(n))</span><br><span class=\"line\">    t2 = time.clock()</span><br><span class=\"line\">    print(<span class=\"string\">\"matrix (pow) time : \"</span>, t2 - t1)</span><br><span class=\"line\"></span><br><span class=\"line\">    t1 = time.clock()</span><br><span class=\"line\">    print(Fibonacci(n).__iter__().__next__())</span><br><span class=\"line\">    t2 = time.clock()</span><br><span class=\"line\">    print(<span class=\"string\">\"class time : \"</span>, t2 - t1)</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"fibonacci_time_2.png\" alt></p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"spiral.jpg\" alt></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span>:</span></span><br><span class=\"line\">    <span class=\"string\">'''1.递归法'''</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">fib_recur</span><span class=\"params\">(self, n)</span>:</span></span><br><span class=\"line\">        <span class=\"keyword\">assert</span> n &gt;= <span class=\"number\">0</span>, <span class=\"string\">\"n &gt;= 0\"</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> n <span class=\"keyword\">in</span> (<span class=\"number\">0</span>, <span class=\"number\">1</span>):</span><br><span class=\"line\">            <span class=\"keyword\">return</span> n</span><br><span class=\"line\">        <span class=\"keyword\">return</span> self.fib_recur(n - <span class=\"number\">1</span>) + self.fib_recur(n - <span class=\"number\">2</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">'''2.memorization'''</span></span><br><span class=\"line\">    memo = &#123;<span class=\"number\">0</span>: <span class=\"number\">0</span>, <span class=\"number\">1</span>: <span class=\"number\">1</span>&#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">fib_recur_memo</span><span class=\"params\">(self, n)</span>:</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> n <span class=\"keyword\">in</span> Solution.memo:</span><br><span class=\"line\">            Solution.memo[n] = self.fib_recur_memo(n<span class=\"number\">-1</span>) + self.fib_recur_memo(n<span class=\"number\">-2</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Solution.memo[n]</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">'''3.递推法'''</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">fib_loop</span><span class=\"params\">(self, n)</span>:</span></span><br><span class=\"line\">        a, b = <span class=\"number\">0</span>, <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(n):</span><br><span class=\"line\">            a, b = b, a + b</span><br><span class=\"line\">        <span class=\"keyword\">return</span> a</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">'''4.yield'''</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">fib_yield</span><span class=\"params\">(self, n)</span>:</span></span><br><span class=\"line\">        a, b = <span class=\"number\">0</span>, <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(n):</span><br><span class=\"line\">            a, b = b, a + b</span><br><span class=\"line\">        <span class=\"keyword\">yield</span> a</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">'''5.矩阵法'''</span>  <span class=\"comment\"># numpy</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">fib_matr</span><span class=\"params\">(self, n)</span>:</span></span><br><span class=\"line\">        res = (numpy.matrix([[<span class=\"number\">1</span>, <span class=\"number\">1</span>], [<span class=\"number\">1</span>, <span class=\"number\">0</span>]]) ** (n - <span class=\"number\">1</span>) * numpy.matrix([[<span class=\"number\">1</span>], [<span class=\"number\">0</span>]]))</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res[<span class=\"number\">0</span>, <span class=\"number\">0</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">'''6.矩阵法'''</span> <span class=\"comment\"># pow</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">fib_matr_pow</span><span class=\"params\">(self, n)</span>:</span></span><br><span class=\"line\">        res = pow(numpy.matrix([[<span class=\"number\">1</span>, <span class=\"number\">1</span>], [<span class=\"number\">1</span>, <span class=\"number\">0</span>]]), n - <span class=\"number\">1</span>) * numpy.matrix([[<span class=\"number\">1</span>], [<span class=\"number\">0</span>]])</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res[<span class=\"number\">0</span>, <span class=\"number\">0</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''7.类实现内部魔法方法'''</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Fibonacci</span><span class=\"params\">(object)</span>:</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span><span class=\"params\">(self, num)</span>:</span></span><br><span class=\"line\">        self.num = num</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__iter__</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> self.num &lt; <span class=\"number\">1</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">1</span></span><br><span class=\"line\">        a, b = <span class=\"number\">0</span>, <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span> self.num &gt; <span class=\"number\">0</span>:</span><br><span class=\"line\">            a, b = a + b, a</span><br><span class=\"line\">            self.num -= <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">yield</span> a</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__next__</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> self.__iter__()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">\"__main__\"</span>:</span><br><span class=\"line\">    n = <span class=\"number\">45</span></span><br><span class=\"line\">    t1 = time.clock()</span><br><span class=\"line\">    print(Solution().fib_recur(n))</span><br><span class=\"line\">    t2 = time.clock()</span><br><span class=\"line\">    print(<span class=\"string\">\"recursion time : \"</span>, t2 -t1)</span><br><span class=\"line\"></span><br><span class=\"line\">    t1 = time.clock()</span><br><span class=\"line\">    print(Solution().fib_recur_memo(n))</span><br><span class=\"line\">    t2 = time.clock()</span><br><span class=\"line\">    print(<span class=\"string\">\"recursion memo time : \"</span>, t2 - t1)</span><br><span class=\"line\"></span><br><span class=\"line\">    t1 = time.clock()</span><br><span class=\"line\">    print(Solution().fib_loop(n))</span><br><span class=\"line\">    t2 = time.clock()</span><br><span class=\"line\">    print(<span class=\"string\">\"loop time : \"</span>, t2 - t1)</span><br><span class=\"line\"></span><br><span class=\"line\">    t1 = time.clock()</span><br><span class=\"line\">    print(Solution().fib_yield(n).__next__())</span><br><span class=\"line\">    t2 = time.clock()</span><br><span class=\"line\">    print(<span class=\"string\">\"yield time : \"</span>, t2 - t1)</span><br><span class=\"line\"></span><br><span class=\"line\">    t1 = time.clock()</span><br><span class=\"line\">    print(Solution().fib_matr(n))</span><br><span class=\"line\">    t2 = time.clock()</span><br><span class=\"line\">    print(<span class=\"string\">\"matrix time : \"</span>, t2 - t1)</span><br><span class=\"line\"></span><br><span class=\"line\">    t1 = time.clock()</span><br><span class=\"line\">    print(Solution().fib_matr_pow(n))</span><br><span class=\"line\">    t2 = time.clock()</span><br><span class=\"line\">    print(<span class=\"string\">\"matrix (pow) time : \"</span>, t2 - t1)</span><br><span class=\"line\"></span><br><span class=\"line\">    t1 = time.clock()</span><br><span class=\"line\">    print(Fibonacci(n).__iter__().__next__())</span><br><span class=\"line\">    t2 = time.clock()</span><br><span class=\"line\">    print(<span class=\"string\">\"class time : \"</span>, t2 - t1)</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"fibonacci_time_2.png\" alt></p>\n"},{"title":"Bitmap","date":"2018-12-06T10:06:11.000Z","_content":"输入：一个最多包含n个unsigned int型整数的数组，每个数都小于n，其中n=10,000,000。没有重复的整数，没有其他数据与该整数相关联。\n输出： 按升序排列这些数。\n约束：有 1MB多（不超过2MB） 的内存空间可用，有充足的硬盘空间。\n```c\n#include <stdio.h>\n#include <limits.h>\n#define BITSPERWORD 32           // bits_per_int\n#define SHIFT       5            // 2 ^ 5 = 32\n#define MASK        0x1F         // 1 1111\n#define N           100000000   // n numbers to sort   \nint bitmap[1 + N / BITSPERWORD];\nunsigned int array[] = {23, 45, 54, 34, 123, 34534, 4, 99, 2, 78, 99999, 0};\n\n// bitmap[i >> SHIFT]   i这个数字应该在第几个int上\n// i & MASK             截取i这个数字对应二进制的后五位\n// 1 << (i & MASK)      对应到某一个int上，特定位为1，其他位为0  000...0001000...000\n\n/*  将i对应的特定位设置为1\n*   bitmap              0101....0100100...000001\n*   1 << (i & MASK)     0000...0000001000....000\n*/\nvoid set_bit(int i)\n{\n    bitmap[i >> SHIFT] |= (1 << (i & MASK));\n}\n\n/** 将i对应的特定位设置为0\n *  bitmap              0101....0100100...000001\n *  ~(1 << (i & MASK))  111111111101111111111111 \n */\nvoid clear_bit(int i)\n{\n    bitmap[i >> SHIFT] &= ~(1 << (i & MASK));\n}\n\n/** 获取i对应的特定位的值\n*   bitmap              0101....0100100...000001\n*   1 << (i & MASK)     0000...0000001000....000\n*/\nint get_bit(int i)\n{\n    return bitmap[i >> SHIFT] & (1 << (i & MASK));\n}\n\nint main(int argc, char const *argv[])\n{\n    printf(\"INT_MAX: %d\\n\", INT_MAX);\n    printf(\"UINT_MAX: %u\\n\", UINT_MAX);\n\n    unsigned int i = 0;\n    unsigned int length = 0;\n    for (i = 0; i < N; i++)\n    {\n        clear_bit(i);\n    }\n\n    length = sizeof(array) / sizeof(array[0]);\n    printf(\"length = %u\\n\", length);\n    \n    for (i = 0; i < length; i++)\n    {\n        set_bit(array[i]);\n    }\n\n    for (i = 0; i < N; i++)\n    {\n        if(get_bit(i))\n        {\n            printf(\"%d \", i);\n        }\n    }\n    \n    printf(\"\\n\");\n    return 0;\n}\n```\n```cmd\nINT_MAX: 2147483647\nUINT_MAX: 4294967295\nlength = 12\n0 2 4 23 34 45 54 78 99 123 34534 99999\n```\n\n","source":"_posts/Bitmap.md","raw":"---\ntitle: Bitmap\ndate: 2018-12-06 18:06:11\ncategories:\ntags:\n---\n输入：一个最多包含n个unsigned int型整数的数组，每个数都小于n，其中n=10,000,000。没有重复的整数，没有其他数据与该整数相关联。\n输出： 按升序排列这些数。\n约束：有 1MB多（不超过2MB） 的内存空间可用，有充足的硬盘空间。\n```c\n#include <stdio.h>\n#include <limits.h>\n#define BITSPERWORD 32           // bits_per_int\n#define SHIFT       5            // 2 ^ 5 = 32\n#define MASK        0x1F         // 1 1111\n#define N           100000000   // n numbers to sort   \nint bitmap[1 + N / BITSPERWORD];\nunsigned int array[] = {23, 45, 54, 34, 123, 34534, 4, 99, 2, 78, 99999, 0};\n\n// bitmap[i >> SHIFT]   i这个数字应该在第几个int上\n// i & MASK             截取i这个数字对应二进制的后五位\n// 1 << (i & MASK)      对应到某一个int上，特定位为1，其他位为0  000...0001000...000\n\n/*  将i对应的特定位设置为1\n*   bitmap              0101....0100100...000001\n*   1 << (i & MASK)     0000...0000001000....000\n*/\nvoid set_bit(int i)\n{\n    bitmap[i >> SHIFT] |= (1 << (i & MASK));\n}\n\n/** 将i对应的特定位设置为0\n *  bitmap              0101....0100100...000001\n *  ~(1 << (i & MASK))  111111111101111111111111 \n */\nvoid clear_bit(int i)\n{\n    bitmap[i >> SHIFT] &= ~(1 << (i & MASK));\n}\n\n/** 获取i对应的特定位的值\n*   bitmap              0101....0100100...000001\n*   1 << (i & MASK)     0000...0000001000....000\n*/\nint get_bit(int i)\n{\n    return bitmap[i >> SHIFT] & (1 << (i & MASK));\n}\n\nint main(int argc, char const *argv[])\n{\n    printf(\"INT_MAX: %d\\n\", INT_MAX);\n    printf(\"UINT_MAX: %u\\n\", UINT_MAX);\n\n    unsigned int i = 0;\n    unsigned int length = 0;\n    for (i = 0; i < N; i++)\n    {\n        clear_bit(i);\n    }\n\n    length = sizeof(array) / sizeof(array[0]);\n    printf(\"length = %u\\n\", length);\n    \n    for (i = 0; i < length; i++)\n    {\n        set_bit(array[i]);\n    }\n\n    for (i = 0; i < N; i++)\n    {\n        if(get_bit(i))\n        {\n            printf(\"%d \", i);\n        }\n    }\n    \n    printf(\"\\n\");\n    return 0;\n}\n```\n```cmd\nINT_MAX: 2147483647\nUINT_MAX: 4294967295\nlength = 12\n0 2 4 23 34 45 54 78 99 123 34534 99999\n```\n\n","slug":"Bitmap","published":1,"updated":"2019-01-13T10:03:48.516Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjy5kaqto00095ge8ew8xetap","content":"<p>输入：一个最多包含n个unsigned int型整数的数组，每个数都小于n，其中n=10,000,000。没有重复的整数，没有其他数据与该整数相关联。<br>输出： 按升序排列这些数。<br>约束：有 1MB多（不超过2MB） 的内存空间可用，有充足的硬盘空间。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;limits.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> BITSPERWORD 32           <span class=\"comment\">// bits_per_int</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> SHIFT       5            <span class=\"comment\">// 2 ^ 5 = 32</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> MASK        0x1F         <span class=\"comment\">// 1 1111</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> N           100000000   <span class=\"comment\">// n numbers to sort   </span></span></span><br><span class=\"line\"><span class=\"keyword\">int</span> bitmap[<span class=\"number\">1</span> + N / BITSPERWORD];</span><br><span class=\"line\"><span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span> <span class=\"built_in\">array</span>[] = &#123;<span class=\"number\">23</span>, <span class=\"number\">45</span>, <span class=\"number\">54</span>, <span class=\"number\">34</span>, <span class=\"number\">123</span>, <span class=\"number\">34534</span>, <span class=\"number\">4</span>, <span class=\"number\">99</span>, <span class=\"number\">2</span>, <span class=\"number\">78</span>, <span class=\"number\">99999</span>, <span class=\"number\">0</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// bitmap[i &gt;&gt; SHIFT]   i这个数字应该在第几个int上</span></span><br><span class=\"line\"><span class=\"comment\">// i &amp; MASK             截取i这个数字对应二进制的后五位</span></span><br><span class=\"line\"><span class=\"comment\">// 1 &lt;&lt; (i &amp; MASK)      对应到某一个int上，特定位为1，其他位为0  000...0001000...000</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*  将i对应的特定位设置为1</span></span><br><span class=\"line\"><span class=\"comment\">*   bitmap              0101....0100100...000001</span></span><br><span class=\"line\"><span class=\"comment\">*   1 &lt;&lt; (i &amp; MASK)     0000...0000001000....000</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">set_bit</span><span class=\"params\">(<span class=\"keyword\">int</span> i)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    bitmap[i &gt;&gt; SHIFT] |= (<span class=\"number\">1</span> &lt;&lt; (i &amp; MASK));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/** 将i对应的特定位设置为0</span></span><br><span class=\"line\"><span class=\"comment\"> *  bitmap              0101....0100100...000001</span></span><br><span class=\"line\"><span class=\"comment\"> *  ~(1 &lt;&lt; (i &amp; MASK))  111111111101111111111111 </span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">clear_bit</span><span class=\"params\">(<span class=\"keyword\">int</span> i)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    bitmap[i &gt;&gt; SHIFT] &amp;= ~(<span class=\"number\">1</span> &lt;&lt; (i &amp; MASK));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/** 获取i对应的特定位的值</span></span><br><span class=\"line\"><span class=\"comment\">*   bitmap              0101....0100100...000001</span></span><br><span class=\"line\"><span class=\"comment\">*   1 &lt;&lt; (i &amp; MASK)     0000...0000001000....000</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">get_bit</span><span class=\"params\">(<span class=\"keyword\">int</span> i)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> bitmap[i &gt;&gt; SHIFT] &amp; (<span class=\"number\">1</span> &lt;&lt; (i &amp; MASK));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">int</span> argc, <span class=\"keyword\">char</span> <span class=\"keyword\">const</span> *argv[])</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"INT_MAX: %d\\n\"</span>, INT_MAX);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"UINT_MAX: %u\\n\"</span>, UINT_MAX);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span> length = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; N; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        clear_bit(i);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    length = <span class=\"keyword\">sizeof</span>(<span class=\"built_in\">array</span>) / <span class=\"keyword\">sizeof</span>(<span class=\"built_in\">array</span>[<span class=\"number\">0</span>]);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"length = %u\\n\"</span>, length);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; length; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        set_bit(<span class=\"built_in\">array</span>[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; N; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(get_bit(i))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d \"</span>, i);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"\\n\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">INT_MAX: 2147483647</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">UINT_MAX</span>: 4294967295</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">length</span> = 12</span></span><br><span class=\"line\"><span class=\"function\">0 2 4 23 34 45 54 78 99 123 34534 99999</span></span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<p>输入：一个最多包含n个unsigned int型整数的数组，每个数都小于n，其中n=10,000,000。没有重复的整数，没有其他数据与该整数相关联。<br>输出： 按升序排列这些数。<br>约束：有 1MB多（不超过2MB） 的内存空间可用，有充足的硬盘空间。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;limits.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> BITSPERWORD 32           <span class=\"comment\">// bits_per_int</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> SHIFT       5            <span class=\"comment\">// 2 ^ 5 = 32</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> MASK        0x1F         <span class=\"comment\">// 1 1111</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> N           100000000   <span class=\"comment\">// n numbers to sort   </span></span></span><br><span class=\"line\"><span class=\"keyword\">int</span> bitmap[<span class=\"number\">1</span> + N / BITSPERWORD];</span><br><span class=\"line\"><span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span> <span class=\"built_in\">array</span>[] = &#123;<span class=\"number\">23</span>, <span class=\"number\">45</span>, <span class=\"number\">54</span>, <span class=\"number\">34</span>, <span class=\"number\">123</span>, <span class=\"number\">34534</span>, <span class=\"number\">4</span>, <span class=\"number\">99</span>, <span class=\"number\">2</span>, <span class=\"number\">78</span>, <span class=\"number\">99999</span>, <span class=\"number\">0</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// bitmap[i &gt;&gt; SHIFT]   i这个数字应该在第几个int上</span></span><br><span class=\"line\"><span class=\"comment\">// i &amp; MASK             截取i这个数字对应二进制的后五位</span></span><br><span class=\"line\"><span class=\"comment\">// 1 &lt;&lt; (i &amp; MASK)      对应到某一个int上，特定位为1，其他位为0  000...0001000...000</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*  将i对应的特定位设置为1</span></span><br><span class=\"line\"><span class=\"comment\">*   bitmap              0101....0100100...000001</span></span><br><span class=\"line\"><span class=\"comment\">*   1 &lt;&lt; (i &amp; MASK)     0000...0000001000....000</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">set_bit</span><span class=\"params\">(<span class=\"keyword\">int</span> i)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    bitmap[i &gt;&gt; SHIFT] |= (<span class=\"number\">1</span> &lt;&lt; (i &amp; MASK));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/** 将i对应的特定位设置为0</span></span><br><span class=\"line\"><span class=\"comment\"> *  bitmap              0101....0100100...000001</span></span><br><span class=\"line\"><span class=\"comment\"> *  ~(1 &lt;&lt; (i &amp; MASK))  111111111101111111111111 </span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">clear_bit</span><span class=\"params\">(<span class=\"keyword\">int</span> i)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    bitmap[i &gt;&gt; SHIFT] &amp;= ~(<span class=\"number\">1</span> &lt;&lt; (i &amp; MASK));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/** 获取i对应的特定位的值</span></span><br><span class=\"line\"><span class=\"comment\">*   bitmap              0101....0100100...000001</span></span><br><span class=\"line\"><span class=\"comment\">*   1 &lt;&lt; (i &amp; MASK)     0000...0000001000....000</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">get_bit</span><span class=\"params\">(<span class=\"keyword\">int</span> i)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> bitmap[i &gt;&gt; SHIFT] &amp; (<span class=\"number\">1</span> &lt;&lt; (i &amp; MASK));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">int</span> argc, <span class=\"keyword\">char</span> <span class=\"keyword\">const</span> *argv[])</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"INT_MAX: %d\\n\"</span>, INT_MAX);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"UINT_MAX: %u\\n\"</span>, UINT_MAX);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span> length = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; N; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        clear_bit(i);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    length = <span class=\"keyword\">sizeof</span>(<span class=\"built_in\">array</span>) / <span class=\"keyword\">sizeof</span>(<span class=\"built_in\">array</span>[<span class=\"number\">0</span>]);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"length = %u\\n\"</span>, length);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; length; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        set_bit(<span class=\"built_in\">array</span>[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; N; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(get_bit(i))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d \"</span>, i);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"\\n\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">INT_MAX: 2147483647</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">UINT_MAX</span>: 4294967295</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">length</span> = 12</span></span><br><span class=\"line\"><span class=\"function\">0 2 4 23 34 45 54 78 99 123 34534 99999</span></span><br></pre></td></tr></table></figure>\n\n"},{"title":"Data Structure Alignment and Padding in C","date":"2018-12-01T10:44:09.000Z","_content":"\n```c\n// Coundin云英 面试\n#include <stdio.h>\n\ntypedef struct\n{\n    char c;\n    int i;\n}T_FOO;\n\ntypedef struct\n{\n    int i;\n    char c;\n}U_FOO;\n\nint main()\n{\n    printf(\"sizeof(char) = %ld\\n\", sizeof(char));\n    printf(\"sizeof(int) = %ld\\n\", sizeof(int));\n    printf(\"sizeof(long) = %ld\\n\", sizeof(long));\n    \n    T_FOO a;\n    U_FOO b;\n    \n    printf(\"a.c -> %ld, a.i -> %ld\\n\", (void *)&a.c - (void *)&a, (void *)&a.i - (void *)&a);\n    printf(\"b.i -> %ld, b.c -> %ld\\n\", (void *)&b.i - (void *)&b, (void *)&b.c - (void *)&b);\n\n    printf(\"sizeof(a) = %ld\\n\", sizeof(a));\n    printf(\"sizeof(b) = %ld\\n\", sizeof(b));\n    return 0;\n}\n```\n![](alignment.png)\n","source":"_posts/Data-Structure-Alignment-and-Padding-in-C.md","raw":"---\ntitle: Data Structure Alignment and Padding in C\ndate: 2018-12-01 18:44:09\ncategories:\ntags:\n---\n\n```c\n// Coundin云英 面试\n#include <stdio.h>\n\ntypedef struct\n{\n    char c;\n    int i;\n}T_FOO;\n\ntypedef struct\n{\n    int i;\n    char c;\n}U_FOO;\n\nint main()\n{\n    printf(\"sizeof(char) = %ld\\n\", sizeof(char));\n    printf(\"sizeof(int) = %ld\\n\", sizeof(int));\n    printf(\"sizeof(long) = %ld\\n\", sizeof(long));\n    \n    T_FOO a;\n    U_FOO b;\n    \n    printf(\"a.c -> %ld, a.i -> %ld\\n\", (void *)&a.c - (void *)&a, (void *)&a.i - (void *)&a);\n    printf(\"b.i -> %ld, b.c -> %ld\\n\", (void *)&b.i - (void *)&b, (void *)&b.c - (void *)&b);\n\n    printf(\"sizeof(a) = %ld\\n\", sizeof(a));\n    printf(\"sizeof(b) = %ld\\n\", sizeof(b));\n    return 0;\n}\n```\n![](alignment.png)\n","slug":"Data-Structure-Alignment-and-Padding-in-C","published":1,"updated":"2019-01-13T10:03:48.516Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjy5kaqtr000a5ge8onxki3r2","content":"<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Coundin云英 面试</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">char</span> c;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> i;</span><br><span class=\"line\">&#125;T_FOO;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> i;</span><br><span class=\"line\">    <span class=\"keyword\">char</span> c;</span><br><span class=\"line\">&#125;U_FOO;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"sizeof(char) = %ld\\n\"</span>, <span class=\"keyword\">sizeof</span>(<span class=\"keyword\">char</span>));</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"sizeof(int) = %ld\\n\"</span>, <span class=\"keyword\">sizeof</span>(<span class=\"keyword\">int</span>));</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"sizeof(long) = %ld\\n\"</span>, <span class=\"keyword\">sizeof</span>(<span class=\"keyword\">long</span>));</span><br><span class=\"line\">    </span><br><span class=\"line\">    T_FOO a;</span><br><span class=\"line\">    U_FOO b;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"a.c -&gt; %ld, a.i -&gt; %ld\\n\"</span>, (<span class=\"keyword\">void</span> *)&amp;a.c - (<span class=\"keyword\">void</span> *)&amp;a, (<span class=\"keyword\">void</span> *)&amp;a.i - (<span class=\"keyword\">void</span> *)&amp;a);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"b.i -&gt; %ld, b.c -&gt; %ld\\n\"</span>, (<span class=\"keyword\">void</span> *)&amp;b.i - (<span class=\"keyword\">void</span> *)&amp;b, (<span class=\"keyword\">void</span> *)&amp;b.c - (<span class=\"keyword\">void</span> *)&amp;b);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"sizeof(a) = %ld\\n\"</span>, <span class=\"keyword\">sizeof</span>(a));</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"sizeof(b) = %ld\\n\"</span>, <span class=\"keyword\">sizeof</span>(b));</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"alignment.png\" alt></p>\n","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Coundin云英 面试</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">char</span> c;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> i;</span><br><span class=\"line\">&#125;T_FOO;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> i;</span><br><span class=\"line\">    <span class=\"keyword\">char</span> c;</span><br><span class=\"line\">&#125;U_FOO;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"sizeof(char) = %ld\\n\"</span>, <span class=\"keyword\">sizeof</span>(<span class=\"keyword\">char</span>));</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"sizeof(int) = %ld\\n\"</span>, <span class=\"keyword\">sizeof</span>(<span class=\"keyword\">int</span>));</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"sizeof(long) = %ld\\n\"</span>, <span class=\"keyword\">sizeof</span>(<span class=\"keyword\">long</span>));</span><br><span class=\"line\">    </span><br><span class=\"line\">    T_FOO a;</span><br><span class=\"line\">    U_FOO b;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"a.c -&gt; %ld, a.i -&gt; %ld\\n\"</span>, (<span class=\"keyword\">void</span> *)&amp;a.c - (<span class=\"keyword\">void</span> *)&amp;a, (<span class=\"keyword\">void</span> *)&amp;a.i - (<span class=\"keyword\">void</span> *)&amp;a);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"b.i -&gt; %ld, b.c -&gt; %ld\\n\"</span>, (<span class=\"keyword\">void</span> *)&amp;b.i - (<span class=\"keyword\">void</span> *)&amp;b, (<span class=\"keyword\">void</span> *)&amp;b.c - (<span class=\"keyword\">void</span> *)&amp;b);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"sizeof(a) = %ld\\n\"</span>, <span class=\"keyword\">sizeof</span>(a));</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"sizeof(b) = %ld\\n\"</span>, <span class=\"keyword\">sizeof</span>(b));</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"alignment.png\" alt></p>\n"},{"title":"Floyd","date":"2018-12-15T15:55:33.000Z","_content":"###### 问题描述\n求无向图中各点之间的最短路径长度和对应的最短路径。如果有多条最短路径，给出一条即可。\n![](floyd.png)\n```c\n#include <stdio.h>\n#define MAXV 100 \n\nint D[MAXV][MAXV] = {0};\nint min_path[MAXV][MAXV] = {0};\n\nvoid Floyd(int A[MAXV][MAXV], int n)\n{\n    int i, j, k;\n    for (i = 0; i < n; i++)\n        for (j = 0; j < n; j++)\n        {\n            min_path[i][j] = -1;\n            if(i == j)\n            {\n                D[i][j] = 0;\n                continue;\n            }\n            if(A[i][j])\n            {\n                D[i][j] = A[i][j];\n            }\n            else\n            {\n                D[i][j] = 99;   // a very large number, more than any of A[i][j]\n            }\n            \n        }\n\n    for (k = 0; k < n; k++)\n    {\n        for (i = 0; i < n; i++)\n            for (j = 0; j < n; j++)\n                if (D[i][j] > (D[i][k] + D[k][j]))\n                {\n                    D[i][j] = D[i][k] + D[k][j];\n                    min_path[i][j] = k;\n                }\n    }\n}\n\n// print shortest path from i to j\nvoid print_shortest_path(int i, int j)\n{\n    printf(\"shortest path from %d to %d is  \", i, j);\n    printf(\"%d ->\", i);\n    while(min_path[i][j] != -1)\n    {\n        printf(\" %d ->\", min_path[i][j]);\n        i = min_path[i][j];\n    }\n    printf(\" %d\\n\", j);\n}\n\nint main()\n{\n    int n = 7;\n    int A[MAXV][MAXV] = {\n        {0, 1, 0, 1, 1, 0, 0},\n        {1, 0, 1, 1, 0, 0, 0},\n        {0, 1, 0, 1, 1, 0, 0},\n        {1, 1, 1, 0, 1, 0, 0},\n        {1, 0, 1, 1, 0, 1, 0},\n        {0, 0, 0, 0, 1, 0, 1},\n        {0, 0, 0, 0, 0, 1, 0}\n        };\n\n    // shortest path\n    Floyd(A, n);\n    int a = 2;\n    int b = 6;\n    printf(\"shortest path length from %d to %d is %d\\n\", a, b, D[a][b]);\n    for (int i = 0; i < n; i++)\n    {\n        for (int j = i; j < n; j++)\n        {\n            printf(\"shortest path length from %d to %d is %d\\n\", i, j, D[i][j]);        \n            // print_shortest_path(i, j);\n        }\n    }\n\n    return 0;\n}\n```\n![](floyd_1.png)\n![](floyd_2.png)\n","source":"_posts/Floyd.md","raw":"---\ntitle: Floyd\ndate: 2018-12-15 23:55:33\ncategories:\ntags:\n---\n###### 问题描述\n求无向图中各点之间的最短路径长度和对应的最短路径。如果有多条最短路径，给出一条即可。\n![](floyd.png)\n```c\n#include <stdio.h>\n#define MAXV 100 \n\nint D[MAXV][MAXV] = {0};\nint min_path[MAXV][MAXV] = {0};\n\nvoid Floyd(int A[MAXV][MAXV], int n)\n{\n    int i, j, k;\n    for (i = 0; i < n; i++)\n        for (j = 0; j < n; j++)\n        {\n            min_path[i][j] = -1;\n            if(i == j)\n            {\n                D[i][j] = 0;\n                continue;\n            }\n            if(A[i][j])\n            {\n                D[i][j] = A[i][j];\n            }\n            else\n            {\n                D[i][j] = 99;   // a very large number, more than any of A[i][j]\n            }\n            \n        }\n\n    for (k = 0; k < n; k++)\n    {\n        for (i = 0; i < n; i++)\n            for (j = 0; j < n; j++)\n                if (D[i][j] > (D[i][k] + D[k][j]))\n                {\n                    D[i][j] = D[i][k] + D[k][j];\n                    min_path[i][j] = k;\n                }\n    }\n}\n\n// print shortest path from i to j\nvoid print_shortest_path(int i, int j)\n{\n    printf(\"shortest path from %d to %d is  \", i, j);\n    printf(\"%d ->\", i);\n    while(min_path[i][j] != -1)\n    {\n        printf(\" %d ->\", min_path[i][j]);\n        i = min_path[i][j];\n    }\n    printf(\" %d\\n\", j);\n}\n\nint main()\n{\n    int n = 7;\n    int A[MAXV][MAXV] = {\n        {0, 1, 0, 1, 1, 0, 0},\n        {1, 0, 1, 1, 0, 0, 0},\n        {0, 1, 0, 1, 1, 0, 0},\n        {1, 1, 1, 0, 1, 0, 0},\n        {1, 0, 1, 1, 0, 1, 0},\n        {0, 0, 0, 0, 1, 0, 1},\n        {0, 0, 0, 0, 0, 1, 0}\n        };\n\n    // shortest path\n    Floyd(A, n);\n    int a = 2;\n    int b = 6;\n    printf(\"shortest path length from %d to %d is %d\\n\", a, b, D[a][b]);\n    for (int i = 0; i < n; i++)\n    {\n        for (int j = i; j < n; j++)\n        {\n            printf(\"shortest path length from %d to %d is %d\\n\", i, j, D[i][j]);        \n            // print_shortest_path(i, j);\n        }\n    }\n\n    return 0;\n}\n```\n![](floyd_1.png)\n![](floyd_2.png)\n","slug":"Floyd","published":1,"updated":"2019-01-13T10:03:48.517Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjy5kaqts000b5ge850cdiz9r","content":"<h6 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h6><p>求无向图中各点之间的最短路径长度和对应的最短路径。如果有多条最短路径，给出一条即可。<br><img src=\"floyd.png\" alt></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> MAXV 100 </span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> D[MAXV][MAXV] = &#123;<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\"><span class=\"keyword\">int</span> min_path[MAXV][MAXV] = &#123;<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Floyd</span><span class=\"params\">(<span class=\"keyword\">int</span> A[MAXV][MAXV], <span class=\"keyword\">int</span> n)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> i, j, k;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; n; i++)</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (j = <span class=\"number\">0</span>; j &lt; n; j++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            min_path[i][j] = <span class=\"number\">-1</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(i == j)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                D[i][j] = <span class=\"number\">0</span>;</span><br><span class=\"line\">                <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(A[i][j])</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                D[i][j] = A[i][j];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                D[i][j] = <span class=\"number\">99</span>;   <span class=\"comment\">// a very large number, more than any of A[i][j]</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (k = <span class=\"number\">0</span>; k &lt; n; k++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; n; i++)</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (j = <span class=\"number\">0</span>; j &lt; n; j++)</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (D[i][j] &gt; (D[i][k] + D[k][j]))</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    D[i][j] = D[i][k] + D[k][j];</span><br><span class=\"line\">                    min_path[i][j] = k;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// print shortest path from i to j</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">print_shortest_path</span><span class=\"params\">(<span class=\"keyword\">int</span> i, <span class=\"keyword\">int</span> j)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"shortest path from %d to %d is  \"</span>, i, j);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d -&gt;\"</span>, i);</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(min_path[i][j] != <span class=\"number\">-1</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\" %d -&gt;\"</span>, min_path[i][j]);</span><br><span class=\"line\">        i = min_path[i][j];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\" %d\\n\"</span>, j);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n = <span class=\"number\">7</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> A[MAXV][MAXV] = &#123;</span><br><span class=\"line\">        &#123;<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>&#125;</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// shortest path</span></span><br><span class=\"line\">    Floyd(A, n);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> a = <span class=\"number\">2</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> b = <span class=\"number\">6</span>;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"shortest path length from %d to %d is %d\\n\"</span>, a, b, D[a][b]);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = i; j &lt; n; j++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">\"shortest path length from %d to %d is %d\\n\"</span>, i, j, D[i][j]);        </span><br><span class=\"line\">            <span class=\"comment\">// print_shortest_path(i, j);</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"floyd_1.png\" alt><br><img src=\"floyd_2.png\" alt></p>\n","site":{"data":{}},"excerpt":"","more":"<h6 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h6><p>求无向图中各点之间的最短路径长度和对应的最短路径。如果有多条最短路径，给出一条即可。<br><img src=\"floyd.png\" alt></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> MAXV 100 </span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> D[MAXV][MAXV] = &#123;<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\"><span class=\"keyword\">int</span> min_path[MAXV][MAXV] = &#123;<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Floyd</span><span class=\"params\">(<span class=\"keyword\">int</span> A[MAXV][MAXV], <span class=\"keyword\">int</span> n)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> i, j, k;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; n; i++)</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (j = <span class=\"number\">0</span>; j &lt; n; j++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            min_path[i][j] = <span class=\"number\">-1</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(i == j)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                D[i][j] = <span class=\"number\">0</span>;</span><br><span class=\"line\">                <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(A[i][j])</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                D[i][j] = A[i][j];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                D[i][j] = <span class=\"number\">99</span>;   <span class=\"comment\">// a very large number, more than any of A[i][j]</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (k = <span class=\"number\">0</span>; k &lt; n; k++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; n; i++)</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (j = <span class=\"number\">0</span>; j &lt; n; j++)</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (D[i][j] &gt; (D[i][k] + D[k][j]))</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    D[i][j] = D[i][k] + D[k][j];</span><br><span class=\"line\">                    min_path[i][j] = k;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// print shortest path from i to j</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">print_shortest_path</span><span class=\"params\">(<span class=\"keyword\">int</span> i, <span class=\"keyword\">int</span> j)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"shortest path from %d to %d is  \"</span>, i, j);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d -&gt;\"</span>, i);</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(min_path[i][j] != <span class=\"number\">-1</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\" %d -&gt;\"</span>, min_path[i][j]);</span><br><span class=\"line\">        i = min_path[i][j];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\" %d\\n\"</span>, j);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n = <span class=\"number\">7</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> A[MAXV][MAXV] = &#123;</span><br><span class=\"line\">        &#123;<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>&#125;</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// shortest path</span></span><br><span class=\"line\">    Floyd(A, n);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> a = <span class=\"number\">2</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> b = <span class=\"number\">6</span>;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"shortest path length from %d to %d is %d\\n\"</span>, a, b, D[a][b]);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = i; j &lt; n; j++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">\"shortest path length from %d to %d is %d\\n\"</span>, i, j, D[i][j]);        </span><br><span class=\"line\">            <span class=\"comment\">// print_shortest_path(i, j);</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"floyd_1.png\" alt><br><img src=\"floyd_2.png\" alt></p>\n"},{"title":"Generate 0 and 1 with Equal Probability","date":"2018-11-12T15:00:55.000Z","_content":"一个有问题的解法：\n![](infinite_loop.jpg)\n上述解法在i,j取值为0,0和1,1时，均造成死循环。正确的做法应该是把原始随机函数放入while中。\n```python\n#小年糕面试题\n# given     A()  return 0 1  probability: p 1-p\n# implement B()  return 0 1  probability: 50% 50%\n\ndef B():\n    while(True):\n        i = A()\n        j = A()\n        if((0 == i) and (1 == j)):   # p*(1-p)\n            return 0\n        elif((1 == i) and (0 == j)): # (1-p)*p\n            return 1\n```\n\n\n","source":"_posts/Generate-0-and-1-with-Equal-Probability.md","raw":"---\ntitle: Generate 0 and 1 with Equal Probability\ndate: 2018-11-12 23:00:55\ncategories:\ntags:\n---\n一个有问题的解法：\n![](infinite_loop.jpg)\n上述解法在i,j取值为0,0和1,1时，均造成死循环。正确的做法应该是把原始随机函数放入while中。\n```python\n#小年糕面试题\n# given     A()  return 0 1  probability: p 1-p\n# implement B()  return 0 1  probability: 50% 50%\n\ndef B():\n    while(True):\n        i = A()\n        j = A()\n        if((0 == i) and (1 == j)):   # p*(1-p)\n            return 0\n        elif((1 == i) and (0 == j)): # (1-p)*p\n            return 1\n```\n\n\n","slug":"Generate-0-and-1-with-Equal-Probability","published":1,"updated":"2019-01-13T10:03:48.519Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjy5kaqtt000d5ge8fadk0jap","content":"<p>一个有问题的解法：<br><img src=\"infinite_loop.jpg\" alt><br>上述解法在i,j取值为0,0和1,1时，均造成死循环。正确的做法应该是把原始随机函数放入while中。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#小年糕面试题</span></span><br><span class=\"line\"><span class=\"comment\"># given     A()  return 0 1  probability: p 1-p</span></span><br><span class=\"line\"><span class=\"comment\"># implement B()  return 0 1  probability: 50% 50%</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">B</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"literal\">True</span>):</span><br><span class=\"line\">        i = A()</span><br><span class=\"line\">        j = A()</span><br><span class=\"line\">        <span class=\"keyword\">if</span>((<span class=\"number\">0</span> == i) <span class=\"keyword\">and</span> (<span class=\"number\">1</span> == j)):   <span class=\"comment\"># p*(1-p)</span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">0</span></span><br><span class=\"line\">        <span class=\"keyword\">elif</span>((<span class=\"number\">1</span> == i) <span class=\"keyword\">and</span> (<span class=\"number\">0</span> == j)): <span class=\"comment\"># (1-p)*p</span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<p>一个有问题的解法：<br><img src=\"infinite_loop.jpg\" alt><br>上述解法在i,j取值为0,0和1,1时，均造成死循环。正确的做法应该是把原始随机函数放入while中。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#小年糕面试题</span></span><br><span class=\"line\"><span class=\"comment\"># given     A()  return 0 1  probability: p 1-p</span></span><br><span class=\"line\"><span class=\"comment\"># implement B()  return 0 1  probability: 50% 50%</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">B</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"literal\">True</span>):</span><br><span class=\"line\">        i = A()</span><br><span class=\"line\">        j = A()</span><br><span class=\"line\">        <span class=\"keyword\">if</span>((<span class=\"number\">0</span> == i) <span class=\"keyword\">and</span> (<span class=\"number\">1</span> == j)):   <span class=\"comment\"># p*(1-p)</span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">0</span></span><br><span class=\"line\">        <span class=\"keyword\">elif</span>((<span class=\"number\">1</span> == i) <span class=\"keyword\">and</span> (<span class=\"number\">0</span> == j)): <span class=\"comment\"># (1-p)*p</span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n\n"},{"title":"Generate Verification Code in Python","date":"2018-12-16T11:20:10.000Z","_content":"```python\nimport random\n\n\ndef generate_verification_code(length=6):\n    \"\"\"随机生成6位的验证码\"\"\"\n    code_list = []\n    for i in range(10): # 0-9\n        code_list.append(str(i))\n    for i in range(ord(\"A\"), ord(\"Z\") + 1):\n        code_list.append(chr(i))\n    for i in range(ord(\"a\"), ord(\"z\") + 1):\n        code_list.append(chr(i))\n\n    veri_list = random.sample(code_list, length)\n    return \"\".join(veri_list)\n\n\nif __name__ == \"__main__\":\n    print(generate_verification_code())\n    print(generate_verification_code(8))\n```\n```cmd\nji0sYH\nj8XfT9sh\n```\n###### REF\n![](random.sample.png)\n![](ord.png)\n![](chr.png)\n","source":"_posts/Generate-Verification-Code-in-Python.md","raw":"---\ntitle: Generate Verification Code in Python\ndate: 2018-12-16 19:20:10\ncategories:\ntags:\n---\n```python\nimport random\n\n\ndef generate_verification_code(length=6):\n    \"\"\"随机生成6位的验证码\"\"\"\n    code_list = []\n    for i in range(10): # 0-9\n        code_list.append(str(i))\n    for i in range(ord(\"A\"), ord(\"Z\") + 1):\n        code_list.append(chr(i))\n    for i in range(ord(\"a\"), ord(\"z\") + 1):\n        code_list.append(chr(i))\n\n    veri_list = random.sample(code_list, length)\n    return \"\".join(veri_list)\n\n\nif __name__ == \"__main__\":\n    print(generate_verification_code())\n    print(generate_verification_code(8))\n```\n```cmd\nji0sYH\nj8XfT9sh\n```\n###### REF\n![](random.sample.png)\n![](ord.png)\n![](chr.png)\n","slug":"Generate-Verification-Code-in-Python","published":1,"updated":"2019-01-13T10:03:48.520Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjy5kaqtu000e5ge8balu8f1n","content":"<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> random</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">generate_verification_code</span><span class=\"params\">(length=<span class=\"number\">6</span>)</span>:</span></span><br><span class=\"line\">    <span class=\"string\">\"\"\"随机生成6位的验证码\"\"\"</span></span><br><span class=\"line\">    code_list = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">10</span>): <span class=\"comment\"># 0-9</span></span><br><span class=\"line\">        code_list.append(str(i))</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(ord(<span class=\"string\">\"A\"</span>), ord(<span class=\"string\">\"Z\"</span>) + <span class=\"number\">1</span>):</span><br><span class=\"line\">        code_list.append(chr(i))</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(ord(<span class=\"string\">\"a\"</span>), ord(<span class=\"string\">\"z\"</span>) + <span class=\"number\">1</span>):</span><br><span class=\"line\">        code_list.append(chr(i))</span><br><span class=\"line\"></span><br><span class=\"line\">    veri_list = random.sample(code_list, length)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">\"\"</span>.join(veri_list)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">\"__main__\"</span>:</span><br><span class=\"line\">    print(generate_verification_code())</span><br><span class=\"line\">    print(generate_verification_code(<span class=\"number\">8</span>))</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ji0sYH</span><br><span class=\"line\">j8XfT9sh</span><br></pre></td></tr></table></figure>\n\n<h6 id=\"REF\"><a href=\"#REF\" class=\"headerlink\" title=\"REF\"></a>REF</h6><p><img src=\"random.sample.png\" alt><br><img src=\"ord.png\" alt><br><img src=\"chr.png\" alt></p>\n","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> random</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">generate_verification_code</span><span class=\"params\">(length=<span class=\"number\">6</span>)</span>:</span></span><br><span class=\"line\">    <span class=\"string\">\"\"\"随机生成6位的验证码\"\"\"</span></span><br><span class=\"line\">    code_list = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">10</span>): <span class=\"comment\"># 0-9</span></span><br><span class=\"line\">        code_list.append(str(i))</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(ord(<span class=\"string\">\"A\"</span>), ord(<span class=\"string\">\"Z\"</span>) + <span class=\"number\">1</span>):</span><br><span class=\"line\">        code_list.append(chr(i))</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(ord(<span class=\"string\">\"a\"</span>), ord(<span class=\"string\">\"z\"</span>) + <span class=\"number\">1</span>):</span><br><span class=\"line\">        code_list.append(chr(i))</span><br><span class=\"line\"></span><br><span class=\"line\">    veri_list = random.sample(code_list, length)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">\"\"</span>.join(veri_list)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">\"__main__\"</span>:</span><br><span class=\"line\">    print(generate_verification_code())</span><br><span class=\"line\">    print(generate_verification_code(<span class=\"number\">8</span>))</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ji0sYH</span><br><span class=\"line\">j8XfT9sh</span><br></pre></td></tr></table></figure>\n\n<h6 id=\"REF\"><a href=\"#REF\" class=\"headerlink\" title=\"REF\"></a>REF</h6><p><img src=\"random.sample.png\" alt><br><img src=\"ord.png\" alt><br><img src=\"chr.png\" alt></p>\n"},{"title":"List Files and Directory Tree Structure in Python","date":"2018-12-16T07:45:02.000Z","_content":"```python\nimport os\n\n\ndef walk(path):\n    l = []\n    file_dir_list = os.listdir(path)\n    if not file_dir_list:\n        return []\n    for item in file_dir_list:\n        if os.path.isfile(path + \"\\\\\" + item):\n            l.append(item)\n        else:\n            l += walk(path + \"\\\\\" + item)\n\n    return l\n\n\ndef dfs_show_dir(path, depth):\n    if depth == 0:\n        print(\"root: [\" + path + \"]\")\n\n    for item in os.listdir(path):\n        print(\"|  \" * depth + \"+--\" + item)\n\n        new_item = path + \"/\" + item\n        if os.path.isdir(new_item):\n            dfs_show_dir(new_item, depth + 1)\n\n\nif __name__ == \"__main__\":\n    path = os.getcwd()\n    os.chdir(\"C:\\\\Users\\\\lixiang\\\\PycharmProjects\\\\other\\\\testcase_for_walk\")\n    path = os.getcwd()\n    print(walk(path), \"\\n\")\n\n    dfs_show_dir(path, 0)\n```\n![](dir_structure.png)\n```cmd\n['4.txt', '5.txt', '6.txt'] \n\nroot: [C:\\Users\\lixiang\\PycharmProjects\\other\\testcase_for_walk]\n+--1\n|  +--2\n|  +--3\n|  |  +--4.txt\n|  |  +--5.txt\n|  +--6.txt\n```\n","source":"_posts/List-Files-and-Directory-Tree-Structure-in-Python.md","raw":"---\ntitle: List Files and Directory Tree Structure in Python\ndate: 2018-12-16 15:45:02\ncategories:\ntags:\n---\n```python\nimport os\n\n\ndef walk(path):\n    l = []\n    file_dir_list = os.listdir(path)\n    if not file_dir_list:\n        return []\n    for item in file_dir_list:\n        if os.path.isfile(path + \"\\\\\" + item):\n            l.append(item)\n        else:\n            l += walk(path + \"\\\\\" + item)\n\n    return l\n\n\ndef dfs_show_dir(path, depth):\n    if depth == 0:\n        print(\"root: [\" + path + \"]\")\n\n    for item in os.listdir(path):\n        print(\"|  \" * depth + \"+--\" + item)\n\n        new_item = path + \"/\" + item\n        if os.path.isdir(new_item):\n            dfs_show_dir(new_item, depth + 1)\n\n\nif __name__ == \"__main__\":\n    path = os.getcwd()\n    os.chdir(\"C:\\\\Users\\\\lixiang\\\\PycharmProjects\\\\other\\\\testcase_for_walk\")\n    path = os.getcwd()\n    print(walk(path), \"\\n\")\n\n    dfs_show_dir(path, 0)\n```\n![](dir_structure.png)\n```cmd\n['4.txt', '5.txt', '6.txt'] \n\nroot: [C:\\Users\\lixiang\\PycharmProjects\\other\\testcase_for_walk]\n+--1\n|  +--2\n|  +--3\n|  |  +--4.txt\n|  |  +--5.txt\n|  +--6.txt\n```\n","slug":"List-Files-and-Directory-Tree-Structure-in-Python","published":1,"updated":"2019-01-13T10:03:48.522Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjy5kaqtw000g5ge8ob9ys4y8","content":"<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">walk</span><span class=\"params\">(path)</span>:</span></span><br><span class=\"line\">    l = []</span><br><span class=\"line\">    file_dir_list = os.listdir(path)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> file_dir_list:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> file_dir_list:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> os.path.isfile(path + <span class=\"string\">\"\\\\\"</span> + item):</span><br><span class=\"line\">            l.append(item)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            l += walk(path + <span class=\"string\">\"\\\\\"</span> + item)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> l</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">dfs_show_dir</span><span class=\"params\">(path, depth)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> depth == <span class=\"number\">0</span>:</span><br><span class=\"line\">        print(<span class=\"string\">\"root: [\"</span> + path + <span class=\"string\">\"]\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> os.listdir(path):</span><br><span class=\"line\">        print(<span class=\"string\">\"|  \"</span> * depth + <span class=\"string\">\"+--\"</span> + item)</span><br><span class=\"line\"></span><br><span class=\"line\">        new_item = path + <span class=\"string\">\"/\"</span> + item</span><br><span class=\"line\">        <span class=\"keyword\">if</span> os.path.isdir(new_item):</span><br><span class=\"line\">            dfs_show_dir(new_item, depth + <span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">\"__main__\"</span>:</span><br><span class=\"line\">    path = os.getcwd()</span><br><span class=\"line\">    os.chdir(<span class=\"string\">\"C:\\\\Users\\\\lixiang\\\\PycharmProjects\\\\other\\\\testcase_for_walk\"</span>)</span><br><span class=\"line\">    path = os.getcwd()</span><br><span class=\"line\">    print(walk(path), <span class=\"string\">\"\\n\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    dfs_show_dir(path, <span class=\"number\">0</span>)</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"dir_structure.png\" alt></p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">['<span class=\"number\">4</span>.txt', '<span class=\"number\">5</span>.txt', '<span class=\"number\">6</span>.txt'] </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">root: [<span class=\"title\">C</span>:\\<span class=\"title\">Users</span>\\<span class=\"title\">lixiang</span>\\<span class=\"title\">PycharmProjects</span>\\<span class=\"title\">other</span>\\<span class=\"title\">testcase_for_walk</span>]</span></span><br><span class=\"line\"><span class=\"function\">+--1</span></span><br><span class=\"line\"><span class=\"function\">|  +--2</span></span><br><span class=\"line\"><span class=\"function\">|  +--3</span></span><br><span class=\"line\"><span class=\"function\">|  |  +--4.<span class=\"title\">txt</span></span></span><br><span class=\"line\"><span class=\"function\">|  |  +--5.<span class=\"title\">txt</span></span></span><br><span class=\"line\"><span class=\"function\">|  +--6.<span class=\"title\">txt</span></span></span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">walk</span><span class=\"params\">(path)</span>:</span></span><br><span class=\"line\">    l = []</span><br><span class=\"line\">    file_dir_list = os.listdir(path)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> file_dir_list:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> file_dir_list:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> os.path.isfile(path + <span class=\"string\">\"\\\\\"</span> + item):</span><br><span class=\"line\">            l.append(item)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            l += walk(path + <span class=\"string\">\"\\\\\"</span> + item)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> l</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">dfs_show_dir</span><span class=\"params\">(path, depth)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> depth == <span class=\"number\">0</span>:</span><br><span class=\"line\">        print(<span class=\"string\">\"root: [\"</span> + path + <span class=\"string\">\"]\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> os.listdir(path):</span><br><span class=\"line\">        print(<span class=\"string\">\"|  \"</span> * depth + <span class=\"string\">\"+--\"</span> + item)</span><br><span class=\"line\"></span><br><span class=\"line\">        new_item = path + <span class=\"string\">\"/\"</span> + item</span><br><span class=\"line\">        <span class=\"keyword\">if</span> os.path.isdir(new_item):</span><br><span class=\"line\">            dfs_show_dir(new_item, depth + <span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">\"__main__\"</span>:</span><br><span class=\"line\">    path = os.getcwd()</span><br><span class=\"line\">    os.chdir(<span class=\"string\">\"C:\\\\Users\\\\lixiang\\\\PycharmProjects\\\\other\\\\testcase_for_walk\"</span>)</span><br><span class=\"line\">    path = os.getcwd()</span><br><span class=\"line\">    print(walk(path), <span class=\"string\">\"\\n\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    dfs_show_dir(path, <span class=\"number\">0</span>)</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"dir_structure.png\" alt></p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">['<span class=\"number\">4</span>.txt', '<span class=\"number\">5</span>.txt', '<span class=\"number\">6</span>.txt'] </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">root: [<span class=\"title\">C</span>:\\<span class=\"title\">Users</span>\\<span class=\"title\">lixiang</span>\\<span class=\"title\">PycharmProjects</span>\\<span class=\"title\">other</span>\\<span class=\"title\">testcase_for_walk</span>]</span></span><br><span class=\"line\"><span class=\"function\">+--1</span></span><br><span class=\"line\"><span class=\"function\">|  +--2</span></span><br><span class=\"line\"><span class=\"function\">|  +--3</span></span><br><span class=\"line\"><span class=\"function\">|  |  +--4.<span class=\"title\">txt</span></span></span><br><span class=\"line\"><span class=\"function\">|  |  +--5.<span class=\"title\">txt</span></span></span><br><span class=\"line\"><span class=\"function\">|  +--6.<span class=\"title\">txt</span></span></span><br></pre></td></tr></table></figure>\n\n"},{"title":"Similar Strings","date":"2018-12-01T11:49:24.000Z","_content":"![](similar_strings.png)\n```python\n# Cloudin 云英 面试题\ndef is_similar(A, B):\n    dict_a = {}\n    dict_b = {}\n    for i in A:\n        if i in dict_a:\n            dict_a[i] += 1\n        else:\n            dict_a[i] = 1\n    for j in B:\n        if j in dict_b:\n            dict_b[j] += 1\n        else:\n            dict_b[j] = 1\n\n    if dict_a == dict_b:\n        return True\n    else:\n        return False\n\n\nif __name__ == \"__main__\":\n    A = \"aac\"\n    B = \"caa\"\n    print(is_similar(A, B))\n    A = \"aac\"\n    B = \"caab\"\n    print(is_similar(A, B))\n```\n```python\n# Cloudin 云英 面试题\nfrom collections import Counter\n\n\ndef is_similar_collections(A, B):\n    cnt_a = Counter(A)\n    cnt_b = Counter(B)\n    if cnt_a == cnt_b:\n        return True\n    else:\n        return False\n\n\nif __name__ == \"__main__\":\n    A = \"aac\"\n    B = \"caa\"\n    print(is_similar_collections(A, B))\n    A = \"aac\"\n    B = \"caab\"\n    print(is_similar_collections(A, B))\n```\n","source":"_posts/Similar-Strings.md","raw":"---\ntitle: Similar Strings\ndate: 2018-12-01 19:49:24\ncategories:\ntags:\n---\n![](similar_strings.png)\n```python\n# Cloudin 云英 面试题\ndef is_similar(A, B):\n    dict_a = {}\n    dict_b = {}\n    for i in A:\n        if i in dict_a:\n            dict_a[i] += 1\n        else:\n            dict_a[i] = 1\n    for j in B:\n        if j in dict_b:\n            dict_b[j] += 1\n        else:\n            dict_b[j] = 1\n\n    if dict_a == dict_b:\n        return True\n    else:\n        return False\n\n\nif __name__ == \"__main__\":\n    A = \"aac\"\n    B = \"caa\"\n    print(is_similar(A, B))\n    A = \"aac\"\n    B = \"caab\"\n    print(is_similar(A, B))\n```\n```python\n# Cloudin 云英 面试题\nfrom collections import Counter\n\n\ndef is_similar_collections(A, B):\n    cnt_a = Counter(A)\n    cnt_b = Counter(B)\n    if cnt_a == cnt_b:\n        return True\n    else:\n        return False\n\n\nif __name__ == \"__main__\":\n    A = \"aac\"\n    B = \"caa\"\n    print(is_similar_collections(A, B))\n    A = \"aac\"\n    B = \"caab\"\n    print(is_similar_collections(A, B))\n```\n","slug":"Similar-Strings","published":1,"updated":"2019-01-13T10:03:48.522Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjy5kaqtx000i5ge8n4hgq9if","content":"<p><img src=\"similar_strings.png\" alt></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Cloudin 云英 面试题</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">is_similar</span><span class=\"params\">(A, B)</span>:</span></span><br><span class=\"line\">    dict_a = &#123;&#125;</span><br><span class=\"line\">    dict_b = &#123;&#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> A:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> i <span class=\"keyword\">in</span> dict_a:</span><br><span class=\"line\">            dict_a[i] += <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            dict_a[i] = <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> B:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> j <span class=\"keyword\">in</span> dict_b:</span><br><span class=\"line\">            dict_b[j] += <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            dict_b[j] = <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> dict_a == dict_b:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">\"__main__\"</span>:</span><br><span class=\"line\">    A = <span class=\"string\">\"aac\"</span></span><br><span class=\"line\">    B = <span class=\"string\">\"caa\"</span></span><br><span class=\"line\">    print(is_similar(A, B))</span><br><span class=\"line\">    A = <span class=\"string\">\"aac\"</span></span><br><span class=\"line\">    B = <span class=\"string\">\"caab\"</span></span><br><span class=\"line\">    print(is_similar(A, B))</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Cloudin 云英 面试题</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> collections <span class=\"keyword\">import</span> Counter</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">is_similar_collections</span><span class=\"params\">(A, B)</span>:</span></span><br><span class=\"line\">    cnt_a = Counter(A)</span><br><span class=\"line\">    cnt_b = Counter(B)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> cnt_a == cnt_b:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">\"__main__\"</span>:</span><br><span class=\"line\">    A = <span class=\"string\">\"aac\"</span></span><br><span class=\"line\">    B = <span class=\"string\">\"caa\"</span></span><br><span class=\"line\">    print(is_similar_collections(A, B))</span><br><span class=\"line\">    A = <span class=\"string\">\"aac\"</span></span><br><span class=\"line\">    B = <span class=\"string\">\"caab\"</span></span><br><span class=\"line\">    print(is_similar_collections(A, B))</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"similar_strings.png\" alt></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Cloudin 云英 面试题</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">is_similar</span><span class=\"params\">(A, B)</span>:</span></span><br><span class=\"line\">    dict_a = &#123;&#125;</span><br><span class=\"line\">    dict_b = &#123;&#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> A:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> i <span class=\"keyword\">in</span> dict_a:</span><br><span class=\"line\">            dict_a[i] += <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            dict_a[i] = <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> B:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> j <span class=\"keyword\">in</span> dict_b:</span><br><span class=\"line\">            dict_b[j] += <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            dict_b[j] = <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> dict_a == dict_b:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">\"__main__\"</span>:</span><br><span class=\"line\">    A = <span class=\"string\">\"aac\"</span></span><br><span class=\"line\">    B = <span class=\"string\">\"caa\"</span></span><br><span class=\"line\">    print(is_similar(A, B))</span><br><span class=\"line\">    A = <span class=\"string\">\"aac\"</span></span><br><span class=\"line\">    B = <span class=\"string\">\"caab\"</span></span><br><span class=\"line\">    print(is_similar(A, B))</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Cloudin 云英 面试题</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> collections <span class=\"keyword\">import</span> Counter</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">is_similar_collections</span><span class=\"params\">(A, B)</span>:</span></span><br><span class=\"line\">    cnt_a = Counter(A)</span><br><span class=\"line\">    cnt_b = Counter(B)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> cnt_a == cnt_b:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">\"__main__\"</span>:</span><br><span class=\"line\">    A = <span class=\"string\">\"aac\"</span></span><br><span class=\"line\">    B = <span class=\"string\">\"caa\"</span></span><br><span class=\"line\">    print(is_similar_collections(A, B))</span><br><span class=\"line\">    A = <span class=\"string\">\"aac\"</span></span><br><span class=\"line\">    B = <span class=\"string\">\"caab\"</span></span><br><span class=\"line\">    print(is_similar_collections(A, B))</span><br></pre></td></tr></table></figure>\n\n"},{"title":"Sort a Special Array","date":"2018-12-01T16:36:16.000Z","_content":"![](sort.png)\n```python\n# Cloudin云英 面试题\ndef sort_special_array(a):\n    if not a:\n        return a\n\n    ls = []\n    i = 0\n    j = len(a) - 1\n    k = 0\n    if a[0] < a[-1]:\n        ls.append(a[0])\n        i += 1\n    else:\n        ls.append(a[-1])\n        j -= 1\n\n    while i <= j:\n        if ls[k] == a[i]:\n            i += 1\n            continue\n        if ls[k] == a[j]:\n            j -= 1\n            continue\n        if a[i] < a[j]:\n            ls.append(a[i])\n            i += 1\n            k += 1\n        else:\n            ls.append(a[j])\n            j -= 1\n            k += 1\n\n    return ls\n\n\nif __name__ == \"__main__\":\n    a = [-4, -2, -2, 0, 4, 5, 7, 8, 7, 5, 4, 3, 2, 0, 0, -3, -5]\n    assert sort_special_array(a) == [-5, -4, -3, -2, 0, 2, 3, 4, 5, 7, 8]\n    a = [-4, -2, -2, 0, 4, 5, 7]\n    assert sort_special_array(a) == [-4, -2, 0, 4, 5, 7]\n    a = [4, 2, 2]\n    assert sort_special_array(a) == [2, 4]\n    a = [5]\n    assert sort_special_array(a) == [5]\n    a = []\n    assert sort_special_array(a) == []\n```\n","source":"_posts/Sort-a-Special-Array.md","raw":"---\ntitle: Sort a Special Array\ndate: 2018-12-02 00:36:16\ncategories:\ntags:\n---\n![](sort.png)\n```python\n# Cloudin云英 面试题\ndef sort_special_array(a):\n    if not a:\n        return a\n\n    ls = []\n    i = 0\n    j = len(a) - 1\n    k = 0\n    if a[0] < a[-1]:\n        ls.append(a[0])\n        i += 1\n    else:\n        ls.append(a[-1])\n        j -= 1\n\n    while i <= j:\n        if ls[k] == a[i]:\n            i += 1\n            continue\n        if ls[k] == a[j]:\n            j -= 1\n            continue\n        if a[i] < a[j]:\n            ls.append(a[i])\n            i += 1\n            k += 1\n        else:\n            ls.append(a[j])\n            j -= 1\n            k += 1\n\n    return ls\n\n\nif __name__ == \"__main__\":\n    a = [-4, -2, -2, 0, 4, 5, 7, 8, 7, 5, 4, 3, 2, 0, 0, -3, -5]\n    assert sort_special_array(a) == [-5, -4, -3, -2, 0, 2, 3, 4, 5, 7, 8]\n    a = [-4, -2, -2, 0, 4, 5, 7]\n    assert sort_special_array(a) == [-4, -2, 0, 4, 5, 7]\n    a = [4, 2, 2]\n    assert sort_special_array(a) == [2, 4]\n    a = [5]\n    assert sort_special_array(a) == [5]\n    a = []\n    assert sort_special_array(a) == []\n```\n","slug":"Sort-a-Special-Array","published":1,"updated":"2019-01-13T10:03:48.522Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjy5kaqu2000k5ge88ph6i3ym","content":"<p><img src=\"sort.png\" alt></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Cloudin云英 面试题</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">sort_special_array</span><span class=\"params\">(a)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> a:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> a</span><br><span class=\"line\"></span><br><span class=\"line\">    ls = []</span><br><span class=\"line\">    i = <span class=\"number\">0</span></span><br><span class=\"line\">    j = len(a) - <span class=\"number\">1</span></span><br><span class=\"line\">    k = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> a[<span class=\"number\">0</span>] &lt; a[<span class=\"number\">-1</span>]:</span><br><span class=\"line\">        ls.append(a[<span class=\"number\">0</span>])</span><br><span class=\"line\">        i += <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        ls.append(a[<span class=\"number\">-1</span>])</span><br><span class=\"line\">        j -= <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> i &lt;= j:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ls[k] == a[i]:</span><br><span class=\"line\">            i += <span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"keyword\">continue</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> ls[k] == a[j]:</span><br><span class=\"line\">            j -= <span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"keyword\">continue</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> a[i] &lt; a[j]:</span><br><span class=\"line\">            ls.append(a[i])</span><br><span class=\"line\">            i += <span class=\"number\">1</span></span><br><span class=\"line\">            k += <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            ls.append(a[j])</span><br><span class=\"line\">            j -= <span class=\"number\">1</span></span><br><span class=\"line\">            k += <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> ls</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">\"__main__\"</span>:</span><br><span class=\"line\">    a = [<span class=\"number\">-4</span>, <span class=\"number\">-2</span>, <span class=\"number\">-2</span>, <span class=\"number\">0</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">7</span>, <span class=\"number\">5</span>, <span class=\"number\">4</span>, <span class=\"number\">3</span>, <span class=\"number\">2</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">-3</span>, <span class=\"number\">-5</span>]</span><br><span class=\"line\">    <span class=\"keyword\">assert</span> sort_special_array(a) == [<span class=\"number\">-5</span>, <span class=\"number\">-4</span>, <span class=\"number\">-3</span>, <span class=\"number\">-2</span>, <span class=\"number\">0</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">7</span>, <span class=\"number\">8</span>]</span><br><span class=\"line\">    a = [<span class=\"number\">-4</span>, <span class=\"number\">-2</span>, <span class=\"number\">-2</span>, <span class=\"number\">0</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">7</span>]</span><br><span class=\"line\">    <span class=\"keyword\">assert</span> sort_special_array(a) == [<span class=\"number\">-4</span>, <span class=\"number\">-2</span>, <span class=\"number\">0</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">7</span>]</span><br><span class=\"line\">    a = [<span class=\"number\">4</span>, <span class=\"number\">2</span>, <span class=\"number\">2</span>]</span><br><span class=\"line\">    <span class=\"keyword\">assert</span> sort_special_array(a) == [<span class=\"number\">2</span>, <span class=\"number\">4</span>]</span><br><span class=\"line\">    a = [<span class=\"number\">5</span>]</span><br><span class=\"line\">    <span class=\"keyword\">assert</span> sort_special_array(a) == [<span class=\"number\">5</span>]</span><br><span class=\"line\">    a = []</span><br><span class=\"line\">    <span class=\"keyword\">assert</span> sort_special_array(a) == []</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"sort.png\" alt></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Cloudin云英 面试题</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">sort_special_array</span><span class=\"params\">(a)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> a:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> a</span><br><span class=\"line\"></span><br><span class=\"line\">    ls = []</span><br><span class=\"line\">    i = <span class=\"number\">0</span></span><br><span class=\"line\">    j = len(a) - <span class=\"number\">1</span></span><br><span class=\"line\">    k = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> a[<span class=\"number\">0</span>] &lt; a[<span class=\"number\">-1</span>]:</span><br><span class=\"line\">        ls.append(a[<span class=\"number\">0</span>])</span><br><span class=\"line\">        i += <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        ls.append(a[<span class=\"number\">-1</span>])</span><br><span class=\"line\">        j -= <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> i &lt;= j:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ls[k] == a[i]:</span><br><span class=\"line\">            i += <span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"keyword\">continue</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> ls[k] == a[j]:</span><br><span class=\"line\">            j -= <span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"keyword\">continue</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> a[i] &lt; a[j]:</span><br><span class=\"line\">            ls.append(a[i])</span><br><span class=\"line\">            i += <span class=\"number\">1</span></span><br><span class=\"line\">            k += <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            ls.append(a[j])</span><br><span class=\"line\">            j -= <span class=\"number\">1</span></span><br><span class=\"line\">            k += <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> ls</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">\"__main__\"</span>:</span><br><span class=\"line\">    a = [<span class=\"number\">-4</span>, <span class=\"number\">-2</span>, <span class=\"number\">-2</span>, <span class=\"number\">0</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">7</span>, <span class=\"number\">5</span>, <span class=\"number\">4</span>, <span class=\"number\">3</span>, <span class=\"number\">2</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">-3</span>, <span class=\"number\">-5</span>]</span><br><span class=\"line\">    <span class=\"keyword\">assert</span> sort_special_array(a) == [<span class=\"number\">-5</span>, <span class=\"number\">-4</span>, <span class=\"number\">-3</span>, <span class=\"number\">-2</span>, <span class=\"number\">0</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">7</span>, <span class=\"number\">8</span>]</span><br><span class=\"line\">    a = [<span class=\"number\">-4</span>, <span class=\"number\">-2</span>, <span class=\"number\">-2</span>, <span class=\"number\">0</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">7</span>]</span><br><span class=\"line\">    <span class=\"keyword\">assert</span> sort_special_array(a) == [<span class=\"number\">-4</span>, <span class=\"number\">-2</span>, <span class=\"number\">0</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">7</span>]</span><br><span class=\"line\">    a = [<span class=\"number\">4</span>, <span class=\"number\">2</span>, <span class=\"number\">2</span>]</span><br><span class=\"line\">    <span class=\"keyword\">assert</span> sort_special_array(a) == [<span class=\"number\">2</span>, <span class=\"number\">4</span>]</span><br><span class=\"line\">    a = [<span class=\"number\">5</span>]</span><br><span class=\"line\">    <span class=\"keyword\">assert</span> sort_special_array(a) == [<span class=\"number\">5</span>]</span><br><span class=\"line\">    a = []</span><br><span class=\"line\">    <span class=\"keyword\">assert</span> sort_special_array(a) == []</span><br></pre></td></tr></table></figure>\n\n"},{"title":"Sports Meeting","date":"2018-12-15T14:38:42.000Z","_content":"###### 问题描述\n学校举行了一个运动会，有以下六个项目。有五位同学报名了相应的项目。假设每个项目所用时间均为一个小时。\n如何安排各个项目的顺序，使运动会在最短时间内结束。同学的参加的项目顺序可以调换，必须参加自己报的项目。\n![](question.jpg)\n###### 分析\n尽量让更多的项目同时进行，同时保证不冲突。\n```cpp\n#include <queue>\n#include <iostream>\nusing namespace std;\n\n// n: 运动员数  m: 项目数\n// 指针p指向一维数组的首地址 二维冲突表\nint n = 0, m = 0;\nint *p = NULL;\nqueue<int> q_events;\n\n/*生成运动员报名的冲突表，将二维数组变成一维数组\n  items: 某位运动员的报名情况\n  比如一共六个项目，某运动员报了2和5，其items对应为0 1 0 0 1 0\n*/\nvoid generate_collision_table()\n{\n    int i = 0;\n    int j = 0;\n    int total_number = 0;\n    int *items = new int[m];\n\n    for (i = 1; i <= n; i++)   // 对每个运动员进行处理\n    {\n        cout << \"Please enter the total number of entries for No. \" << i << \" athlete: \";\n        cin >> total_number;\n\n        j = 0;\n        while (j < m)   // 初始化，数组元素置为0\n        {\n            items[j++] = 0;\n        }\n\n        cout << \"Please enter the item numbers of the No.\" << i << \" athlete (separated by spaces): \";\n        j = 0;\n        int item_num = 0;\n        while (j < total_number)\n        {\n            cin >> item_num;\n            items[item_num - 1] = 1;\n            j++;\n        }\n\n        // 生成冲突数组\n        int r = 0, s = 0;\n        for (r = 0; r < m; r++)\n        {\n            for (s = 0; s < m; s++)\n            {\n                if(r != s && items[r] == 1 && items[s] == 1)\n                {\n                    p[r * m + s] = 1;\n                    p[s * m + r] = 1;\n                }\n            }\n        }\n    }\n\n    // 打印二维冲突表\n    cout << \"Collision Table : \" << endl;\n    for (i = 0; i < m; i++)\n    {\n        for (j = 0; j < m; j++)\n        {\n            cout << p[i * m + j] << \"  \";\n        }\n        cout << endl;\n    }\n    cout << endl;\n}\n\nvoid input()\n{\n    int i = 0;\n    int j = 0;\n    cout << \"Please enter the number of athletes : \";\n    cin >> n;\n    cout << \"Please enter the number of items in the sports meeting :\";\n    cin >> m;\n\n    cout << \"The event numbers are : \";\n    for (j = 1; j <= m; j++)\n    {\n        cout << j;\n        if(j != m)\n        {\n            cout << \", \";\n        }\n    }\n    cout << endl << endl;\n\n    p = new int[m * m];\n    for (i = 0; i < m; i++) // 初始化二维冲突表\n    {\n        for (j = 0; j < m; j++)\n        {\n            p[i * m + j] = 0;\n        }\n    }\n}\n\n\nvoid display_queue(queue<int> q)\n{\n    while(!q.empty())\n    {\n        cout << q.front() << \" \";\n        q.pop();\n    }\n    cout << endl;\n}\n\nvoid generate_groups()\n{\n    int group_num = 0;\n    int i = 0, j = 0;\n    for (i = 0; i < m; i++)\n    {\n        q_events.push(i + 1);\n    }\n\n    while(!q_events.empty())\n    {\n        cout << \"The remaining items are: \";\n        display_queue(q_events);\n        int head = q_events.front();\n        group_num++;\n        cout << \"The items in Group No. \" << group_num << \" : \" << head << \" \";\n        q_events.pop();\n\n        // 对剩余元素逐个判断，谁能与head分在一组\n        int *collision = new int[m];\n        for (i = 0; i < m; i++)\n        {\n            collision[i] = p[(head - 1) * m + i];   // collision数组初始化\n        }\n        int len = q_events.size();\n\n        for (i = 1; i <= len; i++)\n        {\n            int f = q_events.front();\n            if(collision[f - 1] == 0) //f与组内元素没有冲突\n            {\n                for (j = 0; j < m; j++)\n                {\n                    collision[j] += p[(f - 1) * m + j];  // 将f与其他项目的冲突情况累加到collision上\n                }\n                f = q_events.front();\n                cout << f << \" \";      // f入组\n                q_events.pop();        // 移除f\n            }\n            else  // f与组内有冲突\n            {\n                f = q_events.front();\n                q_events.pop();\n                q_events.push(f);\n            }\n            \n        }\n        cout << endl;\n    }\n    cout << endl;\n}\n\nint main()\n{\n    input();\n    generate_collision_table();\n    generate_groups();\n\n    return 0;\n}\n\n/*\n例如：某运动会设有 9 个项目:\n    A = { 1，2，3，4，5，6，7，8，9 }，\n七名运动员报名参加的项目分别为：\n（2，5，9）、（2，8）、（9，4）、\n（2，1，6）、（4，5）、（6，7，3）、\n（7，5）\n \n (2, 5, 9) ==> (2, 5), (5, 9), (2, 9)\n它们之间的冲突关系为: R = \n{（2，5）,（5，9）,（2，9）,（2，8）,（9，4）,（2，1）,\n（1，6）,（2，6）,（4，5）,（6，7）,（6，3）,（7，3）,（7，5）}\n\n冲突数组为：\n0  1  0  0  0  1  0  0  0\n1  0  0  0  1  1  0  1  1\n0  0  0  0  0  1  1  0  0\n0  0  0  0  1  0  0  0  1\n0  1  0  1  0  0  1  0  1\n1  1  1  0  0  0  1  0  0\n0  0  1  0  1  1  0  0  0\n0  1  0  0  0  0  0  0  0\n0  1  0  1  1  0  0  0  0\n*/\n\n/*\n例如：某运动会设有 6 个项目:\n    A = { 1，2，3，4，5，6 }，\n五名运动员报名参加的项目分别为：\n（1, 2，5）、（3，4）、（3，5, 6）、\n（4，6，1）、（2，6）\n \n它们之间的冲突关系为: R = \n{（1，2）,（1，5）,（2，5）,（3，4）,（3，5）,（3，6）,\n（5，6）,（4，6）,（4，1）,（6，1）,（2，6）}\n\n冲突数组为：\n0  1  0  1  1  1\n1  0  0  0  1  1\n0  0  0  1  1  1\n1  0  1  0  0  1\n1  1  1  0  0  1\n1  1  1  1  1  0\n*/\n```\n![](answer.png)\n###### 思考\n上面的算法是基于队列的。基于所有项目自前至后（从A到F）地寻找是否冲突，进而划分为组。没有冲突的是一组，有冲突的要在不同的组。\n对于第二个用例，有多个解法的结果均为4个小时。上述算法的正确性有待证明，即如何证明所分的组数是最少的组数。\n选择何种策略能保证最优？有另一种策略可供参考，首先选择冲突最多的项目，即参加人数最多的项目，接下来选择的项目按照参加人数依次递减。\n![](answer2.png)\n","source":"_posts/Sports-Meeting.md","raw":"---\ntitle: Sports Meeting\ndate: 2018-12-15 22:38:42\ncategories:\ntags:\n---\n###### 问题描述\n学校举行了一个运动会，有以下六个项目。有五位同学报名了相应的项目。假设每个项目所用时间均为一个小时。\n如何安排各个项目的顺序，使运动会在最短时间内结束。同学的参加的项目顺序可以调换，必须参加自己报的项目。\n![](question.jpg)\n###### 分析\n尽量让更多的项目同时进行，同时保证不冲突。\n```cpp\n#include <queue>\n#include <iostream>\nusing namespace std;\n\n// n: 运动员数  m: 项目数\n// 指针p指向一维数组的首地址 二维冲突表\nint n = 0, m = 0;\nint *p = NULL;\nqueue<int> q_events;\n\n/*生成运动员报名的冲突表，将二维数组变成一维数组\n  items: 某位运动员的报名情况\n  比如一共六个项目，某运动员报了2和5，其items对应为0 1 0 0 1 0\n*/\nvoid generate_collision_table()\n{\n    int i = 0;\n    int j = 0;\n    int total_number = 0;\n    int *items = new int[m];\n\n    for (i = 1; i <= n; i++)   // 对每个运动员进行处理\n    {\n        cout << \"Please enter the total number of entries for No. \" << i << \" athlete: \";\n        cin >> total_number;\n\n        j = 0;\n        while (j < m)   // 初始化，数组元素置为0\n        {\n            items[j++] = 0;\n        }\n\n        cout << \"Please enter the item numbers of the No.\" << i << \" athlete (separated by spaces): \";\n        j = 0;\n        int item_num = 0;\n        while (j < total_number)\n        {\n            cin >> item_num;\n            items[item_num - 1] = 1;\n            j++;\n        }\n\n        // 生成冲突数组\n        int r = 0, s = 0;\n        for (r = 0; r < m; r++)\n        {\n            for (s = 0; s < m; s++)\n            {\n                if(r != s && items[r] == 1 && items[s] == 1)\n                {\n                    p[r * m + s] = 1;\n                    p[s * m + r] = 1;\n                }\n            }\n        }\n    }\n\n    // 打印二维冲突表\n    cout << \"Collision Table : \" << endl;\n    for (i = 0; i < m; i++)\n    {\n        for (j = 0; j < m; j++)\n        {\n            cout << p[i * m + j] << \"  \";\n        }\n        cout << endl;\n    }\n    cout << endl;\n}\n\nvoid input()\n{\n    int i = 0;\n    int j = 0;\n    cout << \"Please enter the number of athletes : \";\n    cin >> n;\n    cout << \"Please enter the number of items in the sports meeting :\";\n    cin >> m;\n\n    cout << \"The event numbers are : \";\n    for (j = 1; j <= m; j++)\n    {\n        cout << j;\n        if(j != m)\n        {\n            cout << \", \";\n        }\n    }\n    cout << endl << endl;\n\n    p = new int[m * m];\n    for (i = 0; i < m; i++) // 初始化二维冲突表\n    {\n        for (j = 0; j < m; j++)\n        {\n            p[i * m + j] = 0;\n        }\n    }\n}\n\n\nvoid display_queue(queue<int> q)\n{\n    while(!q.empty())\n    {\n        cout << q.front() << \" \";\n        q.pop();\n    }\n    cout << endl;\n}\n\nvoid generate_groups()\n{\n    int group_num = 0;\n    int i = 0, j = 0;\n    for (i = 0; i < m; i++)\n    {\n        q_events.push(i + 1);\n    }\n\n    while(!q_events.empty())\n    {\n        cout << \"The remaining items are: \";\n        display_queue(q_events);\n        int head = q_events.front();\n        group_num++;\n        cout << \"The items in Group No. \" << group_num << \" : \" << head << \" \";\n        q_events.pop();\n\n        // 对剩余元素逐个判断，谁能与head分在一组\n        int *collision = new int[m];\n        for (i = 0; i < m; i++)\n        {\n            collision[i] = p[(head - 1) * m + i];   // collision数组初始化\n        }\n        int len = q_events.size();\n\n        for (i = 1; i <= len; i++)\n        {\n            int f = q_events.front();\n            if(collision[f - 1] == 0) //f与组内元素没有冲突\n            {\n                for (j = 0; j < m; j++)\n                {\n                    collision[j] += p[(f - 1) * m + j];  // 将f与其他项目的冲突情况累加到collision上\n                }\n                f = q_events.front();\n                cout << f << \" \";      // f入组\n                q_events.pop();        // 移除f\n            }\n            else  // f与组内有冲突\n            {\n                f = q_events.front();\n                q_events.pop();\n                q_events.push(f);\n            }\n            \n        }\n        cout << endl;\n    }\n    cout << endl;\n}\n\nint main()\n{\n    input();\n    generate_collision_table();\n    generate_groups();\n\n    return 0;\n}\n\n/*\n例如：某运动会设有 9 个项目:\n    A = { 1，2，3，4，5，6，7，8，9 }，\n七名运动员报名参加的项目分别为：\n（2，5，9）、（2，8）、（9，4）、\n（2，1，6）、（4，5）、（6，7，3）、\n（7，5）\n \n (2, 5, 9) ==> (2, 5), (5, 9), (2, 9)\n它们之间的冲突关系为: R = \n{（2，5）,（5，9）,（2，9）,（2，8）,（9，4）,（2，1）,\n（1，6）,（2，6）,（4，5）,（6，7）,（6，3）,（7，3）,（7，5）}\n\n冲突数组为：\n0  1  0  0  0  1  0  0  0\n1  0  0  0  1  1  0  1  1\n0  0  0  0  0  1  1  0  0\n0  0  0  0  1  0  0  0  1\n0  1  0  1  0  0  1  0  1\n1  1  1  0  0  0  1  0  0\n0  0  1  0  1  1  0  0  0\n0  1  0  0  0  0  0  0  0\n0  1  0  1  1  0  0  0  0\n*/\n\n/*\n例如：某运动会设有 6 个项目:\n    A = { 1，2，3，4，5，6 }，\n五名运动员报名参加的项目分别为：\n（1, 2，5）、（3，4）、（3，5, 6）、\n（4，6，1）、（2，6）\n \n它们之间的冲突关系为: R = \n{（1，2）,（1，5）,（2，5）,（3，4）,（3，5）,（3，6）,\n（5，6）,（4，6）,（4，1）,（6，1）,（2，6）}\n\n冲突数组为：\n0  1  0  1  1  1\n1  0  0  0  1  1\n0  0  0  1  1  1\n1  0  1  0  0  1\n1  1  1  0  0  1\n1  1  1  1  1  0\n*/\n```\n![](answer.png)\n###### 思考\n上面的算法是基于队列的。基于所有项目自前至后（从A到F）地寻找是否冲突，进而划分为组。没有冲突的是一组，有冲突的要在不同的组。\n对于第二个用例，有多个解法的结果均为4个小时。上述算法的正确性有待证明，即如何证明所分的组数是最少的组数。\n选择何种策略能保证最优？有另一种策略可供参考，首先选择冲突最多的项目，即参加人数最多的项目，接下来选择的项目按照参加人数依次递减。\n![](answer2.png)\n","slug":"Sports-Meeting","published":1,"updated":"2019-01-13T10:03:48.523Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjy5kaqu8000l5ge86kkl1hf0","content":"<h6 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h6><p>学校举行了一个运动会，有以下六个项目。有五位同学报名了相应的项目。假设每个项目所用时间均为一个小时。<br>如何安排各个项目的顺序，使运动会在最短时间内结束。同学的参加的项目顺序可以调换，必须参加自己报的项目。<br><img src=\"question.jpg\" alt></p>\n<h6 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h6><p>尽量让更多的项目同时进行，同时保证不冲突。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;queue&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// n: 运动员数  m: 项目数</span></span><br><span class=\"line\"><span class=\"comment\">// 指针p指向一维数组的首地址 二维冲突表</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> n = <span class=\"number\">0</span>, m = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> *p = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\"><span class=\"built_in\">queue</span>&lt;<span class=\"keyword\">int</span>&gt; q_events;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*生成运动员报名的冲突表，将二维数组变成一维数组</span></span><br><span class=\"line\"><span class=\"comment\">  items: 某位运动员的报名情况</span></span><br><span class=\"line\"><span class=\"comment\">  比如一共六个项目，某运动员报了2和5，其items对应为0 1 0 0 1 0</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">generate_collision_table</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> j = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> total_number = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> *items = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[m];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (i = <span class=\"number\">1</span>; i &lt;= n; i++)   <span class=\"comment\">// 对每个运动员进行处理</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"Please enter the total number of entries for No. \"</span> &lt;&lt; i &lt;&lt; <span class=\"string\">\" athlete: \"</span>;</span><br><span class=\"line\">        <span class=\"built_in\">cin</span> &gt;&gt; total_number;</span><br><span class=\"line\"></span><br><span class=\"line\">        j = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (j &lt; m)   <span class=\"comment\">// 初始化，数组元素置为0</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            items[j++] = <span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"Please enter the item numbers of the No.\"</span> &lt;&lt; i &lt;&lt; <span class=\"string\">\" athlete (separated by spaces): \"</span>;</span><br><span class=\"line\">        j = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> item_num = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (j &lt; total_number)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">cin</span> &gt;&gt; item_num;</span><br><span class=\"line\">            items[item_num - <span class=\"number\">1</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">            j++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 生成冲突数组</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> r = <span class=\"number\">0</span>, s = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (r = <span class=\"number\">0</span>; r &lt; m; r++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (s = <span class=\"number\">0</span>; s &lt; m; s++)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(r != s &amp;&amp; items[r] == <span class=\"number\">1</span> &amp;&amp; items[s] == <span class=\"number\">1</span>)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    p[r * m + s] = <span class=\"number\">1</span>;</span><br><span class=\"line\">                    p[s * m + r] = <span class=\"number\">1</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 打印二维冲突表</span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"Collision Table : \"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; m; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (j = <span class=\"number\">0</span>; j &lt; m; j++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">cout</span> &lt;&lt; p[i * m + j] &lt;&lt; <span class=\"string\">\"  \"</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">input</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> j = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"Please enter the number of athletes : \"</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span> &gt;&gt; n;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"Please enter the number of items in the sports meeting :\"</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span> &gt;&gt; m;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"The event numbers are : \"</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (j = <span class=\"number\">1</span>; j &lt;= m; j++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; j;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(j != m)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\", \"</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"built_in\">endl</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    p = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[m * m];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; m; i++) <span class=\"comment\">// 初始化二维冲突表</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (j = <span class=\"number\">0</span>; j &lt; m; j++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            p[i * m + j] = <span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">display_queue</span><span class=\"params\">(<span class=\"built_in\">queue</span>&lt;<span class=\"keyword\">int</span>&gt; q)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(!q.empty())</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; q.front() &lt;&lt; <span class=\"string\">\" \"</span>;</span><br><span class=\"line\">        q.pop();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">generate_groups</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> group_num = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> i = <span class=\"number\">0</span>, j = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; m; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        q_events.push(i + <span class=\"number\">1</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span>(!q_events.empty())</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"The remaining items are: \"</span>;</span><br><span class=\"line\">        display_queue(q_events);</span><br><span class=\"line\">        <span class=\"keyword\">int</span> head = q_events.front();</span><br><span class=\"line\">        group_num++;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"The items in Group No. \"</span> &lt;&lt; group_num &lt;&lt; <span class=\"string\">\" : \"</span> &lt;&lt; head &lt;&lt; <span class=\"string\">\" \"</span>;</span><br><span class=\"line\">        q_events.pop();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 对剩余元素逐个判断，谁能与head分在一组</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> *collision = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[m];</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; m; i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            collision[i] = p[(head - <span class=\"number\">1</span>) * m + i];   <span class=\"comment\">// collision数组初始化</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> len = q_events.size();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (i = <span class=\"number\">1</span>; i &lt;= len; i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> f = q_events.front();</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(collision[f - <span class=\"number\">1</span>] == <span class=\"number\">0</span>) <span class=\"comment\">//f与组内元素没有冲突</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (j = <span class=\"number\">0</span>; j &lt; m; j++)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    collision[j] += p[(f - <span class=\"number\">1</span>) * m + j];  <span class=\"comment\">// 将f与其他项目的冲突情况累加到collision上</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                f = q_events.front();</span><br><span class=\"line\">                <span class=\"built_in\">cout</span> &lt;&lt; f &lt;&lt; <span class=\"string\">\" \"</span>;      <span class=\"comment\">// f入组</span></span><br><span class=\"line\">                q_events.pop();        <span class=\"comment\">// 移除f</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span>  <span class=\"comment\">// f与组内有冲突</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                f = q_events.front();</span><br><span class=\"line\">                q_events.pop();</span><br><span class=\"line\">                q_events.push(f);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    input();</span><br><span class=\"line\">    generate_collision_table();</span><br><span class=\"line\">    generate_groups();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">例如：某运动会设有 9 个项目:</span></span><br><span class=\"line\"><span class=\"comment\">    A = &#123; 1，2，3，4，5，6，7，8，9 &#125;，</span></span><br><span class=\"line\"><span class=\"comment\">七名运动员报名参加的项目分别为：</span></span><br><span class=\"line\"><span class=\"comment\">（2，5，9）、（2，8）、（9，4）、</span></span><br><span class=\"line\"><span class=\"comment\">（2，1，6）、（4，5）、（6，7，3）、</span></span><br><span class=\"line\"><span class=\"comment\">（7，5）</span></span><br><span class=\"line\"><span class=\"comment\"> </span></span><br><span class=\"line\"><span class=\"comment\"> (2, 5, 9) ==&gt; (2, 5), (5, 9), (2, 9)</span></span><br><span class=\"line\"><span class=\"comment\">它们之间的冲突关系为: R = </span></span><br><span class=\"line\"><span class=\"comment\">&#123;（2，5）,（5，9）,（2，9）,（2，8）,（9，4）,（2，1）,</span></span><br><span class=\"line\"><span class=\"comment\">（1，6）,（2，6）,（4，5）,（6，7）,（6，3）,（7，3）,（7，5）&#125;</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">冲突数组为：</span></span><br><span class=\"line\"><span class=\"comment\">0  1  0  0  0  1  0  0  0</span></span><br><span class=\"line\"><span class=\"comment\">1  0  0  0  1  1  0  1  1</span></span><br><span class=\"line\"><span class=\"comment\">0  0  0  0  0  1  1  0  0</span></span><br><span class=\"line\"><span class=\"comment\">0  0  0  0  1  0  0  0  1</span></span><br><span class=\"line\"><span class=\"comment\">0  1  0  1  0  0  1  0  1</span></span><br><span class=\"line\"><span class=\"comment\">1  1  1  0  0  0  1  0  0</span></span><br><span class=\"line\"><span class=\"comment\">0  0  1  0  1  1  0  0  0</span></span><br><span class=\"line\"><span class=\"comment\">0  1  0  0  0  0  0  0  0</span></span><br><span class=\"line\"><span class=\"comment\">0  1  0  1  1  0  0  0  0</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">例如：某运动会设有 6 个项目:</span></span><br><span class=\"line\"><span class=\"comment\">    A = &#123; 1，2，3，4，5，6 &#125;，</span></span><br><span class=\"line\"><span class=\"comment\">五名运动员报名参加的项目分别为：</span></span><br><span class=\"line\"><span class=\"comment\">（1, 2，5）、（3，4）、（3，5, 6）、</span></span><br><span class=\"line\"><span class=\"comment\">（4，6，1）、（2，6）</span></span><br><span class=\"line\"><span class=\"comment\"> </span></span><br><span class=\"line\"><span class=\"comment\">它们之间的冲突关系为: R = </span></span><br><span class=\"line\"><span class=\"comment\">&#123;（1，2）,（1，5）,（2，5）,（3，4）,（3，5）,（3，6）,</span></span><br><span class=\"line\"><span class=\"comment\">（5，6）,（4，6）,（4，1）,（6，1）,（2，6）&#125;</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">冲突数组为：</span></span><br><span class=\"line\"><span class=\"comment\">0  1  0  1  1  1</span></span><br><span class=\"line\"><span class=\"comment\">1  0  0  0  1  1</span></span><br><span class=\"line\"><span class=\"comment\">0  0  0  1  1  1</span></span><br><span class=\"line\"><span class=\"comment\">1  0  1  0  0  1</span></span><br><span class=\"line\"><span class=\"comment\">1  1  1  0  0  1</span></span><br><span class=\"line\"><span class=\"comment\">1  1  1  1  1  0</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"answer.png\" alt></p>\n<h6 id=\"思考\"><a href=\"#思考\" class=\"headerlink\" title=\"思考\"></a>思考</h6><p>上面的算法是基于队列的。基于所有项目自前至后（从A到F）地寻找是否冲突，进而划分为组。没有冲突的是一组，有冲突的要在不同的组。<br>对于第二个用例，有多个解法的结果均为4个小时。上述算法的正确性有待证明，即如何证明所分的组数是最少的组数。<br>选择何种策略能保证最优？有另一种策略可供参考，首先选择冲突最多的项目，即参加人数最多的项目，接下来选择的项目按照参加人数依次递减。<br><img src=\"answer2.png\" alt></p>\n","site":{"data":{}},"excerpt":"","more":"<h6 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h6><p>学校举行了一个运动会，有以下六个项目。有五位同学报名了相应的项目。假设每个项目所用时间均为一个小时。<br>如何安排各个项目的顺序，使运动会在最短时间内结束。同学的参加的项目顺序可以调换，必须参加自己报的项目。<br><img src=\"question.jpg\" alt></p>\n<h6 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h6><p>尽量让更多的项目同时进行，同时保证不冲突。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;queue&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// n: 运动员数  m: 项目数</span></span><br><span class=\"line\"><span class=\"comment\">// 指针p指向一维数组的首地址 二维冲突表</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> n = <span class=\"number\">0</span>, m = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> *p = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\"><span class=\"built_in\">queue</span>&lt;<span class=\"keyword\">int</span>&gt; q_events;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*生成运动员报名的冲突表，将二维数组变成一维数组</span></span><br><span class=\"line\"><span class=\"comment\">  items: 某位运动员的报名情况</span></span><br><span class=\"line\"><span class=\"comment\">  比如一共六个项目，某运动员报了2和5，其items对应为0 1 0 0 1 0</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">generate_collision_table</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> j = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> total_number = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> *items = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[m];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (i = <span class=\"number\">1</span>; i &lt;= n; i++)   <span class=\"comment\">// 对每个运动员进行处理</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"Please enter the total number of entries for No. \"</span> &lt;&lt; i &lt;&lt; <span class=\"string\">\" athlete: \"</span>;</span><br><span class=\"line\">        <span class=\"built_in\">cin</span> &gt;&gt; total_number;</span><br><span class=\"line\"></span><br><span class=\"line\">        j = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (j &lt; m)   <span class=\"comment\">// 初始化，数组元素置为0</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            items[j++] = <span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"Please enter the item numbers of the No.\"</span> &lt;&lt; i &lt;&lt; <span class=\"string\">\" athlete (separated by spaces): \"</span>;</span><br><span class=\"line\">        j = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> item_num = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (j &lt; total_number)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">cin</span> &gt;&gt; item_num;</span><br><span class=\"line\">            items[item_num - <span class=\"number\">1</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">            j++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 生成冲突数组</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> r = <span class=\"number\">0</span>, s = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (r = <span class=\"number\">0</span>; r &lt; m; r++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (s = <span class=\"number\">0</span>; s &lt; m; s++)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(r != s &amp;&amp; items[r] == <span class=\"number\">1</span> &amp;&amp; items[s] == <span class=\"number\">1</span>)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    p[r * m + s] = <span class=\"number\">1</span>;</span><br><span class=\"line\">                    p[s * m + r] = <span class=\"number\">1</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 打印二维冲突表</span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"Collision Table : \"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; m; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (j = <span class=\"number\">0</span>; j &lt; m; j++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">cout</span> &lt;&lt; p[i * m + j] &lt;&lt; <span class=\"string\">\"  \"</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">input</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> j = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"Please enter the number of athletes : \"</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span> &gt;&gt; n;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"Please enter the number of items in the sports meeting :\"</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span> &gt;&gt; m;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"The event numbers are : \"</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (j = <span class=\"number\">1</span>; j &lt;= m; j++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; j;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(j != m)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\", \"</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"built_in\">endl</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    p = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[m * m];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; m; i++) <span class=\"comment\">// 初始化二维冲突表</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (j = <span class=\"number\">0</span>; j &lt; m; j++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            p[i * m + j] = <span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">display_queue</span><span class=\"params\">(<span class=\"built_in\">queue</span>&lt;<span class=\"keyword\">int</span>&gt; q)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(!q.empty())</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; q.front() &lt;&lt; <span class=\"string\">\" \"</span>;</span><br><span class=\"line\">        q.pop();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">generate_groups</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> group_num = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> i = <span class=\"number\">0</span>, j = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; m; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        q_events.push(i + <span class=\"number\">1</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span>(!q_events.empty())</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"The remaining items are: \"</span>;</span><br><span class=\"line\">        display_queue(q_events);</span><br><span class=\"line\">        <span class=\"keyword\">int</span> head = q_events.front();</span><br><span class=\"line\">        group_num++;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"The items in Group No. \"</span> &lt;&lt; group_num &lt;&lt; <span class=\"string\">\" : \"</span> &lt;&lt; head &lt;&lt; <span class=\"string\">\" \"</span>;</span><br><span class=\"line\">        q_events.pop();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 对剩余元素逐个判断，谁能与head分在一组</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> *collision = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[m];</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; m; i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            collision[i] = p[(head - <span class=\"number\">1</span>) * m + i];   <span class=\"comment\">// collision数组初始化</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> len = q_events.size();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (i = <span class=\"number\">1</span>; i &lt;= len; i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> f = q_events.front();</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(collision[f - <span class=\"number\">1</span>] == <span class=\"number\">0</span>) <span class=\"comment\">//f与组内元素没有冲突</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (j = <span class=\"number\">0</span>; j &lt; m; j++)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    collision[j] += p[(f - <span class=\"number\">1</span>) * m + j];  <span class=\"comment\">// 将f与其他项目的冲突情况累加到collision上</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                f = q_events.front();</span><br><span class=\"line\">                <span class=\"built_in\">cout</span> &lt;&lt; f &lt;&lt; <span class=\"string\">\" \"</span>;      <span class=\"comment\">// f入组</span></span><br><span class=\"line\">                q_events.pop();        <span class=\"comment\">// 移除f</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span>  <span class=\"comment\">// f与组内有冲突</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                f = q_events.front();</span><br><span class=\"line\">                q_events.pop();</span><br><span class=\"line\">                q_events.push(f);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    input();</span><br><span class=\"line\">    generate_collision_table();</span><br><span class=\"line\">    generate_groups();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">例如：某运动会设有 9 个项目:</span></span><br><span class=\"line\"><span class=\"comment\">    A = &#123; 1，2，3，4，5，6，7，8，9 &#125;，</span></span><br><span class=\"line\"><span class=\"comment\">七名运动员报名参加的项目分别为：</span></span><br><span class=\"line\"><span class=\"comment\">（2，5，9）、（2，8）、（9，4）、</span></span><br><span class=\"line\"><span class=\"comment\">（2，1，6）、（4，5）、（6，7，3）、</span></span><br><span class=\"line\"><span class=\"comment\">（7，5）</span></span><br><span class=\"line\"><span class=\"comment\"> </span></span><br><span class=\"line\"><span class=\"comment\"> (2, 5, 9) ==&gt; (2, 5), (5, 9), (2, 9)</span></span><br><span class=\"line\"><span class=\"comment\">它们之间的冲突关系为: R = </span></span><br><span class=\"line\"><span class=\"comment\">&#123;（2，5）,（5，9）,（2，9）,（2，8）,（9，4）,（2，1）,</span></span><br><span class=\"line\"><span class=\"comment\">（1，6）,（2，6）,（4，5）,（6，7）,（6，3）,（7，3）,（7，5）&#125;</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">冲突数组为：</span></span><br><span class=\"line\"><span class=\"comment\">0  1  0  0  0  1  0  0  0</span></span><br><span class=\"line\"><span class=\"comment\">1  0  0  0  1  1  0  1  1</span></span><br><span class=\"line\"><span class=\"comment\">0  0  0  0  0  1  1  0  0</span></span><br><span class=\"line\"><span class=\"comment\">0  0  0  0  1  0  0  0  1</span></span><br><span class=\"line\"><span class=\"comment\">0  1  0  1  0  0  1  0  1</span></span><br><span class=\"line\"><span class=\"comment\">1  1  1  0  0  0  1  0  0</span></span><br><span class=\"line\"><span class=\"comment\">0  0  1  0  1  1  0  0  0</span></span><br><span class=\"line\"><span class=\"comment\">0  1  0  0  0  0  0  0  0</span></span><br><span class=\"line\"><span class=\"comment\">0  1  0  1  1  0  0  0  0</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">例如：某运动会设有 6 个项目:</span></span><br><span class=\"line\"><span class=\"comment\">    A = &#123; 1，2，3，4，5，6 &#125;，</span></span><br><span class=\"line\"><span class=\"comment\">五名运动员报名参加的项目分别为：</span></span><br><span class=\"line\"><span class=\"comment\">（1, 2，5）、（3，4）、（3，5, 6）、</span></span><br><span class=\"line\"><span class=\"comment\">（4，6，1）、（2，6）</span></span><br><span class=\"line\"><span class=\"comment\"> </span></span><br><span class=\"line\"><span class=\"comment\">它们之间的冲突关系为: R = </span></span><br><span class=\"line\"><span class=\"comment\">&#123;（1，2）,（1，5）,（2，5）,（3，4）,（3，5）,（3，6）,</span></span><br><span class=\"line\"><span class=\"comment\">（5，6）,（4，6）,（4，1）,（6，1）,（2，6）&#125;</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">冲突数组为：</span></span><br><span class=\"line\"><span class=\"comment\">0  1  0  1  1  1</span></span><br><span class=\"line\"><span class=\"comment\">1  0  0  0  1  1</span></span><br><span class=\"line\"><span class=\"comment\">0  0  0  1  1  1</span></span><br><span class=\"line\"><span class=\"comment\">1  0  1  0  0  1</span></span><br><span class=\"line\"><span class=\"comment\">1  1  1  0  0  1</span></span><br><span class=\"line\"><span class=\"comment\">1  1  1  1  1  0</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"answer.png\" alt></p>\n<h6 id=\"思考\"><a href=\"#思考\" class=\"headerlink\" title=\"思考\"></a>思考</h6><p>上面的算法是基于队列的。基于所有项目自前至后（从A到F）地寻找是否冲突，进而划分为组。没有冲突的是一组，有冲突的要在不同的组。<br>对于第二个用例，有多个解法的结果均为4个小时。上述算法的正确性有待证明，即如何证明所分的组数是最少的组数。<br>选择何种策略能保证最优？有另一种策略可供参考，首先选择冲突最多的项目，即参加人数最多的项目，接下来选择的项目按照参加人数依次递减。<br><img src=\"answer2.png\" alt></p>\n"},{"title":"Transformer","date":"2018-12-01T14:24:58.000Z","_content":"![](transformer.jpg)\n```python\n# Cloudin 云英 面试题\ndef transformer(x, y):\n    if x == y:\n        return True\n    elif x > y:\n        return False\n    elif x % 2 == 0:\n        return transformer(x + 1, y) or transformer(2 * x, y)\n    elif x % 2 == 1:\n        return transformer(2 * x, y)\n\n\nif __name__ == \"__main__\":\n    x = 3\n    y = 24\n    assert transformer(x, y)\n    x = 3\n    y = 6\n    assert transformer(x, y)\n    x = 3\n    y = 7\n    assert transformer(x, y)\n    x = 3\n    y = 12\n    assert transformer(x, y)\n    x = 3\n    y = 13\n    assert transformer(x, y)\n    x = 3\n    y = 8\n    assert not transformer(x, y)\n    x = 3\n    y = 9\n    assert not transformer(x, y)\n```\n","source":"_posts/Transformer.md","raw":"---\ntitle: Transformer\ndate: 2018-12-01 22:24:58\ncategories:\ntags:\n---\n![](transformer.jpg)\n```python\n# Cloudin 云英 面试题\ndef transformer(x, y):\n    if x == y:\n        return True\n    elif x > y:\n        return False\n    elif x % 2 == 0:\n        return transformer(x + 1, y) or transformer(2 * x, y)\n    elif x % 2 == 1:\n        return transformer(2 * x, y)\n\n\nif __name__ == \"__main__\":\n    x = 3\n    y = 24\n    assert transformer(x, y)\n    x = 3\n    y = 6\n    assert transformer(x, y)\n    x = 3\n    y = 7\n    assert transformer(x, y)\n    x = 3\n    y = 12\n    assert transformer(x, y)\n    x = 3\n    y = 13\n    assert transformer(x, y)\n    x = 3\n    y = 8\n    assert not transformer(x, y)\n    x = 3\n    y = 9\n    assert not transformer(x, y)\n```\n","slug":"Transformer","published":1,"updated":"2019-01-13T10:03:48.525Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjy5kaqud000m5ge86qnyh1qn","content":"<p><img src=\"transformer.jpg\" alt></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Cloudin 云英 面试题</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">transformer</span><span class=\"params\">(x, y)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> x == y:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">elif</span> x &gt; y:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\">    <span class=\"keyword\">elif</span> x % <span class=\"number\">2</span> == <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> transformer(x + <span class=\"number\">1</span>, y) <span class=\"keyword\">or</span> transformer(<span class=\"number\">2</span> * x, y)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> x % <span class=\"number\">2</span> == <span class=\"number\">1</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> transformer(<span class=\"number\">2</span> * x, y)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">\"__main__\"</span>:</span><br><span class=\"line\">    x = <span class=\"number\">3</span></span><br><span class=\"line\">    y = <span class=\"number\">24</span></span><br><span class=\"line\">    <span class=\"keyword\">assert</span> transformer(x, y)</span><br><span class=\"line\">    x = <span class=\"number\">3</span></span><br><span class=\"line\">    y = <span class=\"number\">6</span></span><br><span class=\"line\">    <span class=\"keyword\">assert</span> transformer(x, y)</span><br><span class=\"line\">    x = <span class=\"number\">3</span></span><br><span class=\"line\">    y = <span class=\"number\">7</span></span><br><span class=\"line\">    <span class=\"keyword\">assert</span> transformer(x, y)</span><br><span class=\"line\">    x = <span class=\"number\">3</span></span><br><span class=\"line\">    y = <span class=\"number\">12</span></span><br><span class=\"line\">    <span class=\"keyword\">assert</span> transformer(x, y)</span><br><span class=\"line\">    x = <span class=\"number\">3</span></span><br><span class=\"line\">    y = <span class=\"number\">13</span></span><br><span class=\"line\">    <span class=\"keyword\">assert</span> transformer(x, y)</span><br><span class=\"line\">    x = <span class=\"number\">3</span></span><br><span class=\"line\">    y = <span class=\"number\">8</span></span><br><span class=\"line\">    <span class=\"keyword\">assert</span> <span class=\"keyword\">not</span> transformer(x, y)</span><br><span class=\"line\">    x = <span class=\"number\">3</span></span><br><span class=\"line\">    y = <span class=\"number\">9</span></span><br><span class=\"line\">    <span class=\"keyword\">assert</span> <span class=\"keyword\">not</span> transformer(x, y)</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"transformer.jpg\" alt></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Cloudin 云英 面试题</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">transformer</span><span class=\"params\">(x, y)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> x == y:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">elif</span> x &gt; y:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\">    <span class=\"keyword\">elif</span> x % <span class=\"number\">2</span> == <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> transformer(x + <span class=\"number\">1</span>, y) <span class=\"keyword\">or</span> transformer(<span class=\"number\">2</span> * x, y)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> x % <span class=\"number\">2</span> == <span class=\"number\">1</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> transformer(<span class=\"number\">2</span> * x, y)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">\"__main__\"</span>:</span><br><span class=\"line\">    x = <span class=\"number\">3</span></span><br><span class=\"line\">    y = <span class=\"number\">24</span></span><br><span class=\"line\">    <span class=\"keyword\">assert</span> transformer(x, y)</span><br><span class=\"line\">    x = <span class=\"number\">3</span></span><br><span class=\"line\">    y = <span class=\"number\">6</span></span><br><span class=\"line\">    <span class=\"keyword\">assert</span> transformer(x, y)</span><br><span class=\"line\">    x = <span class=\"number\">3</span></span><br><span class=\"line\">    y = <span class=\"number\">7</span></span><br><span class=\"line\">    <span class=\"keyword\">assert</span> transformer(x, y)</span><br><span class=\"line\">    x = <span class=\"number\">3</span></span><br><span class=\"line\">    y = <span class=\"number\">12</span></span><br><span class=\"line\">    <span class=\"keyword\">assert</span> transformer(x, y)</span><br><span class=\"line\">    x = <span class=\"number\">3</span></span><br><span class=\"line\">    y = <span class=\"number\">13</span></span><br><span class=\"line\">    <span class=\"keyword\">assert</span> transformer(x, y)</span><br><span class=\"line\">    x = <span class=\"number\">3</span></span><br><span class=\"line\">    y = <span class=\"number\">8</span></span><br><span class=\"line\">    <span class=\"keyword\">assert</span> <span class=\"keyword\">not</span> transformer(x, y)</span><br><span class=\"line\">    x = <span class=\"number\">3</span></span><br><span class=\"line\">    y = <span class=\"number\">9</span></span><br><span class=\"line\">    <span class=\"keyword\">assert</span> <span class=\"keyword\">not</span> transformer(x, y)</span><br></pre></td></tr></table></figure>\n\n"},{"title":"Use Homebrew to Install both Python 2 and 3 on Mac","date":"2019-02-02T10:35:52.000Z","_content":"# 起因\n公司项目使用Python2.7，自己LeetCode刷题想使用Python3\n\n# 背景\nmacOS中自带了Python2.7，只需要安装Python3\n\n# 安装Python3\n一定要用 brew 安装 Python3 (不然很有可能会和系统的Python库有冲突)\n```shell\n$ brew install python3\n```\n上面的语句会自动安装 pip3\n网上文章上都说用brew安装Python3会自带pip3的安装 \n但是不知什么原因,我使用brew安装完Python3后并没有pip3\n\n# 安装pip3\n## 下载文件\n```shell\n$ wget https://bootstrap.pypa.io/get-pip.py\n$ python3 get-pip.py\n```\n## 创建软连接 到/usr/local/bin\n```shell\n$ ln -s /usr/local/Cellar/python/3.7.2_1/Frameworks/Python.framework/Versions/3.7/bin/pip3 /usr/local/bin/\n$ which pip3\n/usr/local/bin/pip3\n$ cd /usr/local/Cellar/python/3.7.2_1/Frameworks/Python.framework/Versions/3.7/bin/\n$ diff pip pip3\n$\n$ diff pip pip3.7\n$\n```\n说明pip、pip3、pip3.7三个文件相同\n\n# 安装virtualenv\n```shell\n$ sudo pip3 install virtualenv\n```\n![](sudo.jpg)\n```shell\n$ ln -s /usr/local/Cellar/python/3.7.2_1/Frameworks/Python.framework/Versions/3.7/bin/virtualenv /usr/local/bin\n```\n```shell\n$ cd ~/lixiang2017_code/leetcode\n$ virtualenv --no-site-packages venv_py3\n```\n![](wrong.jpg)\n```shell\n$ sudo virtualenv --no-site-packages venv_py3\n```\n![](wrong2.jpg)\n# activate\n![](activate.jpg)\n# deactivate\n![](deactivate.jpg)\n","source":"_posts/Use-Homebrew-to-Install-both-Python-2-and-3-on-Mac.md","raw":"---\ntitle: Use Homebrew to Install both Python 2 and 3 on Mac\ndate: 2019-02-02 18:35:52\ncategories:\ntags:\n---\n# 起因\n公司项目使用Python2.7，自己LeetCode刷题想使用Python3\n\n# 背景\nmacOS中自带了Python2.7，只需要安装Python3\n\n# 安装Python3\n一定要用 brew 安装 Python3 (不然很有可能会和系统的Python库有冲突)\n```shell\n$ brew install python3\n```\n上面的语句会自动安装 pip3\n网上文章上都说用brew安装Python3会自带pip3的安装 \n但是不知什么原因,我使用brew安装完Python3后并没有pip3\n\n# 安装pip3\n## 下载文件\n```shell\n$ wget https://bootstrap.pypa.io/get-pip.py\n$ python3 get-pip.py\n```\n## 创建软连接 到/usr/local/bin\n```shell\n$ ln -s /usr/local/Cellar/python/3.7.2_1/Frameworks/Python.framework/Versions/3.7/bin/pip3 /usr/local/bin/\n$ which pip3\n/usr/local/bin/pip3\n$ cd /usr/local/Cellar/python/3.7.2_1/Frameworks/Python.framework/Versions/3.7/bin/\n$ diff pip pip3\n$\n$ diff pip pip3.7\n$\n```\n说明pip、pip3、pip3.7三个文件相同\n\n# 安装virtualenv\n```shell\n$ sudo pip3 install virtualenv\n```\n![](sudo.jpg)\n```shell\n$ ln -s /usr/local/Cellar/python/3.7.2_1/Frameworks/Python.framework/Versions/3.7/bin/virtualenv /usr/local/bin\n```\n```shell\n$ cd ~/lixiang2017_code/leetcode\n$ virtualenv --no-site-packages venv_py3\n```\n![](wrong.jpg)\n```shell\n$ sudo virtualenv --no-site-packages venv_py3\n```\n![](wrong2.jpg)\n# activate\n![](activate.jpg)\n# deactivate\n![](deactivate.jpg)\n","slug":"Use-Homebrew-to-Install-both-Python-2-and-3-on-Mac","published":1,"updated":"2019-02-11T11:58:45.579Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjy5kaquh000n5ge88woa28xn","content":"<h1 id=\"起因\"><a href=\"#起因\" class=\"headerlink\" title=\"起因\"></a>起因</h1><p>公司项目使用Python2.7，自己LeetCode刷题想使用Python3</p>\n<h1 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h1><p>macOS中自带了Python2.7，只需要安装Python3</p>\n<h1 id=\"安装Python3\"><a href=\"#安装Python3\" class=\"headerlink\" title=\"安装Python3\"></a>安装Python3</h1><p>一定要用 brew 安装 Python3 (不然很有可能会和系统的Python库有冲突)</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> brew install python3</span><br></pre></td></tr></table></figure>\n\n<p>上面的语句会自动安装 pip3<br>网上文章上都说用brew安装Python3会自带pip3的安装<br>但是不知什么原因,我使用brew安装完Python3后并没有pip3</p>\n<h1 id=\"安装pip3\"><a href=\"#安装pip3\" class=\"headerlink\" title=\"安装pip3\"></a>安装pip3</h1><h2 id=\"下载文件\"><a href=\"#下载文件\" class=\"headerlink\" title=\"下载文件\"></a>下载文件</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> wget https://bootstrap.pypa.io/get-pip.py</span><br><span class=\"line\"><span class=\"meta\">$</span> python3 get-pip.py</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"创建软连接-到-usr-local-bin\"><a href=\"#创建软连接-到-usr-local-bin\" class=\"headerlink\" title=\"创建软连接 到/usr/local/bin\"></a>创建软连接 到/usr/local/bin</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> ln -s /usr/local/Cellar/python/3.7.2_1/Frameworks/Python.framework/Versions/3.7/bin/pip3 /usr/local/bin/</span><br><span class=\"line\"><span class=\"meta\">$</span> which pip3</span><br><span class=\"line\">/usr/local/bin/pip3</span><br><span class=\"line\"><span class=\"meta\">$</span> cd /usr/local/Cellar/python/3.7.2_1/Frameworks/Python.framework/Versions/3.7/bin/</span><br><span class=\"line\"><span class=\"meta\">$</span> diff pip pip3</span><br><span class=\"line\"><span class=\"meta\">$</span></span><br><span class=\"line\"><span class=\"meta\">$</span> diff pip pip3.7</span><br><span class=\"line\"><span class=\"meta\">$</span></span><br></pre></td></tr></table></figure>\n\n<p>说明pip、pip3、pip3.7三个文件相同</p>\n<h1 id=\"安装virtualenv\"><a href=\"#安装virtualenv\" class=\"headerlink\" title=\"安装virtualenv\"></a>安装virtualenv</h1><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> sudo pip3 install virtualenv</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"sudo.jpg\" alt></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> ln -s /usr/local/Cellar/python/3.7.2_1/Frameworks/Python.framework/Versions/3.7/bin/virtualenv /usr/local/bin</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> cd ~/lixiang2017_code/leetcode</span><br><span class=\"line\"><span class=\"meta\">$</span> virtualenv --no-site-packages venv_py3</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"wrong.jpg\" alt></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> sudo virtualenv --no-site-packages venv_py3</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"wrong2.jpg\" alt></p>\n<h1 id=\"activate\"><a href=\"#activate\" class=\"headerlink\" title=\"activate\"></a>activate</h1><p><img src=\"activate.jpg\" alt></p>\n<h1 id=\"deactivate\"><a href=\"#deactivate\" class=\"headerlink\" title=\"deactivate\"></a>deactivate</h1><p><img src=\"deactivate.jpg\" alt></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"起因\"><a href=\"#起因\" class=\"headerlink\" title=\"起因\"></a>起因</h1><p>公司项目使用Python2.7，自己LeetCode刷题想使用Python3</p>\n<h1 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h1><p>macOS中自带了Python2.7，只需要安装Python3</p>\n<h1 id=\"安装Python3\"><a href=\"#安装Python3\" class=\"headerlink\" title=\"安装Python3\"></a>安装Python3</h1><p>一定要用 brew 安装 Python3 (不然很有可能会和系统的Python库有冲突)</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> brew install python3</span><br></pre></td></tr></table></figure>\n\n<p>上面的语句会自动安装 pip3<br>网上文章上都说用brew安装Python3会自带pip3的安装<br>但是不知什么原因,我使用brew安装完Python3后并没有pip3</p>\n<h1 id=\"安装pip3\"><a href=\"#安装pip3\" class=\"headerlink\" title=\"安装pip3\"></a>安装pip3</h1><h2 id=\"下载文件\"><a href=\"#下载文件\" class=\"headerlink\" title=\"下载文件\"></a>下载文件</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> wget https://bootstrap.pypa.io/get-pip.py</span><br><span class=\"line\"><span class=\"meta\">$</span> python3 get-pip.py</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"创建软连接-到-usr-local-bin\"><a href=\"#创建软连接-到-usr-local-bin\" class=\"headerlink\" title=\"创建软连接 到/usr/local/bin\"></a>创建软连接 到/usr/local/bin</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> ln -s /usr/local/Cellar/python/3.7.2_1/Frameworks/Python.framework/Versions/3.7/bin/pip3 /usr/local/bin/</span><br><span class=\"line\"><span class=\"meta\">$</span> which pip3</span><br><span class=\"line\">/usr/local/bin/pip3</span><br><span class=\"line\"><span class=\"meta\">$</span> cd /usr/local/Cellar/python/3.7.2_1/Frameworks/Python.framework/Versions/3.7/bin/</span><br><span class=\"line\"><span class=\"meta\">$</span> diff pip pip3</span><br><span class=\"line\"><span class=\"meta\">$</span></span><br><span class=\"line\"><span class=\"meta\">$</span> diff pip pip3.7</span><br><span class=\"line\"><span class=\"meta\">$</span></span><br></pre></td></tr></table></figure>\n\n<p>说明pip、pip3、pip3.7三个文件相同</p>\n<h1 id=\"安装virtualenv\"><a href=\"#安装virtualenv\" class=\"headerlink\" title=\"安装virtualenv\"></a>安装virtualenv</h1><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> sudo pip3 install virtualenv</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"sudo.jpg\" alt></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> ln -s /usr/local/Cellar/python/3.7.2_1/Frameworks/Python.framework/Versions/3.7/bin/virtualenv /usr/local/bin</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> cd ~/lixiang2017_code/leetcode</span><br><span class=\"line\"><span class=\"meta\">$</span> virtualenv --no-site-packages venv_py3</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"wrong.jpg\" alt></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> sudo virtualenv --no-site-packages venv_py3</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"wrong2.jpg\" alt></p>\n<h1 id=\"activate\"><a href=\"#activate\" class=\"headerlink\" title=\"activate\"></a>activate</h1><p><img src=\"activate.jpg\" alt></p>\n<h1 id=\"deactivate\"><a href=\"#deactivate\" class=\"headerlink\" title=\"deactivate\"></a>deactivate</h1><p><img src=\"deactivate.jpg\" alt></p>\n"},{"title":"Built-in Types in Python","date":"2018-11-27T17:04:43.000Z","_content":"\n```python\n# type\nprint(\" 0.type example\")\nprint(type(type(int('227'))))\nprint(type(type('227')))\nprint(type(type('227')) == type)\nprint(type(type('227')) == \"type\")\n\n# three distinct numeric types: integers, floating point numbers, and complex numbers.\n# Booleans\nprint(\" 1.0 bool example\")\nprint(type(True))\nprint(type(False))\nprint(type(True) == bool)\nprint(type(True) == int)\n# int\nprint(\" 1.1 int example\")\nprint(type(120))\nprint(type(120) == int)\n# float\nprint(\" 1.2 float example\")\nprint(type(2.5))\nprint(type(2.5) == float)\n# complex\nprint(\" 1.3 complex example\")\nprint(complex)\nprint(complex())\nprint(complex(3 + 4j))\nprint(type(complex(2 + 6j)))\nprint(type(complex(1 + 2j)) == complex)\n\n# str\nprint(\" 2.str example\")\nprint(type(\"\"))\nprint(type(''))\nprint(type(''''''))\nprint(type(\"\"\"\"\"\"))\nprint(type('''test'''))\nprint(type(\"\"\"test\"\"\"))\nprint(type(\"\") == str)\n\n# list\nprint(\" 3.list example\")\nprint(type([]))\nprint(type([]) == list)\n\n# tuple\nprint(\" 4.tuple example\")\nprint(type(()))\nprint(type(()) == tuple)\n\n# set\nprint(\" 5.set example\")\nprint(type({}))\nprint(type({1, 4, 2}))\nprint(type({1, 4, 2}) == set)\n\n# dict\nprint(\" 6.dict example\")\nprint(type({}))\nprint(type({1: 2}))\nprint(type({1: 2}) == dict)\nprint(set == dict)\n\n# frozenset\nprint(\" 7.frozenset example\")\nprint(frozenset([1, 4, 3, 5, 2]))\nprint(type(frozenset([1, 4, 3, 5, 2])) == frozenset)\n```\n","source":"_posts/built-in-types-in-python.md","raw":"---\ntitle: Built-in Types in Python\ndate: 2018-11-28 01:04:43\ncategories:\ntags:\n---\n\n```python\n# type\nprint(\" 0.type example\")\nprint(type(type(int('227'))))\nprint(type(type('227')))\nprint(type(type('227')) == type)\nprint(type(type('227')) == \"type\")\n\n# three distinct numeric types: integers, floating point numbers, and complex numbers.\n# Booleans\nprint(\" 1.0 bool example\")\nprint(type(True))\nprint(type(False))\nprint(type(True) == bool)\nprint(type(True) == int)\n# int\nprint(\" 1.1 int example\")\nprint(type(120))\nprint(type(120) == int)\n# float\nprint(\" 1.2 float example\")\nprint(type(2.5))\nprint(type(2.5) == float)\n# complex\nprint(\" 1.3 complex example\")\nprint(complex)\nprint(complex())\nprint(complex(3 + 4j))\nprint(type(complex(2 + 6j)))\nprint(type(complex(1 + 2j)) == complex)\n\n# str\nprint(\" 2.str example\")\nprint(type(\"\"))\nprint(type(''))\nprint(type(''''''))\nprint(type(\"\"\"\"\"\"))\nprint(type('''test'''))\nprint(type(\"\"\"test\"\"\"))\nprint(type(\"\") == str)\n\n# list\nprint(\" 3.list example\")\nprint(type([]))\nprint(type([]) == list)\n\n# tuple\nprint(\" 4.tuple example\")\nprint(type(()))\nprint(type(()) == tuple)\n\n# set\nprint(\" 5.set example\")\nprint(type({}))\nprint(type({1, 4, 2}))\nprint(type({1, 4, 2}) == set)\n\n# dict\nprint(\" 6.dict example\")\nprint(type({}))\nprint(type({1: 2}))\nprint(type({1: 2}) == dict)\nprint(set == dict)\n\n# frozenset\nprint(\" 7.frozenset example\")\nprint(frozenset([1, 4, 3, 5, 2]))\nprint(type(frozenset([1, 4, 3, 5, 2])) == frozenset)\n```\n","slug":"built-in-types-in-python","published":1,"updated":"2019-01-13T10:03:48.525Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjy5kaqui000o5ge8b69av7xw","content":"<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># type</span></span><br><span class=\"line\">print(<span class=\"string\">\" 0.type example\"</span>)</span><br><span class=\"line\">print(type(type(int(<span class=\"string\">'227'</span>))))</span><br><span class=\"line\">print(type(type(<span class=\"string\">'227'</span>)))</span><br><span class=\"line\">print(type(type(<span class=\"string\">'227'</span>)) == type)</span><br><span class=\"line\">print(type(type(<span class=\"string\">'227'</span>)) == <span class=\"string\">\"type\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># three distinct numeric types: integers, floating point numbers, and complex numbers.</span></span><br><span class=\"line\"><span class=\"comment\"># Booleans</span></span><br><span class=\"line\">print(<span class=\"string\">\" 1.0 bool example\"</span>)</span><br><span class=\"line\">print(type(<span class=\"literal\">True</span>))</span><br><span class=\"line\">print(type(<span class=\"literal\">False</span>))</span><br><span class=\"line\">print(type(<span class=\"literal\">True</span>) == bool)</span><br><span class=\"line\">print(type(<span class=\"literal\">True</span>) == int)</span><br><span class=\"line\"><span class=\"comment\"># int</span></span><br><span class=\"line\">print(<span class=\"string\">\" 1.1 int example\"</span>)</span><br><span class=\"line\">print(type(<span class=\"number\">120</span>))</span><br><span class=\"line\">print(type(<span class=\"number\">120</span>) == int)</span><br><span class=\"line\"><span class=\"comment\"># float</span></span><br><span class=\"line\">print(<span class=\"string\">\" 1.2 float example\"</span>)</span><br><span class=\"line\">print(type(<span class=\"number\">2.5</span>))</span><br><span class=\"line\">print(type(<span class=\"number\">2.5</span>) == float)</span><br><span class=\"line\"><span class=\"comment\"># complex</span></span><br><span class=\"line\">print(<span class=\"string\">\" 1.3 complex example\"</span>)</span><br><span class=\"line\">print(complex)</span><br><span class=\"line\">print(complex())</span><br><span class=\"line\">print(complex(<span class=\"number\">3</span> + <span class=\"number\">4j</span>))</span><br><span class=\"line\">print(type(complex(<span class=\"number\">2</span> + <span class=\"number\">6j</span>)))</span><br><span class=\"line\">print(type(complex(<span class=\"number\">1</span> + <span class=\"number\">2j</span>)) == complex)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># str</span></span><br><span class=\"line\">print(<span class=\"string\">\" 2.str example\"</span>)</span><br><span class=\"line\">print(type(<span class=\"string\">\"\"</span>))</span><br><span class=\"line\">print(type(<span class=\"string\">''</span>))</span><br><span class=\"line\">print(type(<span class=\"string\">''''''</span>))</span><br><span class=\"line\">print(type(<span class=\"string\">\"\"\"\"\"\"</span>))</span><br><span class=\"line\">print(type(<span class=\"string\">'''test'''</span>))</span><br><span class=\"line\">print(type(<span class=\"string\">\"\"\"test\"\"\"</span>))</span><br><span class=\"line\">print(type(<span class=\"string\">\"\"</span>) == str)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># list</span></span><br><span class=\"line\">print(<span class=\"string\">\" 3.list example\"</span>)</span><br><span class=\"line\">print(type([]))</span><br><span class=\"line\">print(type([]) == list)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># tuple</span></span><br><span class=\"line\">print(<span class=\"string\">\" 4.tuple example\"</span>)</span><br><span class=\"line\">print(type(()))</span><br><span class=\"line\">print(type(()) == tuple)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># set</span></span><br><span class=\"line\">print(<span class=\"string\">\" 5.set example\"</span>)</span><br><span class=\"line\">print(type(&#123;&#125;))</span><br><span class=\"line\">print(type(&#123;<span class=\"number\">1</span>, <span class=\"number\">4</span>, <span class=\"number\">2</span>&#125;))</span><br><span class=\"line\">print(type(&#123;<span class=\"number\">1</span>, <span class=\"number\">4</span>, <span class=\"number\">2</span>&#125;) == set)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># dict</span></span><br><span class=\"line\">print(<span class=\"string\">\" 6.dict example\"</span>)</span><br><span class=\"line\">print(type(&#123;&#125;))</span><br><span class=\"line\">print(type(&#123;<span class=\"number\">1</span>: <span class=\"number\">2</span>&#125;))</span><br><span class=\"line\">print(type(&#123;<span class=\"number\">1</span>: <span class=\"number\">2</span>&#125;) == dict)</span><br><span class=\"line\">print(set == dict)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># frozenset</span></span><br><span class=\"line\">print(<span class=\"string\">\" 7.frozenset example\"</span>)</span><br><span class=\"line\">print(frozenset([<span class=\"number\">1</span>, <span class=\"number\">4</span>, <span class=\"number\">3</span>, <span class=\"number\">5</span>, <span class=\"number\">2</span>]))</span><br><span class=\"line\">print(type(frozenset([<span class=\"number\">1</span>, <span class=\"number\">4</span>, <span class=\"number\">3</span>, <span class=\"number\">5</span>, <span class=\"number\">2</span>])) == frozenset)</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># type</span></span><br><span class=\"line\">print(<span class=\"string\">\" 0.type example\"</span>)</span><br><span class=\"line\">print(type(type(int(<span class=\"string\">'227'</span>))))</span><br><span class=\"line\">print(type(type(<span class=\"string\">'227'</span>)))</span><br><span class=\"line\">print(type(type(<span class=\"string\">'227'</span>)) == type)</span><br><span class=\"line\">print(type(type(<span class=\"string\">'227'</span>)) == <span class=\"string\">\"type\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># three distinct numeric types: integers, floating point numbers, and complex numbers.</span></span><br><span class=\"line\"><span class=\"comment\"># Booleans</span></span><br><span class=\"line\">print(<span class=\"string\">\" 1.0 bool example\"</span>)</span><br><span class=\"line\">print(type(<span class=\"literal\">True</span>))</span><br><span class=\"line\">print(type(<span class=\"literal\">False</span>))</span><br><span class=\"line\">print(type(<span class=\"literal\">True</span>) == bool)</span><br><span class=\"line\">print(type(<span class=\"literal\">True</span>) == int)</span><br><span class=\"line\"><span class=\"comment\"># int</span></span><br><span class=\"line\">print(<span class=\"string\">\" 1.1 int example\"</span>)</span><br><span class=\"line\">print(type(<span class=\"number\">120</span>))</span><br><span class=\"line\">print(type(<span class=\"number\">120</span>) == int)</span><br><span class=\"line\"><span class=\"comment\"># float</span></span><br><span class=\"line\">print(<span class=\"string\">\" 1.2 float example\"</span>)</span><br><span class=\"line\">print(type(<span class=\"number\">2.5</span>))</span><br><span class=\"line\">print(type(<span class=\"number\">2.5</span>) == float)</span><br><span class=\"line\"><span class=\"comment\"># complex</span></span><br><span class=\"line\">print(<span class=\"string\">\" 1.3 complex example\"</span>)</span><br><span class=\"line\">print(complex)</span><br><span class=\"line\">print(complex())</span><br><span class=\"line\">print(complex(<span class=\"number\">3</span> + <span class=\"number\">4j</span>))</span><br><span class=\"line\">print(type(complex(<span class=\"number\">2</span> + <span class=\"number\">6j</span>)))</span><br><span class=\"line\">print(type(complex(<span class=\"number\">1</span> + <span class=\"number\">2j</span>)) == complex)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># str</span></span><br><span class=\"line\">print(<span class=\"string\">\" 2.str example\"</span>)</span><br><span class=\"line\">print(type(<span class=\"string\">\"\"</span>))</span><br><span class=\"line\">print(type(<span class=\"string\">''</span>))</span><br><span class=\"line\">print(type(<span class=\"string\">''''''</span>))</span><br><span class=\"line\">print(type(<span class=\"string\">\"\"\"\"\"\"</span>))</span><br><span class=\"line\">print(type(<span class=\"string\">'''test'''</span>))</span><br><span class=\"line\">print(type(<span class=\"string\">\"\"\"test\"\"\"</span>))</span><br><span class=\"line\">print(type(<span class=\"string\">\"\"</span>) == str)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># list</span></span><br><span class=\"line\">print(<span class=\"string\">\" 3.list example\"</span>)</span><br><span class=\"line\">print(type([]))</span><br><span class=\"line\">print(type([]) == list)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># tuple</span></span><br><span class=\"line\">print(<span class=\"string\">\" 4.tuple example\"</span>)</span><br><span class=\"line\">print(type(()))</span><br><span class=\"line\">print(type(()) == tuple)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># set</span></span><br><span class=\"line\">print(<span class=\"string\">\" 5.set example\"</span>)</span><br><span class=\"line\">print(type(&#123;&#125;))</span><br><span class=\"line\">print(type(&#123;<span class=\"number\">1</span>, <span class=\"number\">4</span>, <span class=\"number\">2</span>&#125;))</span><br><span class=\"line\">print(type(&#123;<span class=\"number\">1</span>, <span class=\"number\">4</span>, <span class=\"number\">2</span>&#125;) == set)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># dict</span></span><br><span class=\"line\">print(<span class=\"string\">\" 6.dict example\"</span>)</span><br><span class=\"line\">print(type(&#123;&#125;))</span><br><span class=\"line\">print(type(&#123;<span class=\"number\">1</span>: <span class=\"number\">2</span>&#125;))</span><br><span class=\"line\">print(type(&#123;<span class=\"number\">1</span>: <span class=\"number\">2</span>&#125;) == dict)</span><br><span class=\"line\">print(set == dict)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># frozenset</span></span><br><span class=\"line\">print(<span class=\"string\">\" 7.frozenset example\"</span>)</span><br><span class=\"line\">print(frozenset([<span class=\"number\">1</span>, <span class=\"number\">4</span>, <span class=\"number\">3</span>, <span class=\"number\">5</span>, <span class=\"number\">2</span>]))</span><br><span class=\"line\">print(type(frozenset([<span class=\"number\">1</span>, <span class=\"number\">4</span>, <span class=\"number\">3</span>, <span class=\"number\">5</span>, <span class=\"number\">2</span>])) == frozenset)</span><br></pre></td></tr></table></figure>\n\n"},{"title":"Calculate Entropy and Divergence","date":"2018-07-27T06:32:53.000Z","_content":"\n任意摘录一段文字，统计这段文字中所有字符的相对频率。假设这些相对频率就是这些字符的概率，请计算其分布的熵。按上述同样的方法计算字符分布的概率，然后计算两段文字中字符分布的 KL 距离。\n\n考虑到汉字总数较多，英文单词也很多；需要大量的数据才有参考意义。所以只是对英文字符进行处理。程序中数据makefile和readme.md来自工作中项目的两个文本文件。真实情况中可能两段文字中所包含的字符不完全相同，所以程序中采用两段文字中共有的字符进行计算KL距离。\n\n```python\n#! /usr/bin/python\n# function : calculate the entropy and the divergence of two files \n# date     : 2018/6/1\n# author   : lixiang\n\nimport csv\nimport math\n\ncount = {}\nprop = {}\np_count = {}\np_prop = {}\nq_count = {}\nq_prop = {}\n\ndef calc_entropy(file_name):\n    H = 0\n#   file_name = raw_input(\"Please input the file name: \")\n    csv_reader = csv.reader(open(file_name))\n    for row in csv_reader:\n#       print row\n        for c in str(row):\n            if count.has_key(c):\n                count[c] += 1\n            else:\n                count[c] = 1\n\n    del count['[']\n    del count[']']\n    if count.has_key(' '):\n        del count[' ']\n    if count.has_key(\"'\"):\n        del count[\"'\"]\n\n#   print count\n    keys = count.keys()\n    print \"keys : \", keys\n    values =  count.values()\n    print \"values : \", values\n\n    total = sum(count.values())\n    print \"Total characters number : \", total\n\n    for c in keys:\n        prop[c] = count[c] * 0.1 / total\n        H += -1.0 * prop[c] * math.log(prop[c], 2)\n#   print \"prop : \", prop\n    print \"The entropy of \", file_name, \"is \", H\n    \n\n#   count.clear()\n#   prop.clear()        \n#   e = 2.71828\n#   print math.log(e)\n#   print math.log(8, 2)\n#   print \"hello\"\n\n# calc_entropy()\n\ndef calc():\n    file_name = raw_input(\"Please input the file name: \")\n    calc_entropy(file_name)\n    p_count = count.copy()\n    p_prop = prop.copy()\n#   print \"p_count : \", p_count\n#   print \"p_prop : \", p_prop\n    count.clear()\n    prop.clear()\n\n    file_name = raw_input(\"Please input another file name: \")\n    calc_entropy(file_name)\n    q_count = count.copy()\n    q_prop = prop.copy()\n#   print \"q_count : \", q_count\n#   print \"q_prop : \", q_prop\n    count.clear()\n    prop.clear()\n\n    D = 0\n    p_keys = p_count.keys() \n    for c in p_keys:\n        if q_count.has_key(c):\n            d = p_prop[c] * math.log((p_prop[c] / q_prop[c]), 2)\n            D += d\n\n    print \"D(P||Q) : \", D\n\n\nif __name__ == \"__main__\":\n    calc()\n```\n\n程序运行结果：\n![](/images/entropy.jpg)\n","source":"_posts/calc-entropy-and-divergence.md","raw":"---\ntitle: Calculate Entropy and Divergence\ndate: 2018-07-27 14:32:53\ncategories: python\ntags: [nlp, ml]\n---\n\n任意摘录一段文字，统计这段文字中所有字符的相对频率。假设这些相对频率就是这些字符的概率，请计算其分布的熵。按上述同样的方法计算字符分布的概率，然后计算两段文字中字符分布的 KL 距离。\n\n考虑到汉字总数较多，英文单词也很多；需要大量的数据才有参考意义。所以只是对英文字符进行处理。程序中数据makefile和readme.md来自工作中项目的两个文本文件。真实情况中可能两段文字中所包含的字符不完全相同，所以程序中采用两段文字中共有的字符进行计算KL距离。\n\n```python\n#! /usr/bin/python\n# function : calculate the entropy and the divergence of two files \n# date     : 2018/6/1\n# author   : lixiang\n\nimport csv\nimport math\n\ncount = {}\nprop = {}\np_count = {}\np_prop = {}\nq_count = {}\nq_prop = {}\n\ndef calc_entropy(file_name):\n    H = 0\n#   file_name = raw_input(\"Please input the file name: \")\n    csv_reader = csv.reader(open(file_name))\n    for row in csv_reader:\n#       print row\n        for c in str(row):\n            if count.has_key(c):\n                count[c] += 1\n            else:\n                count[c] = 1\n\n    del count['[']\n    del count[']']\n    if count.has_key(' '):\n        del count[' ']\n    if count.has_key(\"'\"):\n        del count[\"'\"]\n\n#   print count\n    keys = count.keys()\n    print \"keys : \", keys\n    values =  count.values()\n    print \"values : \", values\n\n    total = sum(count.values())\n    print \"Total characters number : \", total\n\n    for c in keys:\n        prop[c] = count[c] * 0.1 / total\n        H += -1.0 * prop[c] * math.log(prop[c], 2)\n#   print \"prop : \", prop\n    print \"The entropy of \", file_name, \"is \", H\n    \n\n#   count.clear()\n#   prop.clear()        \n#   e = 2.71828\n#   print math.log(e)\n#   print math.log(8, 2)\n#   print \"hello\"\n\n# calc_entropy()\n\ndef calc():\n    file_name = raw_input(\"Please input the file name: \")\n    calc_entropy(file_name)\n    p_count = count.copy()\n    p_prop = prop.copy()\n#   print \"p_count : \", p_count\n#   print \"p_prop : \", p_prop\n    count.clear()\n    prop.clear()\n\n    file_name = raw_input(\"Please input another file name: \")\n    calc_entropy(file_name)\n    q_count = count.copy()\n    q_prop = prop.copy()\n#   print \"q_count : \", q_count\n#   print \"q_prop : \", q_prop\n    count.clear()\n    prop.clear()\n\n    D = 0\n    p_keys = p_count.keys() \n    for c in p_keys:\n        if q_count.has_key(c):\n            d = p_prop[c] * math.log((p_prop[c] / q_prop[c]), 2)\n            D += d\n\n    print \"D(P||Q) : \", D\n\n\nif __name__ == \"__main__\":\n    calc()\n```\n\n程序运行结果：\n![](/images/entropy.jpg)\n","slug":"calc-entropy-and-divergence","published":1,"updated":"2019-01-13T10:03:48.525Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjy5kaqui000p5ge8iju51knp","content":"<p>任意摘录一段文字，统计这段文字中所有字符的相对频率。假设这些相对频率就是这些字符的概率，请计算其分布的熵。按上述同样的方法计算字符分布的概率，然后计算两段文字中字符分布的 KL 距离。</p>\n<p>考虑到汉字总数较多，英文单词也很多；需要大量的数据才有参考意义。所以只是对英文字符进行处理。程序中数据makefile和readme.md来自工作中项目的两个文本文件。真实情况中可能两段文字中所包含的字符不完全相同，所以程序中采用两段文字中共有的字符进行计算KL距离。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#! /usr/bin/python</span></span><br><span class=\"line\"><span class=\"comment\"># function : calculate the entropy and the divergence of two files </span></span><br><span class=\"line\"><span class=\"comment\"># date     : 2018/6/1</span></span><br><span class=\"line\"><span class=\"comment\"># author   : lixiang</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> csv</span><br><span class=\"line\"><span class=\"keyword\">import</span> math</span><br><span class=\"line\"></span><br><span class=\"line\">count = &#123;&#125;</span><br><span class=\"line\">prop = &#123;&#125;</span><br><span class=\"line\">p_count = &#123;&#125;</span><br><span class=\"line\">p_prop = &#123;&#125;</span><br><span class=\"line\">q_count = &#123;&#125;</span><br><span class=\"line\">q_prop = &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">calc_entropy</span><span class=\"params\">(file_name)</span>:</span></span><br><span class=\"line\">    H = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"comment\">#   file_name = raw_input(\"Please input the file name: \")</span></span><br><span class=\"line\">    csv_reader = csv.reader(open(file_name))</span><br><span class=\"line\">    <span class=\"keyword\">for</span> row <span class=\"keyword\">in</span> csv_reader:</span><br><span class=\"line\"><span class=\"comment\">#       print row</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> c <span class=\"keyword\">in</span> str(row):</span><br><span class=\"line\">            <span class=\"keyword\">if</span> count.has_key(c):</span><br><span class=\"line\">                count[c] += <span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                count[c] = <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">del</span> count[<span class=\"string\">'['</span>]</span><br><span class=\"line\">    <span class=\"keyword\">del</span> count[<span class=\"string\">']'</span>]</span><br><span class=\"line\">    <span class=\"keyword\">if</span> count.has_key(<span class=\"string\">' '</span>):</span><br><span class=\"line\">        <span class=\"keyword\">del</span> count[<span class=\"string\">' '</span>]</span><br><span class=\"line\">    <span class=\"keyword\">if</span> count.has_key(<span class=\"string\">\"'\"</span>):</span><br><span class=\"line\">        <span class=\"keyword\">del</span> count[<span class=\"string\">\"'\"</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#   print count</span></span><br><span class=\"line\">    keys = count.keys()</span><br><span class=\"line\">    <span class=\"keyword\">print</span> <span class=\"string\">\"keys : \"</span>, keys</span><br><span class=\"line\">    values =  count.values()</span><br><span class=\"line\">    <span class=\"keyword\">print</span> <span class=\"string\">\"values : \"</span>, values</span><br><span class=\"line\"></span><br><span class=\"line\">    total = sum(count.values())</span><br><span class=\"line\">    <span class=\"keyword\">print</span> <span class=\"string\">\"Total characters number : \"</span>, total</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> c <span class=\"keyword\">in</span> keys:</span><br><span class=\"line\">        prop[c] = count[c] * <span class=\"number\">0.1</span> / total</span><br><span class=\"line\">        H += <span class=\"number\">-1.0</span> * prop[c] * math.log(prop[c], <span class=\"number\">2</span>)</span><br><span class=\"line\"><span class=\"comment\">#   print \"prop : \", prop</span></span><br><span class=\"line\">    <span class=\"keyword\">print</span> <span class=\"string\">\"The entropy of \"</span>, file_name, <span class=\"string\">\"is \"</span>, H</span><br><span class=\"line\">    </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#   count.clear()</span></span><br><span class=\"line\"><span class=\"comment\">#   prop.clear()        </span></span><br><span class=\"line\"><span class=\"comment\">#   e = 2.71828</span></span><br><span class=\"line\"><span class=\"comment\">#   print math.log(e)</span></span><br><span class=\"line\"><span class=\"comment\">#   print math.log(8, 2)</span></span><br><span class=\"line\"><span class=\"comment\">#   print \"hello\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># calc_entropy()</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">calc</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    file_name = raw_input(<span class=\"string\">\"Please input the file name: \"</span>)</span><br><span class=\"line\">    calc_entropy(file_name)</span><br><span class=\"line\">    p_count = count.copy()</span><br><span class=\"line\">    p_prop = prop.copy()</span><br><span class=\"line\"><span class=\"comment\">#   print \"p_count : \", p_count</span></span><br><span class=\"line\"><span class=\"comment\">#   print \"p_prop : \", p_prop</span></span><br><span class=\"line\">    count.clear()</span><br><span class=\"line\">    prop.clear()</span><br><span class=\"line\"></span><br><span class=\"line\">    file_name = raw_input(<span class=\"string\">\"Please input another file name: \"</span>)</span><br><span class=\"line\">    calc_entropy(file_name)</span><br><span class=\"line\">    q_count = count.copy()</span><br><span class=\"line\">    q_prop = prop.copy()</span><br><span class=\"line\"><span class=\"comment\">#   print \"q_count : \", q_count</span></span><br><span class=\"line\"><span class=\"comment\">#   print \"q_prop : \", q_prop</span></span><br><span class=\"line\">    count.clear()</span><br><span class=\"line\">    prop.clear()</span><br><span class=\"line\"></span><br><span class=\"line\">    D = <span class=\"number\">0</span></span><br><span class=\"line\">    p_keys = p_count.keys() </span><br><span class=\"line\">    <span class=\"keyword\">for</span> c <span class=\"keyword\">in</span> p_keys:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> q_count.has_key(c):</span><br><span class=\"line\">            d = p_prop[c] * math.log((p_prop[c] / q_prop[c]), <span class=\"number\">2</span>)</span><br><span class=\"line\">            D += d</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">print</span> <span class=\"string\">\"D(P||Q) : \"</span>, D</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">\"__main__\"</span>:</span><br><span class=\"line\">    calc()</span><br></pre></td></tr></table></figure>\n\n<p>程序运行结果：<br><img src=\"/images/entropy.jpg\" alt></p>\n","site":{"data":{}},"excerpt":"","more":"<p>任意摘录一段文字，统计这段文字中所有字符的相对频率。假设这些相对频率就是这些字符的概率，请计算其分布的熵。按上述同样的方法计算字符分布的概率，然后计算两段文字中字符分布的 KL 距离。</p>\n<p>考虑到汉字总数较多，英文单词也很多；需要大量的数据才有参考意义。所以只是对英文字符进行处理。程序中数据makefile和readme.md来自工作中项目的两个文本文件。真实情况中可能两段文字中所包含的字符不完全相同，所以程序中采用两段文字中共有的字符进行计算KL距离。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#! /usr/bin/python</span></span><br><span class=\"line\"><span class=\"comment\"># function : calculate the entropy and the divergence of two files </span></span><br><span class=\"line\"><span class=\"comment\"># date     : 2018/6/1</span></span><br><span class=\"line\"><span class=\"comment\"># author   : lixiang</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> csv</span><br><span class=\"line\"><span class=\"keyword\">import</span> math</span><br><span class=\"line\"></span><br><span class=\"line\">count = &#123;&#125;</span><br><span class=\"line\">prop = &#123;&#125;</span><br><span class=\"line\">p_count = &#123;&#125;</span><br><span class=\"line\">p_prop = &#123;&#125;</span><br><span class=\"line\">q_count = &#123;&#125;</span><br><span class=\"line\">q_prop = &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">calc_entropy</span><span class=\"params\">(file_name)</span>:</span></span><br><span class=\"line\">    H = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"comment\">#   file_name = raw_input(\"Please input the file name: \")</span></span><br><span class=\"line\">    csv_reader = csv.reader(open(file_name))</span><br><span class=\"line\">    <span class=\"keyword\">for</span> row <span class=\"keyword\">in</span> csv_reader:</span><br><span class=\"line\"><span class=\"comment\">#       print row</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> c <span class=\"keyword\">in</span> str(row):</span><br><span class=\"line\">            <span class=\"keyword\">if</span> count.has_key(c):</span><br><span class=\"line\">                count[c] += <span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                count[c] = <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">del</span> count[<span class=\"string\">'['</span>]</span><br><span class=\"line\">    <span class=\"keyword\">del</span> count[<span class=\"string\">']'</span>]</span><br><span class=\"line\">    <span class=\"keyword\">if</span> count.has_key(<span class=\"string\">' '</span>):</span><br><span class=\"line\">        <span class=\"keyword\">del</span> count[<span class=\"string\">' '</span>]</span><br><span class=\"line\">    <span class=\"keyword\">if</span> count.has_key(<span class=\"string\">\"'\"</span>):</span><br><span class=\"line\">        <span class=\"keyword\">del</span> count[<span class=\"string\">\"'\"</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#   print count</span></span><br><span class=\"line\">    keys = count.keys()</span><br><span class=\"line\">    <span class=\"keyword\">print</span> <span class=\"string\">\"keys : \"</span>, keys</span><br><span class=\"line\">    values =  count.values()</span><br><span class=\"line\">    <span class=\"keyword\">print</span> <span class=\"string\">\"values : \"</span>, values</span><br><span class=\"line\"></span><br><span class=\"line\">    total = sum(count.values())</span><br><span class=\"line\">    <span class=\"keyword\">print</span> <span class=\"string\">\"Total characters number : \"</span>, total</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> c <span class=\"keyword\">in</span> keys:</span><br><span class=\"line\">        prop[c] = count[c] * <span class=\"number\">0.1</span> / total</span><br><span class=\"line\">        H += <span class=\"number\">-1.0</span> * prop[c] * math.log(prop[c], <span class=\"number\">2</span>)</span><br><span class=\"line\"><span class=\"comment\">#   print \"prop : \", prop</span></span><br><span class=\"line\">    <span class=\"keyword\">print</span> <span class=\"string\">\"The entropy of \"</span>, file_name, <span class=\"string\">\"is \"</span>, H</span><br><span class=\"line\">    </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#   count.clear()</span></span><br><span class=\"line\"><span class=\"comment\">#   prop.clear()        </span></span><br><span class=\"line\"><span class=\"comment\">#   e = 2.71828</span></span><br><span class=\"line\"><span class=\"comment\">#   print math.log(e)</span></span><br><span class=\"line\"><span class=\"comment\">#   print math.log(8, 2)</span></span><br><span class=\"line\"><span class=\"comment\">#   print \"hello\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># calc_entropy()</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">calc</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    file_name = raw_input(<span class=\"string\">\"Please input the file name: \"</span>)</span><br><span class=\"line\">    calc_entropy(file_name)</span><br><span class=\"line\">    p_count = count.copy()</span><br><span class=\"line\">    p_prop = prop.copy()</span><br><span class=\"line\"><span class=\"comment\">#   print \"p_count : \", p_count</span></span><br><span class=\"line\"><span class=\"comment\">#   print \"p_prop : \", p_prop</span></span><br><span class=\"line\">    count.clear()</span><br><span class=\"line\">    prop.clear()</span><br><span class=\"line\"></span><br><span class=\"line\">    file_name = raw_input(<span class=\"string\">\"Please input another file name: \"</span>)</span><br><span class=\"line\">    calc_entropy(file_name)</span><br><span class=\"line\">    q_count = count.copy()</span><br><span class=\"line\">    q_prop = prop.copy()</span><br><span class=\"line\"><span class=\"comment\">#   print \"q_count : \", q_count</span></span><br><span class=\"line\"><span class=\"comment\">#   print \"q_prop : \", q_prop</span></span><br><span class=\"line\">    count.clear()</span><br><span class=\"line\">    prop.clear()</span><br><span class=\"line\"></span><br><span class=\"line\">    D = <span class=\"number\">0</span></span><br><span class=\"line\">    p_keys = p_count.keys() </span><br><span class=\"line\">    <span class=\"keyword\">for</span> c <span class=\"keyword\">in</span> p_keys:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> q_count.has_key(c):</span><br><span class=\"line\">            d = p_prop[c] * math.log((p_prop[c] / q_prop[c]), <span class=\"number\">2</span>)</span><br><span class=\"line\">            D += d</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">print</span> <span class=\"string\">\"D(P||Q) : \"</span>, D</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">\"__main__\"</span>:</span><br><span class=\"line\">    calc()</span><br></pre></td></tr></table></figure>\n\n<p>程序运行结果：<br><img src=\"/images/entropy.jpg\" alt></p>\n"},{"title":"Calculate the Number of Uppercase Letters in a File","date":"2018-11-26T16:10:55.000Z","_content":"\n```python\nimport os\nos.chdir(\"C:\\\\users\\\\lixiang\\\\desktop\")\n\nwith open(\"file.txt\") as file:\n    count = 0\n    for i in file.read():\n        if i.isupper():\n            count += 1\nprint(count)\n```\n","source":"_posts/calculate-the-number-of-uppercase-letters-in-a-file.md","raw":"---\ntitle: Calculate the Number of Uppercase Letters in a File\ndate: 2018-11-27 00:10:55\ncategories:\ntags:\n---\n\n```python\nimport os\nos.chdir(\"C:\\\\users\\\\lixiang\\\\desktop\")\n\nwith open(\"file.txt\") as file:\n    count = 0\n    for i in file.read():\n        if i.isupper():\n            count += 1\nprint(count)\n```\n","slug":"calculate-the-number-of-uppercase-letters-in-a-file","published":1,"updated":"2019-01-13T10:03:48.525Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjy5kaquj000q5ge8ub5qncpd","content":"<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\">os.chdir(<span class=\"string\">\"C:\\\\users\\\\lixiang\\\\desktop\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">with</span> open(<span class=\"string\">\"file.txt\"</span>) <span class=\"keyword\">as</span> file:</span><br><span class=\"line\">    count = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> file.read():</span><br><span class=\"line\">        <span class=\"keyword\">if</span> i.isupper():</span><br><span class=\"line\">            count += <span class=\"number\">1</span></span><br><span class=\"line\">print(count)</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\">os.chdir(<span class=\"string\">\"C:\\\\users\\\\lixiang\\\\desktop\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">with</span> open(<span class=\"string\">\"file.txt\"</span>) <span class=\"keyword\">as</span> file:</span><br><span class=\"line\">    count = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> file.read():</span><br><span class=\"line\">        <span class=\"keyword\">if</span> i.isupper():</span><br><span class=\"line\">            count += <span class=\"number\">1</span></span><br><span class=\"line\">print(count)</span><br></pre></td></tr></table></figure>\n\n"},{"title":"Callatz Conjecture(3n+1 Conjecture) in Matlab","date":"2018-11-26T02:08:27.000Z","_content":"\n```Matlab\n% 考拉兹猜想（Collatz conjecture）/ 3n+1猜想\n% 对所有自然数，如果它是奇数，则对它乘3再加1，如果它是偶数，则对它除以2，如此循环，最终都能够得到1。    \n% matlab\nwhile 1\n    n = input('please input n :')\n    if n <= 0  break\n    end\n\n    while n > 1\n        if rem(n, 2) == 0\n            n = n / 2\n        else\n            n = 3 * n + 1\n        end\n        fprintf('\\n n = %d', n)\n    end\nend\n```\n","source":"_posts/callatz-conjecture.md","raw":"---\ntitle: Callatz Conjecture(3n+1 Conjecture) in Matlab\ndate: 2018-11-26 10:08:27\ncategories:\ntags:\n---\n\n```Matlab\n% 考拉兹猜想（Collatz conjecture）/ 3n+1猜想\n% 对所有自然数，如果它是奇数，则对它乘3再加1，如果它是偶数，则对它除以2，如此循环，最终都能够得到1。    \n% matlab\nwhile 1\n    n = input('please input n :')\n    if n <= 0  break\n    end\n\n    while n > 1\n        if rem(n, 2) == 0\n            n = n / 2\n        else\n            n = 3 * n + 1\n        end\n        fprintf('\\n n = %d', n)\n    end\nend\n```\n","slug":"callatz-conjecture","published":1,"updated":"2019-01-13T10:03:48.525Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjy5kaquk000t5ge87s8eand6","content":"<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">% 考拉兹猜想（Collatz conjecture）/ 3n+1猜想</span></span><br><span class=\"line\"><span class=\"comment\">% 对所有自然数，如果它是奇数，则对它乘3再加1，如果它是偶数，则对它除以2，如此循环，最终都能够得到1。    </span></span><br><span class=\"line\"><span class=\"comment\">% matlab</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"number\">1</span></span><br><span class=\"line\">    n = input(<span class=\"string\">'please input n :'</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> n &lt;= <span class=\"number\">0</span>  <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> n &gt; <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">rem</span>(n, <span class=\"number\">2</span>) == <span class=\"number\">0</span></span><br><span class=\"line\">            n = n / <span class=\"number\">2</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            n = <span class=\"number\">3</span> * n + <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">        fprintf(<span class=\"string\">'\\n n = %d'</span>, n)</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">% 考拉兹猜想（Collatz conjecture）/ 3n+1猜想</span></span><br><span class=\"line\"><span class=\"comment\">% 对所有自然数，如果它是奇数，则对它乘3再加1，如果它是偶数，则对它除以2，如此循环，最终都能够得到1。    </span></span><br><span class=\"line\"><span class=\"comment\">% matlab</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"number\">1</span></span><br><span class=\"line\">    n = input(<span class=\"string\">'please input n :'</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> n &lt;= <span class=\"number\">0</span>  <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> n &gt; <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">rem</span>(n, <span class=\"number\">2</span>) == <span class=\"number\">0</span></span><br><span class=\"line\">            n = n / <span class=\"number\">2</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            n = <span class=\"number\">3</span> * n + <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">        fprintf(<span class=\"string\">'\\n n = %d'</span>, n)</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n\n"},{"title":"Chrome Aw Snap","date":"2018-11-12T04:04:16.000Z","_content":"\n帮我哥在win8上装了个Chrome,所有页面无法打开。重装Chrome也不行。提示\"喔唷，崩溃啦！\"\n\n原因：百度残留的后台服务\n\n解决办法：\n C:\\Windows\\System32\\drivers\\bd0001.sys\n重命名bd0001.sys为bd0001.txt,重启删除该文件。\n\n参考：\nhttps://www.zhihu.com/question/29305453\n","source":"_posts/chrome-aw-snap.md","raw":"---\ntitle: Chrome Aw Snap\ndate: 2018-11-12 12:04:16\ncategories:\ntags:\n---\n\n帮我哥在win8上装了个Chrome,所有页面无法打开。重装Chrome也不行。提示\"喔唷，崩溃啦！\"\n\n原因：百度残留的后台服务\n\n解决办法：\n C:\\Windows\\System32\\drivers\\bd0001.sys\n重命名bd0001.sys为bd0001.txt,重启删除该文件。\n\n参考：\nhttps://www.zhihu.com/question/29305453\n","slug":"chrome-aw-snap","published":1,"updated":"2019-01-13T10:03:48.526Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjy5kaqul000u5ge85pxjhfx9","content":"<p>帮我哥在win8上装了个Chrome,所有页面无法打开。重装Chrome也不行。提示”喔唷，崩溃啦！”</p>\n<p>原因：百度残留的后台服务</p>\n<p>解决办法：<br> C:\\Windows\\System32\\drivers\\bd0001.sys<br>重命名bd0001.sys为bd0001.txt,重启删除该文件。</p>\n<p>参考：<br><a href=\"https://www.zhihu.com/question/29305453\" target=\"_blank\" rel=\"noopener\">https://www.zhihu.com/question/29305453</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>帮我哥在win8上装了个Chrome,所有页面无法打开。重装Chrome也不行。提示”喔唷，崩溃啦！”</p>\n<p>原因：百度残留的后台服务</p>\n<p>解决办法：<br> C:\\Windows\\System32\\drivers\\bd0001.sys<br>重命名bd0001.sys为bd0001.txt,重启删除该文件。</p>\n<p>参考：<br><a href=\"https://www.zhihu.com/question/29305453\" target=\"_blank\" rel=\"noopener\">https://www.zhihu.com/question/29305453</a></p>\n"},{"title":"Compare Software Version","comments":1,"_content":"# 比较任意两个软件版本号大小\n请用您熟悉的编程语言，编程实现一个比较任意两个软件版本号大小的函数，如 1.2.3a 和 1.2.4b比较，后者版本号更大，请考虑各种情况，不可以使用系统提供的比较函数。   \n\n```python\n#! /usr/bin/python\nimport re\n\n# a : 110a\n# b : 120c\n# great than : 1; equal : 0; less than : -1\ndef split_compare(a, b):\n    l1 = len(a)\n    l2 = len(b)\n    a_former = '' \n    a_latter = ''\n    b_former = ''\n    b_latter = ''\n    a_exist_alpha = 0\n    b_exist_alpha = 0\n    for i in range(l1):\n        if a[i].isalpha():\n            a_exist_alpha = 1\n            a_former = a[:i]\n            a_latter = a[i:]\n            break\n    if not a_exist_alpha:\n        a_former = a\n\n    for j in range(l2):\n        if b[j].isalpha():\n            b_exist_alpha = 1\n            b_former = b[:j]\n            b_latter = b[j:]\n            break\n    if not b_exist_alpha:\n        b_former = b\n    \n#    print type(a_former), type(a_latter), type(b_former), type(b_latter)\n#    print repr(a_former)\n#    print a_former, a_latter, b_former, b_latter\t\t\n\n#    a_former = int(''.join([str(t) for t in a_former]))\n#    b_former = int(''.join([str(t) for t in b_former]))\n\n    if int(a_former) > int(b_former):\n        return 1\n    elif int(a_former) < int(b_former):\n        return -1\n    elif str(a_latter) > str(b_latter):\n        return 1\n    elif str(a_latter) < str(b_latter):\n        return -1\n    else:\n        return 0\n\ndef version_compare(v1, v2):\n    d1=re.split('\\.', v1)\n    d2=re.split('\\.',v2)\n\n#    d1=[int(d1[i]) for i in range(len(d1))]\n#    d2=[int(d2[i]) for i in range(len(d2))]\n\n    l = 0\n    if len(d1) > len(d2):\n        l = len(d1)\n    else:\n        l = len(d2)\n\n    for i in range(l):\n        try:\n            if len(d1[i]) > 0 and len(d2[i]) > 0:\n                if 1 == split_compare(d1[i], d2[i]):      \n                    return '>'\n                elif 0 == split_compare(d1[i], d2[i]):    \n                    continue\n                else:\n                    return '<'\n        except IndexError as e:\n            if len(d1) > len(d2):\n                return '>'\n            else:\n                return '<'\n    return '='\n\n\nif __name__==\"__main__\":\n#    version1='2.6.9'\n#    version2='12.0.9.2'\n    version1 = raw_input(\"please input version1 :\")\n    version2 = raw_input(\"please input version2 :\")\n    print (version1, version_compare(version1, version2), version2)\n\n#    a = raw_input(\"input a :\")\n#    b = raw_input(\"input b :\")\n#    print split_compare(a, b)\n```\n","source":"_posts/compare_version.md","raw":"---\ntitle: Compare Software Version\ntags: [python, oj]\ncomments: true\ncategories: oj\n---\n# 比较任意两个软件版本号大小\n请用您熟悉的编程语言，编程实现一个比较任意两个软件版本号大小的函数，如 1.2.3a 和 1.2.4b比较，后者版本号更大，请考虑各种情况，不可以使用系统提供的比较函数。   \n\n```python\n#! /usr/bin/python\nimport re\n\n# a : 110a\n# b : 120c\n# great than : 1; equal : 0; less than : -1\ndef split_compare(a, b):\n    l1 = len(a)\n    l2 = len(b)\n    a_former = '' \n    a_latter = ''\n    b_former = ''\n    b_latter = ''\n    a_exist_alpha = 0\n    b_exist_alpha = 0\n    for i in range(l1):\n        if a[i].isalpha():\n            a_exist_alpha = 1\n            a_former = a[:i]\n            a_latter = a[i:]\n            break\n    if not a_exist_alpha:\n        a_former = a\n\n    for j in range(l2):\n        if b[j].isalpha():\n            b_exist_alpha = 1\n            b_former = b[:j]\n            b_latter = b[j:]\n            break\n    if not b_exist_alpha:\n        b_former = b\n    \n#    print type(a_former), type(a_latter), type(b_former), type(b_latter)\n#    print repr(a_former)\n#    print a_former, a_latter, b_former, b_latter\t\t\n\n#    a_former = int(''.join([str(t) for t in a_former]))\n#    b_former = int(''.join([str(t) for t in b_former]))\n\n    if int(a_former) > int(b_former):\n        return 1\n    elif int(a_former) < int(b_former):\n        return -1\n    elif str(a_latter) > str(b_latter):\n        return 1\n    elif str(a_latter) < str(b_latter):\n        return -1\n    else:\n        return 0\n\ndef version_compare(v1, v2):\n    d1=re.split('\\.', v1)\n    d2=re.split('\\.',v2)\n\n#    d1=[int(d1[i]) for i in range(len(d1))]\n#    d2=[int(d2[i]) for i in range(len(d2))]\n\n    l = 0\n    if len(d1) > len(d2):\n        l = len(d1)\n    else:\n        l = len(d2)\n\n    for i in range(l):\n        try:\n            if len(d1[i]) > 0 and len(d2[i]) > 0:\n                if 1 == split_compare(d1[i], d2[i]):      \n                    return '>'\n                elif 0 == split_compare(d1[i], d2[i]):    \n                    continue\n                else:\n                    return '<'\n        except IndexError as e:\n            if len(d1) > len(d2):\n                return '>'\n            else:\n                return '<'\n    return '='\n\n\nif __name__==\"__main__\":\n#    version1='2.6.9'\n#    version2='12.0.9.2'\n    version1 = raw_input(\"please input version1 :\")\n    version2 = raw_input(\"please input version2 :\")\n    print (version1, version_compare(version1, version2), version2)\n\n#    a = raw_input(\"input a :\")\n#    b = raw_input(\"input b :\")\n#    print split_compare(a, b)\n```\n","slug":"compare_version","published":1,"date":"2019-01-13T10:03:48.526Z","updated":"2019-01-13T10:03:48.526Z","layout":"post","photos":[],"link":"","_id":"cjy5kaqum000v5ge82sm6y3p5","content":"<h1 id=\"比较任意两个软件版本号大小\"><a href=\"#比较任意两个软件版本号大小\" class=\"headerlink\" title=\"比较任意两个软件版本号大小\"></a>比较任意两个软件版本号大小</h1><p>请用您熟悉的编程语言，编程实现一个比较任意两个软件版本号大小的函数，如 1.2.3a 和 1.2.4b比较，后者版本号更大，请考虑各种情况，不可以使用系统提供的比较函数。   </p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#! /usr/bin/python</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># a : 110a</span></span><br><span class=\"line\"><span class=\"comment\"># b : 120c</span></span><br><span class=\"line\"><span class=\"comment\"># great than : 1; equal : 0; less than : -1</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">split_compare</span><span class=\"params\">(a, b)</span>:</span></span><br><span class=\"line\">    l1 = len(a)</span><br><span class=\"line\">    l2 = len(b)</span><br><span class=\"line\">    a_former = <span class=\"string\">''</span> </span><br><span class=\"line\">    a_latter = <span class=\"string\">''</span></span><br><span class=\"line\">    b_former = <span class=\"string\">''</span></span><br><span class=\"line\">    b_latter = <span class=\"string\">''</span></span><br><span class=\"line\">    a_exist_alpha = <span class=\"number\">0</span></span><br><span class=\"line\">    b_exist_alpha = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(l1):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> a[i].isalpha():</span><br><span class=\"line\">            a_exist_alpha = <span class=\"number\">1</span></span><br><span class=\"line\">            a_former = a[:i]</span><br><span class=\"line\">            a_latter = a[i:]</span><br><span class=\"line\">            <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> a_exist_alpha:</span><br><span class=\"line\">        a_former = a</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(l2):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> b[j].isalpha():</span><br><span class=\"line\">            b_exist_alpha = <span class=\"number\">1</span></span><br><span class=\"line\">            b_former = b[:j]</span><br><span class=\"line\">            b_latter = b[j:]</span><br><span class=\"line\">            <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> b_exist_alpha:</span><br><span class=\"line\">        b_former = b</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\">#    print type(a_former), type(a_latter), type(b_former), type(b_latter)</span></span><br><span class=\"line\"><span class=\"comment\">#    print repr(a_former)</span></span><br><span class=\"line\"><span class=\"comment\">#    print a_former, a_latter, b_former, b_latter\t\t</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#    a_former = int(''.join([str(t) for t in a_former]))</span></span><br><span class=\"line\"><span class=\"comment\">#    b_former = int(''.join([str(t) for t in b_former]))</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> int(a_former) &gt; int(b_former):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">elif</span> int(a_former) &lt; int(b_former):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">-1</span></span><br><span class=\"line\">    <span class=\"keyword\">elif</span> str(a_latter) &gt; str(b_latter):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">elif</span> str(a_latter) &lt; str(b_latter):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">-1</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">version_compare</span><span class=\"params\">(v1, v2)</span>:</span></span><br><span class=\"line\">    d1=re.split(<span class=\"string\">'\\.'</span>, v1)</span><br><span class=\"line\">    d2=re.split(<span class=\"string\">'\\.'</span>,v2)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#    d1=[int(d1[i]) for i in range(len(d1))]</span></span><br><span class=\"line\"><span class=\"comment\">#    d2=[int(d2[i]) for i in range(len(d2))]</span></span><br><span class=\"line\"></span><br><span class=\"line\">    l = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> len(d1) &gt; len(d2):</span><br><span class=\"line\">        l = len(d1)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        l = len(d2)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(l):</span><br><span class=\"line\">        <span class=\"keyword\">try</span>:</span><br><span class=\"line\">            <span class=\"keyword\">if</span> len(d1[i]) &gt; <span class=\"number\">0</span> <span class=\"keyword\">and</span> len(d2[i]) &gt; <span class=\"number\">0</span>:</span><br><span class=\"line\">                <span class=\"keyword\">if</span> <span class=\"number\">1</span> == split_compare(d1[i], d2[i]):      </span><br><span class=\"line\">                    <span class=\"keyword\">return</span> <span class=\"string\">'&gt;'</span></span><br><span class=\"line\">                <span class=\"keyword\">elif</span> <span class=\"number\">0</span> == split_compare(d1[i], d2[i]):    </span><br><span class=\"line\">                    <span class=\"keyword\">continue</span></span><br><span class=\"line\">                <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> <span class=\"string\">'&lt;'</span></span><br><span class=\"line\">        <span class=\"keyword\">except</span> IndexError <span class=\"keyword\">as</span> e:</span><br><span class=\"line\">            <span class=\"keyword\">if</span> len(d1) &gt; len(d2):</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"string\">'&gt;'</span></span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"string\">'&lt;'</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">'='</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__==<span class=\"string\">\"__main__\"</span>:</span><br><span class=\"line\"><span class=\"comment\">#    version1='2.6.9'</span></span><br><span class=\"line\"><span class=\"comment\">#    version2='12.0.9.2'</span></span><br><span class=\"line\">    version1 = raw_input(<span class=\"string\">\"please input version1 :\"</span>)</span><br><span class=\"line\">    version2 = raw_input(<span class=\"string\">\"please input version2 :\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">print</span> (version1, version_compare(version1, version2), version2)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#    a = raw_input(\"input a :\")</span></span><br><span class=\"line\"><span class=\"comment\">#    b = raw_input(\"input b :\")</span></span><br><span class=\"line\"><span class=\"comment\">#    print split_compare(a, b)</span></span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"比较任意两个软件版本号大小\"><a href=\"#比较任意两个软件版本号大小\" class=\"headerlink\" title=\"比较任意两个软件版本号大小\"></a>比较任意两个软件版本号大小</h1><p>请用您熟悉的编程语言，编程实现一个比较任意两个软件版本号大小的函数，如 1.2.3a 和 1.2.4b比较，后者版本号更大，请考虑各种情况，不可以使用系统提供的比较函数。   </p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#! /usr/bin/python</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># a : 110a</span></span><br><span class=\"line\"><span class=\"comment\"># b : 120c</span></span><br><span class=\"line\"><span class=\"comment\"># great than : 1; equal : 0; less than : -1</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">split_compare</span><span class=\"params\">(a, b)</span>:</span></span><br><span class=\"line\">    l1 = len(a)</span><br><span class=\"line\">    l2 = len(b)</span><br><span class=\"line\">    a_former = <span class=\"string\">''</span> </span><br><span class=\"line\">    a_latter = <span class=\"string\">''</span></span><br><span class=\"line\">    b_former = <span class=\"string\">''</span></span><br><span class=\"line\">    b_latter = <span class=\"string\">''</span></span><br><span class=\"line\">    a_exist_alpha = <span class=\"number\">0</span></span><br><span class=\"line\">    b_exist_alpha = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(l1):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> a[i].isalpha():</span><br><span class=\"line\">            a_exist_alpha = <span class=\"number\">1</span></span><br><span class=\"line\">            a_former = a[:i]</span><br><span class=\"line\">            a_latter = a[i:]</span><br><span class=\"line\">            <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> a_exist_alpha:</span><br><span class=\"line\">        a_former = a</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(l2):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> b[j].isalpha():</span><br><span class=\"line\">            b_exist_alpha = <span class=\"number\">1</span></span><br><span class=\"line\">            b_former = b[:j]</span><br><span class=\"line\">            b_latter = b[j:]</span><br><span class=\"line\">            <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> b_exist_alpha:</span><br><span class=\"line\">        b_former = b</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\">#    print type(a_former), type(a_latter), type(b_former), type(b_latter)</span></span><br><span class=\"line\"><span class=\"comment\">#    print repr(a_former)</span></span><br><span class=\"line\"><span class=\"comment\">#    print a_former, a_latter, b_former, b_latter\t\t</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#    a_former = int(''.join([str(t) for t in a_former]))</span></span><br><span class=\"line\"><span class=\"comment\">#    b_former = int(''.join([str(t) for t in b_former]))</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> int(a_former) &gt; int(b_former):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">elif</span> int(a_former) &lt; int(b_former):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">-1</span></span><br><span class=\"line\">    <span class=\"keyword\">elif</span> str(a_latter) &gt; str(b_latter):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">elif</span> str(a_latter) &lt; str(b_latter):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">-1</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">version_compare</span><span class=\"params\">(v1, v2)</span>:</span></span><br><span class=\"line\">    d1=re.split(<span class=\"string\">'\\.'</span>, v1)</span><br><span class=\"line\">    d2=re.split(<span class=\"string\">'\\.'</span>,v2)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#    d1=[int(d1[i]) for i in range(len(d1))]</span></span><br><span class=\"line\"><span class=\"comment\">#    d2=[int(d2[i]) for i in range(len(d2))]</span></span><br><span class=\"line\"></span><br><span class=\"line\">    l = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> len(d1) &gt; len(d2):</span><br><span class=\"line\">        l = len(d1)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        l = len(d2)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(l):</span><br><span class=\"line\">        <span class=\"keyword\">try</span>:</span><br><span class=\"line\">            <span class=\"keyword\">if</span> len(d1[i]) &gt; <span class=\"number\">0</span> <span class=\"keyword\">and</span> len(d2[i]) &gt; <span class=\"number\">0</span>:</span><br><span class=\"line\">                <span class=\"keyword\">if</span> <span class=\"number\">1</span> == split_compare(d1[i], d2[i]):      </span><br><span class=\"line\">                    <span class=\"keyword\">return</span> <span class=\"string\">'&gt;'</span></span><br><span class=\"line\">                <span class=\"keyword\">elif</span> <span class=\"number\">0</span> == split_compare(d1[i], d2[i]):    </span><br><span class=\"line\">                    <span class=\"keyword\">continue</span></span><br><span class=\"line\">                <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> <span class=\"string\">'&lt;'</span></span><br><span class=\"line\">        <span class=\"keyword\">except</span> IndexError <span class=\"keyword\">as</span> e:</span><br><span class=\"line\">            <span class=\"keyword\">if</span> len(d1) &gt; len(d2):</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"string\">'&gt;'</span></span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"string\">'&lt;'</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">'='</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__==<span class=\"string\">\"__main__\"</span>:</span><br><span class=\"line\"><span class=\"comment\">#    version1='2.6.9'</span></span><br><span class=\"line\"><span class=\"comment\">#    version2='12.0.9.2'</span></span><br><span class=\"line\">    version1 = raw_input(<span class=\"string\">\"please input version1 :\"</span>)</span><br><span class=\"line\">    version2 = raw_input(<span class=\"string\">\"please input version2 :\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">print</span> (version1, version_compare(version1, version2), version2)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#    a = raw_input(\"input a :\")</span></span><br><span class=\"line\"><span class=\"comment\">#    b = raw_input(\"input b :\")</span></span><br><span class=\"line\"><span class=\"comment\">#    print split_compare(a, b)</span></span><br></pre></td></tr></table></figure>\n\n"},{"title":"Failed to Start Mysql8.0 in Centos7(vultr)","date":"2019-01-20T10:38:05.000Z","_content":"## 启动失败\n![](75749952.png)\n![](75771201.png)\n## 查看日志\n![](75840236.png)\n原因：内存不足\n![](vultr_hardinfo.jpg)\n[Solution](https://blog.csdn.net/Mr_OOO/article/details/78653523)\n![](76140575.png)\n![](76232995.png)\n## 成功开启MySQL\n## 获取临时密码\n```bash\ngrep \"A temporary password\" /var/log/mysqld.log  \n# 修改root密码，必须包含大小写特殊字母\nmysql -u root -p\nalter user 'root'@'localhost' identified by 'your_password';\n```\n## 使用DBeaver客户端连接失败\n![](71003550.png)\n```cmd\nCommunications link failure\nThe last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.\n  Connection refused (Connection refused)\n```\n## Solution\n### 远程测试端口是否开启\n![](71918674.png)\n### 服务器本机查看端口是否开启\n![](71982775.png)\n![](72127872.png)\n原因：防火墙中端口没有开启\n```bash\n[root@vultr ~]# firewall-cmd --zone=public --list-ports\n[root@vultr ~]# firewall-cmd --zone=public --list-ports | grep 3306\n[root@vultr ~]# firewall-cmd --zone=public --add-port=3306/tcp --permanent\nsuccess\n[root@vultr ~]# firewall-cmd --zone=public --add-port=3306/udp --permanent\nsuccess\n[root@vultr ~]# firewall-cmd --zone=public --list-ports\n[root@vultr ~]# firewall-cmd --reload\nsuccess\n[root@vultr ~]# firewall-cmd --zone=public --list-ports\n```\n![](72326504.png)\n```cmd\nnull, message from server: \"Host '61.148.199.222' is not allowed to connect to this MySQL server\"\n```\n## 服务器本地可以登录\n![](35968830.png)\n## 客户端无法登录，Public Key Retrieval is not allowed\n![](36006075.png)\n修改DBeaver中驱动属性，allowPublicKeyRetrieval属性值改为true\n![](36115949.png)\n## 连接成功\n![](36201778.png)\n\n","source":"_posts/failed-to-start-mysql8-0-in-centos7.md","raw":"---\ntitle: Failed to Start Mysql8.0 in Centos7(vultr)\ndate: 2019-01-20 18:38:05\ncategories:\ntags:\n---\n## 启动失败\n![](75749952.png)\n![](75771201.png)\n## 查看日志\n![](75840236.png)\n原因：内存不足\n![](vultr_hardinfo.jpg)\n[Solution](https://blog.csdn.net/Mr_OOO/article/details/78653523)\n![](76140575.png)\n![](76232995.png)\n## 成功开启MySQL\n## 获取临时密码\n```bash\ngrep \"A temporary password\" /var/log/mysqld.log  \n# 修改root密码，必须包含大小写特殊字母\nmysql -u root -p\nalter user 'root'@'localhost' identified by 'your_password';\n```\n## 使用DBeaver客户端连接失败\n![](71003550.png)\n```cmd\nCommunications link failure\nThe last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.\n  Connection refused (Connection refused)\n```\n## Solution\n### 远程测试端口是否开启\n![](71918674.png)\n### 服务器本机查看端口是否开启\n![](71982775.png)\n![](72127872.png)\n原因：防火墙中端口没有开启\n```bash\n[root@vultr ~]# firewall-cmd --zone=public --list-ports\n[root@vultr ~]# firewall-cmd --zone=public --list-ports | grep 3306\n[root@vultr ~]# firewall-cmd --zone=public --add-port=3306/tcp --permanent\nsuccess\n[root@vultr ~]# firewall-cmd --zone=public --add-port=3306/udp --permanent\nsuccess\n[root@vultr ~]# firewall-cmd --zone=public --list-ports\n[root@vultr ~]# firewall-cmd --reload\nsuccess\n[root@vultr ~]# firewall-cmd --zone=public --list-ports\n```\n![](72326504.png)\n```cmd\nnull, message from server: \"Host '61.148.199.222' is not allowed to connect to this MySQL server\"\n```\n## 服务器本地可以登录\n![](35968830.png)\n## 客户端无法登录，Public Key Retrieval is not allowed\n![](36006075.png)\n修改DBeaver中驱动属性，allowPublicKeyRetrieval属性值改为true\n![](36115949.png)\n## 连接成功\n![](36201778.png)\n\n","slug":"failed-to-start-mysql8-0-in-centos7","published":1,"updated":"2019-01-20T13:58:47.987Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjy5kaqum000x5ge8yea8o9nr","content":"<h2 id=\"启动失败\"><a href=\"#启动失败\" class=\"headerlink\" title=\"启动失败\"></a>启动失败</h2><p><img src=\"75749952.png\" alt><br><img src=\"75771201.png\" alt></p>\n<h2 id=\"查看日志\"><a href=\"#查看日志\" class=\"headerlink\" title=\"查看日志\"></a>查看日志</h2><p><img src=\"75840236.png\" alt><br>原因：内存不足<br><img src=\"vultr_hardinfo.jpg\" alt><br><a href=\"https://blog.csdn.net/Mr_OOO/article/details/78653523\" target=\"_blank\" rel=\"noopener\">Solution</a><br><img src=\"76140575.png\" alt><br><img src=\"76232995.png\" alt></p>\n<h2 id=\"成功开启MySQL\"><a href=\"#成功开启MySQL\" class=\"headerlink\" title=\"成功开启MySQL\"></a>成功开启MySQL</h2><h2 id=\"获取临时密码\"><a href=\"#获取临时密码\" class=\"headerlink\" title=\"获取临时密码\"></a>获取临时密码</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">grep <span class=\"string\">\"A temporary password\"</span> /var/<span class=\"built_in\">log</span>/mysqld.log  </span><br><span class=\"line\"><span class=\"comment\"># 修改root密码，必须包含大小写特殊字母</span></span><br><span class=\"line\">mysql -u root -p</span><br><span class=\"line\">alter user <span class=\"string\">'root'</span>@<span class=\"string\">'localhost'</span> identified by <span class=\"string\">'your_password'</span>;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"使用DBeaver客户端连接失败\"><a href=\"#使用DBeaver客户端连接失败\" class=\"headerlink\" title=\"使用DBeaver客户端连接失败\"></a>使用DBeaver客户端连接失败</h2><p><img src=\"71003550.png\" alt></p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Communications link failure</span><br><span class=\"line\">The last packet sent successfully to the server was <span class=\"number\">0</span> milliseconds ago. The driver has <span class=\"keyword\">not</span> received any packets from the server.</span><br><span class=\"line\">  Connection refused (Connection refused)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h2><h3 id=\"远程测试端口是否开启\"><a href=\"#远程测试端口是否开启\" class=\"headerlink\" title=\"远程测试端口是否开启\"></a>远程测试端口是否开启</h3><p><img src=\"71918674.png\" alt></p>\n<h3 id=\"服务器本机查看端口是否开启\"><a href=\"#服务器本机查看端口是否开启\" class=\"headerlink\" title=\"服务器本机查看端口是否开启\"></a>服务器本机查看端口是否开启</h3><p><img src=\"71982775.png\" alt><br><img src=\"72127872.png\" alt><br>原因：防火墙中端口没有开启</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@vultr ~]<span class=\"comment\"># firewall-cmd --zone=public --list-ports</span></span><br><span class=\"line\">[root@vultr ~]<span class=\"comment\"># firewall-cmd --zone=public --list-ports | grep 3306</span></span><br><span class=\"line\">[root@vultr ~]<span class=\"comment\"># firewall-cmd --zone=public --add-port=3306/tcp --permanent</span></span><br><span class=\"line\">success</span><br><span class=\"line\">[root@vultr ~]<span class=\"comment\"># firewall-cmd --zone=public --add-port=3306/udp --permanent</span></span><br><span class=\"line\">success</span><br><span class=\"line\">[root@vultr ~]<span class=\"comment\"># firewall-cmd --zone=public --list-ports</span></span><br><span class=\"line\">[root@vultr ~]<span class=\"comment\"># firewall-cmd --reload</span></span><br><span class=\"line\">success</span><br><span class=\"line\">[root@vultr ~]<span class=\"comment\"># firewall-cmd --zone=public --list-ports</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"72326504.png\" alt></p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">null, message from server: \"Host '<span class=\"number\">61</span>.<span class=\"number\">148</span>.<span class=\"number\">199</span>.<span class=\"number\">222</span>' is <span class=\"keyword\">not</span> allowed to connect to this MySQL server\"</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"服务器本地可以登录\"><a href=\"#服务器本地可以登录\" class=\"headerlink\" title=\"服务器本地可以登录\"></a>服务器本地可以登录</h2><p><img src=\"35968830.png\" alt></p>\n<h2 id=\"客户端无法登录，Public-Key-Retrieval-is-not-allowed\"><a href=\"#客户端无法登录，Public-Key-Retrieval-is-not-allowed\" class=\"headerlink\" title=\"客户端无法登录，Public Key Retrieval is not allowed\"></a>客户端无法登录，Public Key Retrieval is not allowed</h2><p><img src=\"36006075.png\" alt><br>修改DBeaver中驱动属性，allowPublicKeyRetrieval属性值改为true<br><img src=\"36115949.png\" alt></p>\n<h2 id=\"连接成功\"><a href=\"#连接成功\" class=\"headerlink\" title=\"连接成功\"></a>连接成功</h2><p><img src=\"36201778.png\" alt></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"启动失败\"><a href=\"#启动失败\" class=\"headerlink\" title=\"启动失败\"></a>启动失败</h2><p><img src=\"75749952.png\" alt><br><img src=\"75771201.png\" alt></p>\n<h2 id=\"查看日志\"><a href=\"#查看日志\" class=\"headerlink\" title=\"查看日志\"></a>查看日志</h2><p><img src=\"75840236.png\" alt><br>原因：内存不足<br><img src=\"vultr_hardinfo.jpg\" alt><br><a href=\"https://blog.csdn.net/Mr_OOO/article/details/78653523\" target=\"_blank\" rel=\"noopener\">Solution</a><br><img src=\"76140575.png\" alt><br><img src=\"76232995.png\" alt></p>\n<h2 id=\"成功开启MySQL\"><a href=\"#成功开启MySQL\" class=\"headerlink\" title=\"成功开启MySQL\"></a>成功开启MySQL</h2><h2 id=\"获取临时密码\"><a href=\"#获取临时密码\" class=\"headerlink\" title=\"获取临时密码\"></a>获取临时密码</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">grep <span class=\"string\">\"A temporary password\"</span> /var/<span class=\"built_in\">log</span>/mysqld.log  </span><br><span class=\"line\"><span class=\"comment\"># 修改root密码，必须包含大小写特殊字母</span></span><br><span class=\"line\">mysql -u root -p</span><br><span class=\"line\">alter user <span class=\"string\">'root'</span>@<span class=\"string\">'localhost'</span> identified by <span class=\"string\">'your_password'</span>;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"使用DBeaver客户端连接失败\"><a href=\"#使用DBeaver客户端连接失败\" class=\"headerlink\" title=\"使用DBeaver客户端连接失败\"></a>使用DBeaver客户端连接失败</h2><p><img src=\"71003550.png\" alt></p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Communications link failure</span><br><span class=\"line\">The last packet sent successfully to the server was <span class=\"number\">0</span> milliseconds ago. The driver has <span class=\"keyword\">not</span> received any packets from the server.</span><br><span class=\"line\">  Connection refused (Connection refused)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h2><h3 id=\"远程测试端口是否开启\"><a href=\"#远程测试端口是否开启\" class=\"headerlink\" title=\"远程测试端口是否开启\"></a>远程测试端口是否开启</h3><p><img src=\"71918674.png\" alt></p>\n<h3 id=\"服务器本机查看端口是否开启\"><a href=\"#服务器本机查看端口是否开启\" class=\"headerlink\" title=\"服务器本机查看端口是否开启\"></a>服务器本机查看端口是否开启</h3><p><img src=\"71982775.png\" alt><br><img src=\"72127872.png\" alt><br>原因：防火墙中端口没有开启</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@vultr ~]<span class=\"comment\"># firewall-cmd --zone=public --list-ports</span></span><br><span class=\"line\">[root@vultr ~]<span class=\"comment\"># firewall-cmd --zone=public --list-ports | grep 3306</span></span><br><span class=\"line\">[root@vultr ~]<span class=\"comment\"># firewall-cmd --zone=public --add-port=3306/tcp --permanent</span></span><br><span class=\"line\">success</span><br><span class=\"line\">[root@vultr ~]<span class=\"comment\"># firewall-cmd --zone=public --add-port=3306/udp --permanent</span></span><br><span class=\"line\">success</span><br><span class=\"line\">[root@vultr ~]<span class=\"comment\"># firewall-cmd --zone=public --list-ports</span></span><br><span class=\"line\">[root@vultr ~]<span class=\"comment\"># firewall-cmd --reload</span></span><br><span class=\"line\">success</span><br><span class=\"line\">[root@vultr ~]<span class=\"comment\"># firewall-cmd --zone=public --list-ports</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"72326504.png\" alt></p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">null, message from server: \"Host '<span class=\"number\">61</span>.<span class=\"number\">148</span>.<span class=\"number\">199</span>.<span class=\"number\">222</span>' is <span class=\"keyword\">not</span> allowed to connect to this MySQL server\"</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"服务器本地可以登录\"><a href=\"#服务器本地可以登录\" class=\"headerlink\" title=\"服务器本地可以登录\"></a>服务器本地可以登录</h2><p><img src=\"35968830.png\" alt></p>\n<h2 id=\"客户端无法登录，Public-Key-Retrieval-is-not-allowed\"><a href=\"#客户端无法登录，Public-Key-Retrieval-is-not-allowed\" class=\"headerlink\" title=\"客户端无法登录，Public Key Retrieval is not allowed\"></a>客户端无法登录，Public Key Retrieval is not allowed</h2><p><img src=\"36006075.png\" alt><br>修改DBeaver中驱动属性，allowPublicKeyRetrieval属性值改为true<br><img src=\"36115949.png\" alt></p>\n<h2 id=\"连接成功\"><a href=\"#连接成功\" class=\"headerlink\" title=\"连接成功\"></a>连接成功</h2><p><img src=\"36201778.png\" alt></p>\n"},{"title":"FashionAI Data Preprocessing","date":"2018-07-25T08:48:06.000Z","_content":"\n# FashionAI全球挑战赛数据预处理\n\n[活动官网1](http://fashionai.alibaba.com/)\n[活动官网2](https://tianchi.aliyun.com/markets/tianchi/FashionAI)\n[比赛官网](https://tianchi.aliyun.com/competition/introduction.htm?spm=5176.100066.0.0.13e433afjaR6SO&raceId=231649)\n\n将10110张已经标注好的图片复制到对应文件夹中，方便后续的训练。\ncsv中对应数据如下：\nImages/skirt_length_labels/73131f1c931056ee23ed8bf2a7910344.jpg\tskirt_length_labels\tnnnynn\nImages/skirt_length_labels/969c50368b971adb5196f6c1f5f0b67c.jpg\tskirt_length_labels\tnynnnn\n\nskirt_length一共有六种长度，对应六个文件夹。读取csv中某个图片对应的长度，将该图片复制到相应的文件中。暂时忽略模糊边界的情况。\n\n```python\nimport os\nimport csv\nimport shutil\n\ndef copy_files(file_name, y_index):\n    # print(file_name)\n    # print(y_index)\n    path = \"D:\\\\tianchi\\\\python\\\\warm_up_train_20180201\\\\web\\\\Images\\\\skirt_length_labels\"\n    os.chdir(path)\n    cwd = os.getcwd()\n    # print(cwd)\n    files = os.listdir()\n    # print(files)\n\n    dir0 = \"D:\\\\tianchi\\\\python\\\\warm_up_train_20180201\\\\web\\\\classification\\\\None\\\\\" + file_name\n    dir1 = \"D:\\\\tianchi\\\\python\\\\warm_up_train_20180201\\\\web\\\\classification\\\\SkirtLength0\\\\\" + file_name\n    dir2 = \"D:\\\\tianchi\\\\python\\\\warm_up_train_20180201\\\\web\\\\classification\\\\SkirtLength1\\\\\" + file_name\n    dir3 = \"D:\\\\tianchi\\\\python\\\\warm_up_train_20180201\\\\web\\\\classification\\\\SkirtLength2\\\\\" + file_name\n    dir4 = \"D:\\\\tianchi\\\\python\\\\warm_up_train_20180201\\\\web\\\\classification\\\\SkirtLength3\\\\\" + file_name\n    dir5 = \"D:\\\\tianchi\\\\python\\\\warm_up_train_20180201\\\\web\\\\classification\\\\SkirtLength4\\\\\" + file_name\n\n    if os.path.isfile(file_name):\n        if y_index == 0:\n            shutil.copyfile(file_name, dir0)\n        elif y_index == 1:\n            shutil.copyfile(file_name, dir1)\n        elif y_index == 2:\n            shutil.copyfile(file_name, dir2)\n        elif y_index == 3:\n            shutil.copyfile(file_name, dir3)\n        elif y_index == 4:\n            shutil.copyfile(file_name, dir4)\n        elif y_index == 5:\n            shutil.copyfile(file_name, dir5)\n\n        # shutil.copyfile(file_name, \"../../classification/\")\n    else:\n        print(\"The file is not found\")\n    return\n\ndef classify():\n    # cwd = os.getcwd()\n    # print(cwd)\n\n    os.chdir(\"D:\\\\tianchi\\\\python\\\\warm_up_train_20180201\\\\web\\\\Annotations\")\n    # path = os.getcwd()\n    # print(path)\n\n    # files = os.listdir()\n    # print(files)\n    csv_reader = csv.reader(open('skirt_length_labels.csv', encoding='utf-8'))\n    for row in csv_reader:\n        # print(row[0])\n        # get the file name\n        file_name = row[0].split('/')[2]\n        # print(file_name)\n\n        # get the index of yes\n        # print(row[2])\n        y_index = row[2].index('y')\n        # print(y_index)\n\n        # copy files\n        copy_files(file_name, y_index)\n    return\n\nclassify()\nprint(\"hello\")\n```\n\n感谢[大佬](http://www.cjhang.com/)提示，代码可以改进一下：\n1、15行路径可用变量简化一下：\n```python\nroot = \"D:\\\\tianchi\\\\python\\\\warm_up_train_20180201\\\\web\\\\classification\\\\\"\n```\n2、65行return语句多余，python默认会return\n","source":"_posts/fashion-ai.md","raw":"---\ntitle: FashionAI Data Preprocessing\ndate: 2018-07-25 16:48:06\ncategories:\ntags:\n---\n\n# FashionAI全球挑战赛数据预处理\n\n[活动官网1](http://fashionai.alibaba.com/)\n[活动官网2](https://tianchi.aliyun.com/markets/tianchi/FashionAI)\n[比赛官网](https://tianchi.aliyun.com/competition/introduction.htm?spm=5176.100066.0.0.13e433afjaR6SO&raceId=231649)\n\n将10110张已经标注好的图片复制到对应文件夹中，方便后续的训练。\ncsv中对应数据如下：\nImages/skirt_length_labels/73131f1c931056ee23ed8bf2a7910344.jpg\tskirt_length_labels\tnnnynn\nImages/skirt_length_labels/969c50368b971adb5196f6c1f5f0b67c.jpg\tskirt_length_labels\tnynnnn\n\nskirt_length一共有六种长度，对应六个文件夹。读取csv中某个图片对应的长度，将该图片复制到相应的文件中。暂时忽略模糊边界的情况。\n\n```python\nimport os\nimport csv\nimport shutil\n\ndef copy_files(file_name, y_index):\n    # print(file_name)\n    # print(y_index)\n    path = \"D:\\\\tianchi\\\\python\\\\warm_up_train_20180201\\\\web\\\\Images\\\\skirt_length_labels\"\n    os.chdir(path)\n    cwd = os.getcwd()\n    # print(cwd)\n    files = os.listdir()\n    # print(files)\n\n    dir0 = \"D:\\\\tianchi\\\\python\\\\warm_up_train_20180201\\\\web\\\\classification\\\\None\\\\\" + file_name\n    dir1 = \"D:\\\\tianchi\\\\python\\\\warm_up_train_20180201\\\\web\\\\classification\\\\SkirtLength0\\\\\" + file_name\n    dir2 = \"D:\\\\tianchi\\\\python\\\\warm_up_train_20180201\\\\web\\\\classification\\\\SkirtLength1\\\\\" + file_name\n    dir3 = \"D:\\\\tianchi\\\\python\\\\warm_up_train_20180201\\\\web\\\\classification\\\\SkirtLength2\\\\\" + file_name\n    dir4 = \"D:\\\\tianchi\\\\python\\\\warm_up_train_20180201\\\\web\\\\classification\\\\SkirtLength3\\\\\" + file_name\n    dir5 = \"D:\\\\tianchi\\\\python\\\\warm_up_train_20180201\\\\web\\\\classification\\\\SkirtLength4\\\\\" + file_name\n\n    if os.path.isfile(file_name):\n        if y_index == 0:\n            shutil.copyfile(file_name, dir0)\n        elif y_index == 1:\n            shutil.copyfile(file_name, dir1)\n        elif y_index == 2:\n            shutil.copyfile(file_name, dir2)\n        elif y_index == 3:\n            shutil.copyfile(file_name, dir3)\n        elif y_index == 4:\n            shutil.copyfile(file_name, dir4)\n        elif y_index == 5:\n            shutil.copyfile(file_name, dir5)\n\n        # shutil.copyfile(file_name, \"../../classification/\")\n    else:\n        print(\"The file is not found\")\n    return\n\ndef classify():\n    # cwd = os.getcwd()\n    # print(cwd)\n\n    os.chdir(\"D:\\\\tianchi\\\\python\\\\warm_up_train_20180201\\\\web\\\\Annotations\")\n    # path = os.getcwd()\n    # print(path)\n\n    # files = os.listdir()\n    # print(files)\n    csv_reader = csv.reader(open('skirt_length_labels.csv', encoding='utf-8'))\n    for row in csv_reader:\n        # print(row[0])\n        # get the file name\n        file_name = row[0].split('/')[2]\n        # print(file_name)\n\n        # get the index of yes\n        # print(row[2])\n        y_index = row[2].index('y')\n        # print(y_index)\n\n        # copy files\n        copy_files(file_name, y_index)\n    return\n\nclassify()\nprint(\"hello\")\n```\n\n感谢[大佬](http://www.cjhang.com/)提示，代码可以改进一下：\n1、15行路径可用变量简化一下：\n```python\nroot = \"D:\\\\tianchi\\\\python\\\\warm_up_train_20180201\\\\web\\\\classification\\\\\"\n```\n2、65行return语句多余，python默认会return\n","slug":"fashion-ai","published":1,"updated":"2019-01-13T10:03:48.526Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjy5kaquo000z5ge8mk38xdip","content":"<h1 id=\"FashionAI全球挑战赛数据预处理\"><a href=\"#FashionAI全球挑战赛数据预处理\" class=\"headerlink\" title=\"FashionAI全球挑战赛数据预处理\"></a>FashionAI全球挑战赛数据预处理</h1><p><a href=\"http://fashionai.alibaba.com/\" target=\"_blank\" rel=\"noopener\">活动官网1</a><br><a href=\"https://tianchi.aliyun.com/markets/tianchi/FashionAI\" target=\"_blank\" rel=\"noopener\">活动官网2</a><br><a href=\"https://tianchi.aliyun.com/competition/introduction.htm?spm=5176.100066.0.0.13e433afjaR6SO&raceId=231649\" target=\"_blank\" rel=\"noopener\">比赛官网</a></p>\n<p>将10110张已经标注好的图片复制到对应文件夹中，方便后续的训练。<br>csv中对应数据如下：<br>Images/skirt_length_labels/73131f1c931056ee23ed8bf2a7910344.jpg    skirt_length_labels    nnnynn<br>Images/skirt_length_labels/969c50368b971adb5196f6c1f5f0b67c.jpg    skirt_length_labels    nynnnn</p>\n<p>skirt_length一共有六种长度，对应六个文件夹。读取csv中某个图片对应的长度，将该图片复制到相应的文件中。暂时忽略模糊边界的情况。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">import</span> csv</span><br><span class=\"line\"><span class=\"keyword\">import</span> shutil</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">copy_files</span><span class=\"params\">(file_name, y_index)</span>:</span></span><br><span class=\"line\">    <span class=\"comment\"># print(file_name)</span></span><br><span class=\"line\">    <span class=\"comment\"># print(y_index)</span></span><br><span class=\"line\">    path = <span class=\"string\">\"D:\\\\tianchi\\\\python\\\\warm_up_train_20180201\\\\web\\\\Images\\\\skirt_length_labels\"</span></span><br><span class=\"line\">    os.chdir(path)</span><br><span class=\"line\">    cwd = os.getcwd()</span><br><span class=\"line\">    <span class=\"comment\"># print(cwd)</span></span><br><span class=\"line\">    files = os.listdir()</span><br><span class=\"line\">    <span class=\"comment\"># print(files)</span></span><br><span class=\"line\"></span><br><span class=\"line\">    dir0 = <span class=\"string\">\"D:\\\\tianchi\\\\python\\\\warm_up_train_20180201\\\\web\\\\classification\\\\None\\\\\"</span> + file_name</span><br><span class=\"line\">    dir1 = <span class=\"string\">\"D:\\\\tianchi\\\\python\\\\warm_up_train_20180201\\\\web\\\\classification\\\\SkirtLength0\\\\\"</span> + file_name</span><br><span class=\"line\">    dir2 = <span class=\"string\">\"D:\\\\tianchi\\\\python\\\\warm_up_train_20180201\\\\web\\\\classification\\\\SkirtLength1\\\\\"</span> + file_name</span><br><span class=\"line\">    dir3 = <span class=\"string\">\"D:\\\\tianchi\\\\python\\\\warm_up_train_20180201\\\\web\\\\classification\\\\SkirtLength2\\\\\"</span> + file_name</span><br><span class=\"line\">    dir4 = <span class=\"string\">\"D:\\\\tianchi\\\\python\\\\warm_up_train_20180201\\\\web\\\\classification\\\\SkirtLength3\\\\\"</span> + file_name</span><br><span class=\"line\">    dir5 = <span class=\"string\">\"D:\\\\tianchi\\\\python\\\\warm_up_train_20180201\\\\web\\\\classification\\\\SkirtLength4\\\\\"</span> + file_name</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> os.path.isfile(file_name):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> y_index == <span class=\"number\">0</span>:</span><br><span class=\"line\">            shutil.copyfile(file_name, dir0)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> y_index == <span class=\"number\">1</span>:</span><br><span class=\"line\">            shutil.copyfile(file_name, dir1)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> y_index == <span class=\"number\">2</span>:</span><br><span class=\"line\">            shutil.copyfile(file_name, dir2)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> y_index == <span class=\"number\">3</span>:</span><br><span class=\"line\">            shutil.copyfile(file_name, dir3)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> y_index == <span class=\"number\">4</span>:</span><br><span class=\"line\">            shutil.copyfile(file_name, dir4)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> y_index == <span class=\"number\">5</span>:</span><br><span class=\"line\">            shutil.copyfile(file_name, dir5)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># shutil.copyfile(file_name, \"../../classification/\")</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        print(<span class=\"string\">\"The file is not found\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">classify</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    <span class=\"comment\"># cwd = os.getcwd()</span></span><br><span class=\"line\">    <span class=\"comment\"># print(cwd)</span></span><br><span class=\"line\"></span><br><span class=\"line\">    os.chdir(<span class=\"string\">\"D:\\\\tianchi\\\\python\\\\warm_up_train_20180201\\\\web\\\\Annotations\"</span>)</span><br><span class=\"line\">    <span class=\"comment\"># path = os.getcwd()</span></span><br><span class=\"line\">    <span class=\"comment\"># print(path)</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># files = os.listdir()</span></span><br><span class=\"line\">    <span class=\"comment\"># print(files)</span></span><br><span class=\"line\">    csv_reader = csv.reader(open(<span class=\"string\">'skirt_length_labels.csv'</span>, encoding=<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    <span class=\"keyword\">for</span> row <span class=\"keyword\">in</span> csv_reader:</span><br><span class=\"line\">        <span class=\"comment\"># print(row[0])</span></span><br><span class=\"line\">        <span class=\"comment\"># get the file name</span></span><br><span class=\"line\">        file_name = row[<span class=\"number\">0</span>].split(<span class=\"string\">'/'</span>)[<span class=\"number\">2</span>]</span><br><span class=\"line\">        <span class=\"comment\"># print(file_name)</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># get the index of yes</span></span><br><span class=\"line\">        <span class=\"comment\"># print(row[2])</span></span><br><span class=\"line\">        y_index = row[<span class=\"number\">2</span>].index(<span class=\"string\">'y'</span>)</span><br><span class=\"line\">        <span class=\"comment\"># print(y_index)</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># copy files</span></span><br><span class=\"line\">        copy_files(file_name, y_index)</span><br><span class=\"line\">    <span class=\"keyword\">return</span></span><br><span class=\"line\"></span><br><span class=\"line\">classify()</span><br><span class=\"line\">print(<span class=\"string\">\"hello\"</span>)</span><br></pre></td></tr></table></figure>\n\n<p>感谢<a href=\"http://www.cjhang.com/\" target=\"_blank\" rel=\"noopener\">大佬</a>提示，代码可以改进一下：<br>1、15行路径可用变量简化一下：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root = <span class=\"string\">\"D:\\\\tianchi\\\\python\\\\warm_up_train_20180201\\\\web\\\\classification\\\\\"</span></span><br></pre></td></tr></table></figure>\n\n<p>2、65行return语句多余，python默认会return</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"FashionAI全球挑战赛数据预处理\"><a href=\"#FashionAI全球挑战赛数据预处理\" class=\"headerlink\" title=\"FashionAI全球挑战赛数据预处理\"></a>FashionAI全球挑战赛数据预处理</h1><p><a href=\"http://fashionai.alibaba.com/\" target=\"_blank\" rel=\"noopener\">活动官网1</a><br><a href=\"https://tianchi.aliyun.com/markets/tianchi/FashionAI\" target=\"_blank\" rel=\"noopener\">活动官网2</a><br><a href=\"https://tianchi.aliyun.com/competition/introduction.htm?spm=5176.100066.0.0.13e433afjaR6SO&raceId=231649\" target=\"_blank\" rel=\"noopener\">比赛官网</a></p>\n<p>将10110张已经标注好的图片复制到对应文件夹中，方便后续的训练。<br>csv中对应数据如下：<br>Images/skirt_length_labels/73131f1c931056ee23ed8bf2a7910344.jpg    skirt_length_labels    nnnynn<br>Images/skirt_length_labels/969c50368b971adb5196f6c1f5f0b67c.jpg    skirt_length_labels    nynnnn</p>\n<p>skirt_length一共有六种长度，对应六个文件夹。读取csv中某个图片对应的长度，将该图片复制到相应的文件中。暂时忽略模糊边界的情况。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">import</span> csv</span><br><span class=\"line\"><span class=\"keyword\">import</span> shutil</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">copy_files</span><span class=\"params\">(file_name, y_index)</span>:</span></span><br><span class=\"line\">    <span class=\"comment\"># print(file_name)</span></span><br><span class=\"line\">    <span class=\"comment\"># print(y_index)</span></span><br><span class=\"line\">    path = <span class=\"string\">\"D:\\\\tianchi\\\\python\\\\warm_up_train_20180201\\\\web\\\\Images\\\\skirt_length_labels\"</span></span><br><span class=\"line\">    os.chdir(path)</span><br><span class=\"line\">    cwd = os.getcwd()</span><br><span class=\"line\">    <span class=\"comment\"># print(cwd)</span></span><br><span class=\"line\">    files = os.listdir()</span><br><span class=\"line\">    <span class=\"comment\"># print(files)</span></span><br><span class=\"line\"></span><br><span class=\"line\">    dir0 = <span class=\"string\">\"D:\\\\tianchi\\\\python\\\\warm_up_train_20180201\\\\web\\\\classification\\\\None\\\\\"</span> + file_name</span><br><span class=\"line\">    dir1 = <span class=\"string\">\"D:\\\\tianchi\\\\python\\\\warm_up_train_20180201\\\\web\\\\classification\\\\SkirtLength0\\\\\"</span> + file_name</span><br><span class=\"line\">    dir2 = <span class=\"string\">\"D:\\\\tianchi\\\\python\\\\warm_up_train_20180201\\\\web\\\\classification\\\\SkirtLength1\\\\\"</span> + file_name</span><br><span class=\"line\">    dir3 = <span class=\"string\">\"D:\\\\tianchi\\\\python\\\\warm_up_train_20180201\\\\web\\\\classification\\\\SkirtLength2\\\\\"</span> + file_name</span><br><span class=\"line\">    dir4 = <span class=\"string\">\"D:\\\\tianchi\\\\python\\\\warm_up_train_20180201\\\\web\\\\classification\\\\SkirtLength3\\\\\"</span> + file_name</span><br><span class=\"line\">    dir5 = <span class=\"string\">\"D:\\\\tianchi\\\\python\\\\warm_up_train_20180201\\\\web\\\\classification\\\\SkirtLength4\\\\\"</span> + file_name</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> os.path.isfile(file_name):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> y_index == <span class=\"number\">0</span>:</span><br><span class=\"line\">            shutil.copyfile(file_name, dir0)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> y_index == <span class=\"number\">1</span>:</span><br><span class=\"line\">            shutil.copyfile(file_name, dir1)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> y_index == <span class=\"number\">2</span>:</span><br><span class=\"line\">            shutil.copyfile(file_name, dir2)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> y_index == <span class=\"number\">3</span>:</span><br><span class=\"line\">            shutil.copyfile(file_name, dir3)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> y_index == <span class=\"number\">4</span>:</span><br><span class=\"line\">            shutil.copyfile(file_name, dir4)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> y_index == <span class=\"number\">5</span>:</span><br><span class=\"line\">            shutil.copyfile(file_name, dir5)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># shutil.copyfile(file_name, \"../../classification/\")</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        print(<span class=\"string\">\"The file is not found\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">classify</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    <span class=\"comment\"># cwd = os.getcwd()</span></span><br><span class=\"line\">    <span class=\"comment\"># print(cwd)</span></span><br><span class=\"line\"></span><br><span class=\"line\">    os.chdir(<span class=\"string\">\"D:\\\\tianchi\\\\python\\\\warm_up_train_20180201\\\\web\\\\Annotations\"</span>)</span><br><span class=\"line\">    <span class=\"comment\"># path = os.getcwd()</span></span><br><span class=\"line\">    <span class=\"comment\"># print(path)</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># files = os.listdir()</span></span><br><span class=\"line\">    <span class=\"comment\"># print(files)</span></span><br><span class=\"line\">    csv_reader = csv.reader(open(<span class=\"string\">'skirt_length_labels.csv'</span>, encoding=<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    <span class=\"keyword\">for</span> row <span class=\"keyword\">in</span> csv_reader:</span><br><span class=\"line\">        <span class=\"comment\"># print(row[0])</span></span><br><span class=\"line\">        <span class=\"comment\"># get the file name</span></span><br><span class=\"line\">        file_name = row[<span class=\"number\">0</span>].split(<span class=\"string\">'/'</span>)[<span class=\"number\">2</span>]</span><br><span class=\"line\">        <span class=\"comment\"># print(file_name)</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># get the index of yes</span></span><br><span class=\"line\">        <span class=\"comment\"># print(row[2])</span></span><br><span class=\"line\">        y_index = row[<span class=\"number\">2</span>].index(<span class=\"string\">'y'</span>)</span><br><span class=\"line\">        <span class=\"comment\"># print(y_index)</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># copy files</span></span><br><span class=\"line\">        copy_files(file_name, y_index)</span><br><span class=\"line\">    <span class=\"keyword\">return</span></span><br><span class=\"line\"></span><br><span class=\"line\">classify()</span><br><span class=\"line\">print(<span class=\"string\">\"hello\"</span>)</span><br></pre></td></tr></table></figure>\n\n<p>感谢<a href=\"http://www.cjhang.com/\" target=\"_blank\" rel=\"noopener\">大佬</a>提示，代码可以改进一下：<br>1、15行路径可用变量简化一下：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root = <span class=\"string\">\"D:\\\\tianchi\\\\python\\\\warm_up_train_20180201\\\\web\\\\classification\\\\\"</span></span><br></pre></td></tr></table></figure>\n\n<p>2、65行return语句多余，python默认会return</p>\n"},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\ncategories: others\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"date":"2019-01-13T10:03:48.526Z","updated":"2019-01-13T10:03:48.526Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjy5kaqup00125ge8ls00me6y","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n"},{"title":"if-else in Python","date":"2019-04-24T12:05:53.000Z","_content":"# 求两个数的较大值\n```Python\n# 1.常规\nif a > b:\n    c = a\nelse:\n    c = b\n# 2.表达式\nc = a if a > b else b\n# 3.列表\nc = [b, a][a > b]\n# 4.源自某个黑客\nc = (a > b and [a] or [b])[0]\n# 改编版\nc = (a > b and a or b)\n# 利用and的特点，若and前位置为假则直接判断为假。\n# 利用or的特点，若or前位置为真则判断为真。\n```\n","source":"_posts/if-else-in-Python.md","raw":"---\ntitle: if-else in Python\ndate: 2019-04-24 20:05:53\ncategories:\ntags:\n---\n# 求两个数的较大值\n```Python\n# 1.常规\nif a > b:\n    c = a\nelse:\n    c = b\n# 2.表达式\nc = a if a > b else b\n# 3.列表\nc = [b, a][a > b]\n# 4.源自某个黑客\nc = (a > b and [a] or [b])[0]\n# 改编版\nc = (a > b and a or b)\n# 利用and的特点，若and前位置为假则直接判断为假。\n# 利用or的特点，若or前位置为真则判断为真。\n```\n","slug":"if-else-in-Python","published":1,"updated":"2019-04-24T12:07:52.804Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjy5kaquq00145ge8143jhrzj","content":"<h1 id=\"求两个数的较大值\"><a href=\"#求两个数的较大值\" class=\"headerlink\" title=\"求两个数的较大值\"></a>求两个数的较大值</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1.常规</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> a &gt; b:</span><br><span class=\"line\">    c = a</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    c = b</span><br><span class=\"line\"><span class=\"comment\"># 2.表达式</span></span><br><span class=\"line\">c = a <span class=\"keyword\">if</span> a &gt; b <span class=\"keyword\">else</span> b</span><br><span class=\"line\"><span class=\"comment\"># 3.列表</span></span><br><span class=\"line\">c = [b, a][a &gt; b]</span><br><span class=\"line\"><span class=\"comment\"># 4.源自某个黑客</span></span><br><span class=\"line\">c = (a &gt; b <span class=\"keyword\">and</span> [a] <span class=\"keyword\">or</span> [b])[<span class=\"number\">0</span>]</span><br><span class=\"line\"><span class=\"comment\"># 改编版</span></span><br><span class=\"line\">c = (a &gt; b <span class=\"keyword\">and</span> a <span class=\"keyword\">or</span> b)</span><br><span class=\"line\"><span class=\"comment\"># 利用and的特点，若and前位置为假则直接判断为假。</span></span><br><span class=\"line\"><span class=\"comment\"># 利用or的特点，若or前位置为真则判断为真。</span></span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"求两个数的较大值\"><a href=\"#求两个数的较大值\" class=\"headerlink\" title=\"求两个数的较大值\"></a>求两个数的较大值</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1.常规</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> a &gt; b:</span><br><span class=\"line\">    c = a</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    c = b</span><br><span class=\"line\"><span class=\"comment\"># 2.表达式</span></span><br><span class=\"line\">c = a <span class=\"keyword\">if</span> a &gt; b <span class=\"keyword\">else</span> b</span><br><span class=\"line\"><span class=\"comment\"># 3.列表</span></span><br><span class=\"line\">c = [b, a][a &gt; b]</span><br><span class=\"line\"><span class=\"comment\"># 4.源自某个黑客</span></span><br><span class=\"line\">c = (a &gt; b <span class=\"keyword\">and</span> [a] <span class=\"keyword\">or</span> [b])[<span class=\"number\">0</span>]</span><br><span class=\"line\"><span class=\"comment\"># 改编版</span></span><br><span class=\"line\">c = (a &gt; b <span class=\"keyword\">and</span> a <span class=\"keyword\">or</span> b)</span><br><span class=\"line\"><span class=\"comment\"># 利用and的特点，若and前位置为假则直接判断为假。</span></span><br><span class=\"line\"><span class=\"comment\"># 利用or的特点，若or前位置为真则判断为真。</span></span><br></pre></td></tr></table></figure>\n\n"},{"title":"Linux Tips","date":"2018-07-23T16:00:00.000Z","_content":"\n# 替换某文件夹下所有文件中的字符串  \n\n```bash\ngrep \"John Doe\" -rl  ./ | xargs sed -i \"s/John Doe/lixiang/g\"\n```\n\n\n\n\n\n","source":"_posts/linux_tips.md","raw":"---\ntitle: Linux Tips\ndate: 2018-07-24\ncategories: linux\ntags:\n---\n\n# 替换某文件夹下所有文件中的字符串  \n\n```bash\ngrep \"John Doe\" -rl  ./ | xargs sed -i \"s/John Doe/lixiang/g\"\n```\n\n\n\n\n\n","slug":"linux_tips","published":1,"updated":"2019-01-13T10:03:48.526Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjy5kaqur00175ge856psu5d4","content":"<h1 id=\"替换某文件夹下所有文件中的字符串\"><a href=\"#替换某文件夹下所有文件中的字符串\" class=\"headerlink\" title=\"替换某文件夹下所有文件中的字符串\"></a>替换某文件夹下所有文件中的字符串</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">grep <span class=\"string\">\"John Doe\"</span> -rl  ./ | xargs sed -i <span class=\"string\">\"s/John Doe/lixiang/g\"</span></span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"替换某文件夹下所有文件中的字符串\"><a href=\"#替换某文件夹下所有文件中的字符串\" class=\"headerlink\" title=\"替换某文件夹下所有文件中的字符串\"></a>替换某文件夹下所有文件中的字符串</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">grep <span class=\"string\">\"John Doe\"</span> -rl  ./ | xargs sed -i <span class=\"string\">\"s/John Doe/lixiang/g\"</span></span><br></pre></td></tr></table></figure>\n\n"},{"title":"CentOS install lrzsz","date":"2018-10-29T07:21:25.000Z","_content":"\nlrzsz 官网入口：http://freecode.com/projects/lrzsz/\n\n```bash\nyum -y install lrzsz\n```\n\nupload files from Windows to linux\n```bash\nrz\n```\n\ndownload files from linux to Windows\n```bash\nsz\n```\n","source":"_posts/lrzsz.md","raw":"---\ntitle: CentOS install lrzsz\ndate: 2018-10-29 15:21:25\ncategories: linux\ntags:\n---\n\nlrzsz 官网入口：http://freecode.com/projects/lrzsz/\n\n```bash\nyum -y install lrzsz\n```\n\nupload files from Windows to linux\n```bash\nrz\n```\n\ndownload files from linux to Windows\n```bash\nsz\n```\n","slug":"lrzsz","published":1,"updated":"2019-01-13T10:03:48.526Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjy5kaqus00195ge8tv8wrzxo","content":"<p>lrzsz 官网入口：<a href=\"http://freecode.com/projects/lrzsz/\" target=\"_blank\" rel=\"noopener\">http://freecode.com/projects/lrzsz/</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum -y install lrzsz</span><br></pre></td></tr></table></figure>\n\n<p>upload files from Windows to linux</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rz</span><br></pre></td></tr></table></figure>\n\n<p>download files from linux to Windows</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sz</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<p>lrzsz 官网入口：<a href=\"http://freecode.com/projects/lrzsz/\" target=\"_blank\" rel=\"noopener\">http://freecode.com/projects/lrzsz/</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum -y install lrzsz</span><br></pre></td></tr></table></figure>\n\n<p>upload files from Windows to linux</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rz</span><br></pre></td></tr></table></figure>\n\n<p>download files from linux to Windows</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sz</span><br></pre></td></tr></table></figure>\n\n"},{"title":"Method Chaining or Cascading in Python","date":"2019-01-23T12:08:44.000Z","_content":"```python\nclass Person:\n    def name(self, name):\n        self.name = name\n        return self\n\n    def age(self, age):\n        self.age = age\n        return self\n\n    def show(self):\n        print \"My name is\", self.name, \"and I am\", self.age, \"years old.\"\n\n\nif __name__ == \"__main__\":\n    p = Person()\n    p.name(\"Li Xiang\").age(18).show()\n```\n\n```cmd\nMy name is Li Xiang and I am 18 years old.\n```\n","source":"_posts/method-chaining-or-cascading-in-python.md","raw":"---\ntitle: Method Chaining or Cascading in Python\ndate: 2019-01-23 20:08:44\ncategories:\ntags:\n---\n```python\nclass Person:\n    def name(self, name):\n        self.name = name\n        return self\n\n    def age(self, age):\n        self.age = age\n        return self\n\n    def show(self):\n        print \"My name is\", self.name, \"and I am\", self.age, \"years old.\"\n\n\nif __name__ == \"__main__\":\n    p = Person()\n    p.name(\"Li Xiang\").age(18).show()\n```\n\n```cmd\nMy name is Li Xiang and I am 18 years old.\n```\n","slug":"method-chaining-or-cascading-in-python","published":1,"updated":"2019-01-23T12:10:12.008Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjy5kaqut001c5ge8dt3fntkc","content":"<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span>:</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">name</span><span class=\"params\">(self, name)</span>:</span></span><br><span class=\"line\">        self.name = name</span><br><span class=\"line\">        <span class=\"keyword\">return</span> self</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">age</span><span class=\"params\">(self, age)</span>:</span></span><br><span class=\"line\">        self.age = age</span><br><span class=\"line\">        <span class=\"keyword\">return</span> self</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">show</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">        <span class=\"keyword\">print</span> <span class=\"string\">\"My name is\"</span>, self.name, <span class=\"string\">\"and I am\"</span>, self.age, <span class=\"string\">\"years old.\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">\"__main__\"</span>:</span><br><span class=\"line\">    p = Person()</span><br><span class=\"line\">    p.name(<span class=\"string\">\"Li Xiang\"</span>).age(<span class=\"number\">18</span>).show()</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">My name is Li Xiang and I am <span class=\"number\">18</span> years old.</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span>:</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">name</span><span class=\"params\">(self, name)</span>:</span></span><br><span class=\"line\">        self.name = name</span><br><span class=\"line\">        <span class=\"keyword\">return</span> self</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">age</span><span class=\"params\">(self, age)</span>:</span></span><br><span class=\"line\">        self.age = age</span><br><span class=\"line\">        <span class=\"keyword\">return</span> self</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">show</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">        <span class=\"keyword\">print</span> <span class=\"string\">\"My name is\"</span>, self.name, <span class=\"string\">\"and I am\"</span>, self.age, <span class=\"string\">\"years old.\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">\"__main__\"</span>:</span><br><span class=\"line\">    p = Person()</span><br><span class=\"line\">    p.name(<span class=\"string\">\"Li Xiang\"</span>).age(<span class=\"number\">18</span>).show()</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">My name is Li Xiang and I am <span class=\"number\">18</span> years old.</span><br></pre></td></tr></table></figure>\n\n"},{"title":"Remove Special Substrings in a String","date":"2018-11-30T16:28:32.000Z","_content":"删除字符串中的“b”和“ac”，即保证删除后的结果中不出现“b”和“ac”。\n例如：acbac ==> \"\"；aaac ==> aa；ababac ==> aa；bbbbd ==> d。\n```python\n# Cloudin云英 面试题\n# remove \"b\" and \"ac\" in a string\n\n\ndef remove_special_strings(s):\n    i = 0\n    while i < len(s):\n        if s[i] == \"b\":\n            s = s[: i] + s[i+1:]\n            continue\n\n        if i >= 1 and s[i-1: i+1] == \"ac\":\n            s = s[: i-1] + s[i+1:]\n            i -= 1\n            continue\n\n        i += 1\n    return s\n\n\nif __name__ == \"__main__\":\n    s = \"qwert\"\n    print(s, \"==>\", remove_special_strings(s))\n    s = \"aacc\"\n    print(s, \"==>\", remove_special_strings(s))\n    s = \"aaaacccc\"\n    print(s, \"==>\", remove_special_strings(s))\n    s = \"acbac\"\n    print(s, \"==>\", remove_special_strings(s))\n    s = \"aaac\"\n    print(s, \"==>\", remove_special_strings(s))\n    s = \"ababc\"\n    print(s, \"==>\", remove_special_strings(s))\n```\n![](remove_substrings.png)\n```python\n# Cloudin云英 面试题\n# remove \"b\" and \"ac\" in a string\n# use stack\n\n\ndef remove_special_strings_stack(s):\n    stk = []\n    for i in s:\n        if i == \"b\":\n            continue\n        elif len(stk) >= 1 and i == \"c\" and stk[-1] == \"a\":\n            stk.pop(-1)\n            continue\n        else:\n            stk.append(i)\n\n    return \"\".join(stk)\n\n\nif __name__ == \"__main__\":\n    s = \"qwert\"\n    print(s, \"==>\", remove_special_strings_stack(s))\n    s = \"aacc\"\n    print(s, \"==>\", remove_special_strings_stack(s))\n    s = \"aaaacccc\"\n    print(s, \"==>\", remove_special_strings_stack(s))\n    s = \"acbac\"\n    print(s, \"==>\", remove_special_strings_stack(s))\n    s = \"aaac\"\n    print(s, \"==>\", remove_special_strings_stack(s))\n    s = \"ababc\"\n    print(s, \"==>\", remove_special_strings_stack(s))\n    s = \"accccc\"\n    print(s, \"==>\", remove_special_strings_stack(s))\n```\n","source":"_posts/remove-special-substrings-in-a-string.md","raw":"---\ntitle: Remove Special Substrings in a String\ndate: 2018-12-01 00:28:32\ncategories:\ntags:\n---\n删除字符串中的“b”和“ac”，即保证删除后的结果中不出现“b”和“ac”。\n例如：acbac ==> \"\"；aaac ==> aa；ababac ==> aa；bbbbd ==> d。\n```python\n# Cloudin云英 面试题\n# remove \"b\" and \"ac\" in a string\n\n\ndef remove_special_strings(s):\n    i = 0\n    while i < len(s):\n        if s[i] == \"b\":\n            s = s[: i] + s[i+1:]\n            continue\n\n        if i >= 1 and s[i-1: i+1] == \"ac\":\n            s = s[: i-1] + s[i+1:]\n            i -= 1\n            continue\n\n        i += 1\n    return s\n\n\nif __name__ == \"__main__\":\n    s = \"qwert\"\n    print(s, \"==>\", remove_special_strings(s))\n    s = \"aacc\"\n    print(s, \"==>\", remove_special_strings(s))\n    s = \"aaaacccc\"\n    print(s, \"==>\", remove_special_strings(s))\n    s = \"acbac\"\n    print(s, \"==>\", remove_special_strings(s))\n    s = \"aaac\"\n    print(s, \"==>\", remove_special_strings(s))\n    s = \"ababc\"\n    print(s, \"==>\", remove_special_strings(s))\n```\n![](remove_substrings.png)\n```python\n# Cloudin云英 面试题\n# remove \"b\" and \"ac\" in a string\n# use stack\n\n\ndef remove_special_strings_stack(s):\n    stk = []\n    for i in s:\n        if i == \"b\":\n            continue\n        elif len(stk) >= 1 and i == \"c\" and stk[-1] == \"a\":\n            stk.pop(-1)\n            continue\n        else:\n            stk.append(i)\n\n    return \"\".join(stk)\n\n\nif __name__ == \"__main__\":\n    s = \"qwert\"\n    print(s, \"==>\", remove_special_strings_stack(s))\n    s = \"aacc\"\n    print(s, \"==>\", remove_special_strings_stack(s))\n    s = \"aaaacccc\"\n    print(s, \"==>\", remove_special_strings_stack(s))\n    s = \"acbac\"\n    print(s, \"==>\", remove_special_strings_stack(s))\n    s = \"aaac\"\n    print(s, \"==>\", remove_special_strings_stack(s))\n    s = \"ababc\"\n    print(s, \"==>\", remove_special_strings_stack(s))\n    s = \"accccc\"\n    print(s, \"==>\", remove_special_strings_stack(s))\n```\n","slug":"remove-special-substrings-in-a-string","published":1,"updated":"2019-01-13T10:03:48.526Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjy5kaquu001e5ge8wf5863qx","content":"<p>删除字符串中的“b”和“ac”，即保证删除后的结果中不出现“b”和“ac”。<br>例如：acbac ==&gt; “”；aaac ==&gt; aa；ababac ==&gt; aa；bbbbd ==&gt; d。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Cloudin云英 面试题</span></span><br><span class=\"line\"><span class=\"comment\"># remove \"b\" and \"ac\" in a string</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">remove_special_strings</span><span class=\"params\">(s)</span>:</span></span><br><span class=\"line\">    i = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> i &lt; len(s):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> s[i] == <span class=\"string\">\"b\"</span>:</span><br><span class=\"line\">            s = s[: i] + s[i+<span class=\"number\">1</span>:]</span><br><span class=\"line\">            <span class=\"keyword\">continue</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> i &gt;= <span class=\"number\">1</span> <span class=\"keyword\">and</span> s[i<span class=\"number\">-1</span>: i+<span class=\"number\">1</span>] == <span class=\"string\">\"ac\"</span>:</span><br><span class=\"line\">            s = s[: i<span class=\"number\">-1</span>] + s[i+<span class=\"number\">1</span>:]</span><br><span class=\"line\">            i -= <span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"keyword\">continue</span></span><br><span class=\"line\"></span><br><span class=\"line\">        i += <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> s</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">\"__main__\"</span>:</span><br><span class=\"line\">    s = <span class=\"string\">\"qwert\"</span></span><br><span class=\"line\">    print(s, <span class=\"string\">\"==&gt;\"</span>, remove_special_strings(s))</span><br><span class=\"line\">    s = <span class=\"string\">\"aacc\"</span></span><br><span class=\"line\">    print(s, <span class=\"string\">\"==&gt;\"</span>, remove_special_strings(s))</span><br><span class=\"line\">    s = <span class=\"string\">\"aaaacccc\"</span></span><br><span class=\"line\">    print(s, <span class=\"string\">\"==&gt;\"</span>, remove_special_strings(s))</span><br><span class=\"line\">    s = <span class=\"string\">\"acbac\"</span></span><br><span class=\"line\">    print(s, <span class=\"string\">\"==&gt;\"</span>, remove_special_strings(s))</span><br><span class=\"line\">    s = <span class=\"string\">\"aaac\"</span></span><br><span class=\"line\">    print(s, <span class=\"string\">\"==&gt;\"</span>, remove_special_strings(s))</span><br><span class=\"line\">    s = <span class=\"string\">\"ababc\"</span></span><br><span class=\"line\">    print(s, <span class=\"string\">\"==&gt;\"</span>, remove_special_strings(s))</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"remove_substrings.png\" alt></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Cloudin云英 面试题</span></span><br><span class=\"line\"><span class=\"comment\"># remove \"b\" and \"ac\" in a string</span></span><br><span class=\"line\"><span class=\"comment\"># use stack</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">remove_special_strings_stack</span><span class=\"params\">(s)</span>:</span></span><br><span class=\"line\">    stk = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> s:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> i == <span class=\"string\">\"b\"</span>:</span><br><span class=\"line\">            <span class=\"keyword\">continue</span></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> len(stk) &gt;= <span class=\"number\">1</span> <span class=\"keyword\">and</span> i == <span class=\"string\">\"c\"</span> <span class=\"keyword\">and</span> stk[<span class=\"number\">-1</span>] == <span class=\"string\">\"a\"</span>:</span><br><span class=\"line\">            stk.pop(<span class=\"number\">-1</span>)</span><br><span class=\"line\">            <span class=\"keyword\">continue</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            stk.append(i)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">\"\"</span>.join(stk)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">\"__main__\"</span>:</span><br><span class=\"line\">    s = <span class=\"string\">\"qwert\"</span></span><br><span class=\"line\">    print(s, <span class=\"string\">\"==&gt;\"</span>, remove_special_strings_stack(s))</span><br><span class=\"line\">    s = <span class=\"string\">\"aacc\"</span></span><br><span class=\"line\">    print(s, <span class=\"string\">\"==&gt;\"</span>, remove_special_strings_stack(s))</span><br><span class=\"line\">    s = <span class=\"string\">\"aaaacccc\"</span></span><br><span class=\"line\">    print(s, <span class=\"string\">\"==&gt;\"</span>, remove_special_strings_stack(s))</span><br><span class=\"line\">    s = <span class=\"string\">\"acbac\"</span></span><br><span class=\"line\">    print(s, <span class=\"string\">\"==&gt;\"</span>, remove_special_strings_stack(s))</span><br><span class=\"line\">    s = <span class=\"string\">\"aaac\"</span></span><br><span class=\"line\">    print(s, <span class=\"string\">\"==&gt;\"</span>, remove_special_strings_stack(s))</span><br><span class=\"line\">    s = <span class=\"string\">\"ababc\"</span></span><br><span class=\"line\">    print(s, <span class=\"string\">\"==&gt;\"</span>, remove_special_strings_stack(s))</span><br><span class=\"line\">    s = <span class=\"string\">\"accccc\"</span></span><br><span class=\"line\">    print(s, <span class=\"string\">\"==&gt;\"</span>, remove_special_strings_stack(s))</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<p>删除字符串中的“b”和“ac”，即保证删除后的结果中不出现“b”和“ac”。<br>例如：acbac ==&gt; “”；aaac ==&gt; aa；ababac ==&gt; aa；bbbbd ==&gt; d。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Cloudin云英 面试题</span></span><br><span class=\"line\"><span class=\"comment\"># remove \"b\" and \"ac\" in a string</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">remove_special_strings</span><span class=\"params\">(s)</span>:</span></span><br><span class=\"line\">    i = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> i &lt; len(s):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> s[i] == <span class=\"string\">\"b\"</span>:</span><br><span class=\"line\">            s = s[: i] + s[i+<span class=\"number\">1</span>:]</span><br><span class=\"line\">            <span class=\"keyword\">continue</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> i &gt;= <span class=\"number\">1</span> <span class=\"keyword\">and</span> s[i<span class=\"number\">-1</span>: i+<span class=\"number\">1</span>] == <span class=\"string\">\"ac\"</span>:</span><br><span class=\"line\">            s = s[: i<span class=\"number\">-1</span>] + s[i+<span class=\"number\">1</span>:]</span><br><span class=\"line\">            i -= <span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"keyword\">continue</span></span><br><span class=\"line\"></span><br><span class=\"line\">        i += <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> s</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">\"__main__\"</span>:</span><br><span class=\"line\">    s = <span class=\"string\">\"qwert\"</span></span><br><span class=\"line\">    print(s, <span class=\"string\">\"==&gt;\"</span>, remove_special_strings(s))</span><br><span class=\"line\">    s = <span class=\"string\">\"aacc\"</span></span><br><span class=\"line\">    print(s, <span class=\"string\">\"==&gt;\"</span>, remove_special_strings(s))</span><br><span class=\"line\">    s = <span class=\"string\">\"aaaacccc\"</span></span><br><span class=\"line\">    print(s, <span class=\"string\">\"==&gt;\"</span>, remove_special_strings(s))</span><br><span class=\"line\">    s = <span class=\"string\">\"acbac\"</span></span><br><span class=\"line\">    print(s, <span class=\"string\">\"==&gt;\"</span>, remove_special_strings(s))</span><br><span class=\"line\">    s = <span class=\"string\">\"aaac\"</span></span><br><span class=\"line\">    print(s, <span class=\"string\">\"==&gt;\"</span>, remove_special_strings(s))</span><br><span class=\"line\">    s = <span class=\"string\">\"ababc\"</span></span><br><span class=\"line\">    print(s, <span class=\"string\">\"==&gt;\"</span>, remove_special_strings(s))</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"remove_substrings.png\" alt></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Cloudin云英 面试题</span></span><br><span class=\"line\"><span class=\"comment\"># remove \"b\" and \"ac\" in a string</span></span><br><span class=\"line\"><span class=\"comment\"># use stack</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">remove_special_strings_stack</span><span class=\"params\">(s)</span>:</span></span><br><span class=\"line\">    stk = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> s:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> i == <span class=\"string\">\"b\"</span>:</span><br><span class=\"line\">            <span class=\"keyword\">continue</span></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> len(stk) &gt;= <span class=\"number\">1</span> <span class=\"keyword\">and</span> i == <span class=\"string\">\"c\"</span> <span class=\"keyword\">and</span> stk[<span class=\"number\">-1</span>] == <span class=\"string\">\"a\"</span>:</span><br><span class=\"line\">            stk.pop(<span class=\"number\">-1</span>)</span><br><span class=\"line\">            <span class=\"keyword\">continue</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            stk.append(i)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">\"\"</span>.join(stk)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">\"__main__\"</span>:</span><br><span class=\"line\">    s = <span class=\"string\">\"qwert\"</span></span><br><span class=\"line\">    print(s, <span class=\"string\">\"==&gt;\"</span>, remove_special_strings_stack(s))</span><br><span class=\"line\">    s = <span class=\"string\">\"aacc\"</span></span><br><span class=\"line\">    print(s, <span class=\"string\">\"==&gt;\"</span>, remove_special_strings_stack(s))</span><br><span class=\"line\">    s = <span class=\"string\">\"aaaacccc\"</span></span><br><span class=\"line\">    print(s, <span class=\"string\">\"==&gt;\"</span>, remove_special_strings_stack(s))</span><br><span class=\"line\">    s = <span class=\"string\">\"acbac\"</span></span><br><span class=\"line\">    print(s, <span class=\"string\">\"==&gt;\"</span>, remove_special_strings_stack(s))</span><br><span class=\"line\">    s = <span class=\"string\">\"aaac\"</span></span><br><span class=\"line\">    print(s, <span class=\"string\">\"==&gt;\"</span>, remove_special_strings_stack(s))</span><br><span class=\"line\">    s = <span class=\"string\">\"ababc\"</span></span><br><span class=\"line\">    print(s, <span class=\"string\">\"==&gt;\"</span>, remove_special_strings_stack(s))</span><br><span class=\"line\">    s = <span class=\"string\">\"accccc\"</span></span><br><span class=\"line\">    print(s, <span class=\"string\">\"==&gt;\"</span>, remove_special_strings_stack(s))</span><br></pre></td></tr></table></figure>\n\n"},{"title":"Reverse String","date":"2018-10-23T16:19:01.000Z","_content":"# Python实现字符串反转的四种方法\n1. 切片\n\n```python\ndef rev(s):\n    return s[::-1]\n```\n这是采用切片的方法，设置步长为-1，也就是反过来排序。这种方法是最简洁的，也是最推荐的。\n\n2. 传统方法\n```python\ndef rev(s):\n    str0 = ”\n    l = len(s)-1\n    while l >= 0:\n        str0 += s[l]\n        l -= 1\n    return str0\n```\n这种方法是先设置一个str0的空变量，然后在s中从后往前取值，然后追加到str0中。\n\n3.列表\n```python\ndef rev(s):\n    a = list(s)\n    a.reverse()\n    return ”.join(a)\n```\n这种方法是采用列表的reverse方法，先将s转换为列表，然后通过reverse方法反转，然后在通过join连接为字符串。\n\n注意：这里注意区分列表的reverse和sort（或sorted）方法：\nreverse是把列表方向排序;\nsort(reverse=True)是按照某种顺序方向排序。\nexample:\n>>> a=['a','c','b','d']\n>>> b=['a','c','b','d']\n>>> a.sort(reverse=True)\n>>> b.reverse()\n>>> a\n['d', 'c', 'b', 'a']\n>>> b\n['d', 'b', 'c', 'a']\n\n4. reduce\n```python\nfrom functools import reduce\ndef rev(s):\n    return reduce(lambda x, y : y + x, s)\n```\n","source":"_posts/reverse-string.md","raw":"---\ntitle: Reverse String\ndate: 2018-10-24 00:19:01\ncategories:\ntags: [python]\n---\n# Python实现字符串反转的四种方法\n1. 切片\n\n```python\ndef rev(s):\n    return s[::-1]\n```\n这是采用切片的方法，设置步长为-1，也就是反过来排序。这种方法是最简洁的，也是最推荐的。\n\n2. 传统方法\n```python\ndef rev(s):\n    str0 = ”\n    l = len(s)-1\n    while l >= 0:\n        str0 += s[l]\n        l -= 1\n    return str0\n```\n这种方法是先设置一个str0的空变量，然后在s中从后往前取值，然后追加到str0中。\n\n3.列表\n```python\ndef rev(s):\n    a = list(s)\n    a.reverse()\n    return ”.join(a)\n```\n这种方法是采用列表的reverse方法，先将s转换为列表，然后通过reverse方法反转，然后在通过join连接为字符串。\n\n注意：这里注意区分列表的reverse和sort（或sorted）方法：\nreverse是把列表方向排序;\nsort(reverse=True)是按照某种顺序方向排序。\nexample:\n>>> a=['a','c','b','d']\n>>> b=['a','c','b','d']\n>>> a.sort(reverse=True)\n>>> b.reverse()\n>>> a\n['d', 'c', 'b', 'a']\n>>> b\n['d', 'b', 'c', 'a']\n\n4. reduce\n```python\nfrom functools import reduce\ndef rev(s):\n    return reduce(lambda x, y : y + x, s)\n```\n","slug":"reverse-string","published":1,"updated":"2019-01-13T10:03:48.527Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjy5kaquu001f5ge8hx4m5u8l","content":"<h1 id=\"Python实现字符串反转的四种方法\"><a href=\"#Python实现字符串反转的四种方法\" class=\"headerlink\" title=\"Python实现字符串反转的四种方法\"></a>Python实现字符串反转的四种方法</h1><ol>\n<li>切片</li>\n</ol>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">rev</span><span class=\"params\">(s)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> s[::<span class=\"number\">-1</span>]</span><br></pre></td></tr></table></figure>\n\n<p>这是采用切片的方法，设置步长为-1，也就是反过来排序。这种方法是最简洁的，也是最推荐的。</p>\n<ol start=\"2\">\n<li>传统方法<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">rev</span><span class=\"params\">(s)</span>:</span></span><br><span class=\"line\">    str0 = ”</span><br><span class=\"line\">    l = len(s)<span class=\"number\">-1</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> l &gt;= <span class=\"number\">0</span>:</span><br><span class=\"line\">        str0 += s[l]</span><br><span class=\"line\">        l -= <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> str0</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<p>这种方法是先设置一个str0的空变量，然后在s中从后往前取值，然后追加到str0中。</p>\n<p>3.列表</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">rev</span><span class=\"params\">(s)</span>:</span></span><br><span class=\"line\">    a = list(s)</span><br><span class=\"line\">    a.reverse()</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ”.join(a)</span><br></pre></td></tr></table></figure>\n\n<p>这种方法是采用列表的reverse方法，先将s转换为列表，然后通过reverse方法反转，然后在通过join连接为字符串。</p>\n<p>注意：这里注意区分列表的reverse和sort（或sorted）方法：<br>reverse是把列表方向排序;<br>sort(reverse=True)是按照某种顺序方向排序。<br>example:</p>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>a=[‘a’,’c’,’b’,’d’]<br>b=[‘a’,’c’,’b’,’d’]<br>a.sort(reverse=True)<br>b.reverse()<br>a\n[‘d’, ‘c’, ‘b’, ‘a’]<br>b\n[‘d’, ‘b’, ‘c’, ‘a’]</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<ol start=\"4\">\n<li>reduce<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> functools <span class=\"keyword\">import</span> reduce</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">rev</span><span class=\"params\">(s)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> reduce(<span class=\"keyword\">lambda</span> x, y : y + x, s)</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Python实现字符串反转的四种方法\"><a href=\"#Python实现字符串反转的四种方法\" class=\"headerlink\" title=\"Python实现字符串反转的四种方法\"></a>Python实现字符串反转的四种方法</h1><ol>\n<li>切片</li>\n</ol>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">rev</span><span class=\"params\">(s)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> s[::<span class=\"number\">-1</span>]</span><br></pre></td></tr></table></figure>\n\n<p>这是采用切片的方法，设置步长为-1，也就是反过来排序。这种方法是最简洁的，也是最推荐的。</p>\n<ol start=\"2\">\n<li>传统方法<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">rev</span><span class=\"params\">(s)</span>:</span></span><br><span class=\"line\">    str0 = ”</span><br><span class=\"line\">    l = len(s)<span class=\"number\">-1</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> l &gt;= <span class=\"number\">0</span>:</span><br><span class=\"line\">        str0 += s[l]</span><br><span class=\"line\">        l -= <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> str0</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<p>这种方法是先设置一个str0的空变量，然后在s中从后往前取值，然后追加到str0中。</p>\n<p>3.列表</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">rev</span><span class=\"params\">(s)</span>:</span></span><br><span class=\"line\">    a = list(s)</span><br><span class=\"line\">    a.reverse()</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ”.join(a)</span><br></pre></td></tr></table></figure>\n\n<p>这种方法是采用列表的reverse方法，先将s转换为列表，然后通过reverse方法反转，然后在通过join连接为字符串。</p>\n<p>注意：这里注意区分列表的reverse和sort（或sorted）方法：<br>reverse是把列表方向排序;<br>sort(reverse=True)是按照某种顺序方向排序。<br>example:</p>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>a=[‘a’,’c’,’b’,’d’]<br>b=[‘a’,’c’,’b’,’d’]<br>a.sort(reverse=True)<br>b.reverse()<br>a\n[‘d’, ‘c’, ‘b’, ‘a’]<br>b\n[‘d’, ‘b’, ‘c’, ‘a’]</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<ol start=\"4\">\n<li>reduce<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> functools <span class=\"keyword\">import</span> reduce</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">rev</span><span class=\"params\">(s)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> reduce(<span class=\"keyword\">lambda</span> x, y : y + x, s)</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n"},{"title":"Shuffle a List in Place","date":"2018-11-26T16:30:18.000Z","_content":"\n```python\nfrom random import shuffle\nmylist = [i for i in range(0, 10)]\nprint(mylist)\nshuffle(mylist)\nprint(mylist)\n```\n","source":"_posts/shuffle-a-list-in-place.md","raw":"---\ntitle: Shuffle a List in Place\ndate: 2018-11-27 00:30:18\ncategories:\ntags:\n---\n\n```python\nfrom random import shuffle\nmylist = [i for i in range(0, 10)]\nprint(mylist)\nshuffle(mylist)\nprint(mylist)\n```\n","slug":"shuffle-a-list-in-place","published":1,"updated":"2019-01-13T10:03:48.527Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjy5kaqux001i5ge8yu2b60cb","content":"<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> random <span class=\"keyword\">import</span> shuffle</span><br><span class=\"line\">mylist = [i <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">0</span>, <span class=\"number\">10</span>)]</span><br><span class=\"line\">print(mylist)</span><br><span class=\"line\">shuffle(mylist)</span><br><span class=\"line\">print(mylist)</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> random <span class=\"keyword\">import</span> shuffle</span><br><span class=\"line\">mylist = [i <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">0</span>, <span class=\"number\">10</span>)]</span><br><span class=\"line\">print(mylist)</span><br><span class=\"line\">shuffle(mylist)</span><br><span class=\"line\">print(mylist)</span><br></pre></td></tr></table></figure>\n\n"},{"title":"Sort Strings in C","date":"2018-11-29T03:42:54.000Z","_content":"\n问题描述\n![](sort_strings_question.jpg)\nThe function strlwr() is a function from the Microsoft c library and does not work in the standard c library. \n因此linux gcc需要自定义strlwr函数原型。自己写一个strlwr.h原型，放在/usr/inlcude/里面。\n\n```c\n// /usr/include/strlwr.h\nchar *strlwr(char *s) \n{\n    char *str;\n    str = s;\n    while(*str != '\\0')\n    {   \n        if(*str >= 'A' && *str <= 'Z')\n        {   \n            *str += 'a'-'A';\n        }   \n        str++;\n    }   \n    return s;\n}\n\n```\n\n```c\n#include <stdio.h>\n#include <string.h>\n#include <strlwr.h>\n\nint main()\n{\n    int i, j, n;\n    char str[15][100], str1[15][100], tmp[15];\n\n    scanf(\"%d\", &n);\n    for(i = 0; i < n; i++)\n    {   \n        scanf(\"%s\", str[i]);\n    }   \n\n    for(i = 0; i < n-1; i++)\n    {   \n        for(j = i+1; j < n; j++)\n        {   \n            if(strcmp(strlwr(str[i]), strlwr(str[j])) > 0)\n            {   \n                strcpy(tmp, str[i]);\n                strcpy(str[i], str[j]);\n                strcpy(str[j], tmp);\n            }   \n        }   \n    }   \n\n    for(i = 0; i < n; i++)\n    {   \n        puts(str[i]);\n    }   \n}\n```\n","source":"_posts/sort-strings-in-c.md","raw":"---\ntitle: Sort Strings in C\ndate: 2018-11-29 11:42:54\ncategories:\ntags:\n---\n\n问题描述\n![](sort_strings_question.jpg)\nThe function strlwr() is a function from the Microsoft c library and does not work in the standard c library. \n因此linux gcc需要自定义strlwr函数原型。自己写一个strlwr.h原型，放在/usr/inlcude/里面。\n\n```c\n// /usr/include/strlwr.h\nchar *strlwr(char *s) \n{\n    char *str;\n    str = s;\n    while(*str != '\\0')\n    {   \n        if(*str >= 'A' && *str <= 'Z')\n        {   \n            *str += 'a'-'A';\n        }   \n        str++;\n    }   \n    return s;\n}\n\n```\n\n```c\n#include <stdio.h>\n#include <string.h>\n#include <strlwr.h>\n\nint main()\n{\n    int i, j, n;\n    char str[15][100], str1[15][100], tmp[15];\n\n    scanf(\"%d\", &n);\n    for(i = 0; i < n; i++)\n    {   \n        scanf(\"%s\", str[i]);\n    }   \n\n    for(i = 0; i < n-1; i++)\n    {   \n        for(j = i+1; j < n; j++)\n        {   \n            if(strcmp(strlwr(str[i]), strlwr(str[j])) > 0)\n            {   \n                strcpy(tmp, str[i]);\n                strcpy(str[i], str[j]);\n                strcpy(str[j], tmp);\n            }   \n        }   \n    }   \n\n    for(i = 0; i < n; i++)\n    {   \n        puts(str[i]);\n    }   \n}\n```\n","slug":"sort-strings-in-c","published":1,"updated":"2019-01-13T10:03:48.527Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjy5kaquy001k5ge8w48gmiva","content":"<p>问题描述<br><img src=\"sort_strings_question.jpg\" alt><br>The function strlwr() is a function from the Microsoft c library and does not work in the standard c library.<br>因此linux gcc需要自定义strlwr函数原型。自己写一个strlwr.h原型，放在/usr/inlcude/里面。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// /usr/include/strlwr.h</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">char</span> *<span class=\"title\">strlwr</span><span class=\"params\">(<span class=\"keyword\">char</span> *s)</span> </span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">char</span> *str;</span><br><span class=\"line\">    str = s;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(*str != <span class=\"string\">'\\0'</span>)</span><br><span class=\"line\">    &#123;   </span><br><span class=\"line\">        <span class=\"keyword\">if</span>(*str &gt;= <span class=\"string\">'A'</span> &amp;&amp; *str &lt;= <span class=\"string\">'Z'</span>)</span><br><span class=\"line\">        &#123;   </span><br><span class=\"line\">            *str += <span class=\"string\">'a'</span>-<span class=\"string\">'A'</span>;</span><br><span class=\"line\">        &#125;   </span><br><span class=\"line\">        str++;</span><br><span class=\"line\">    &#125;   </span><br><span class=\"line\">    <span class=\"keyword\">return</span> s;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;string.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;strlwr.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> i, j, n;</span><br><span class=\"line\">    <span class=\"keyword\">char</span> str[<span class=\"number\">15</span>][<span class=\"number\">100</span>], str1[<span class=\"number\">15</span>][<span class=\"number\">100</span>], tmp[<span class=\"number\">15</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>, &amp;n);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(i = <span class=\"number\">0</span>; i &lt; n; i++)</span><br><span class=\"line\">    &#123;   </span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%s\"</span>, str[i]);</span><br><span class=\"line\">    &#125;   </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(i = <span class=\"number\">0</span>; i &lt; n<span class=\"number\">-1</span>; i++)</span><br><span class=\"line\">    &#123;   </span><br><span class=\"line\">        <span class=\"keyword\">for</span>(j = i+<span class=\"number\">1</span>; j &lt; n; j++)</span><br><span class=\"line\">        &#123;   </span><br><span class=\"line\">            <span class=\"keyword\">if</span>(<span class=\"built_in\">strcmp</span>(strlwr(str[i]), strlwr(str[j])) &gt; <span class=\"number\">0</span>)</span><br><span class=\"line\">            &#123;   </span><br><span class=\"line\">                <span class=\"built_in\">strcpy</span>(tmp, str[i]);</span><br><span class=\"line\">                <span class=\"built_in\">strcpy</span>(str[i], str[j]);</span><br><span class=\"line\">                <span class=\"built_in\">strcpy</span>(str[j], tmp);</span><br><span class=\"line\">            &#125;   </span><br><span class=\"line\">        &#125;   </span><br><span class=\"line\">    &#125;   </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(i = <span class=\"number\">0</span>; i &lt; n; i++)</span><br><span class=\"line\">    &#123;   </span><br><span class=\"line\">        <span class=\"built_in\">puts</span>(str[i]);</span><br><span class=\"line\">    &#125;   </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<p>问题描述<br><img src=\"sort_strings_question.jpg\" alt><br>The function strlwr() is a function from the Microsoft c library and does not work in the standard c library.<br>因此linux gcc需要自定义strlwr函数原型。自己写一个strlwr.h原型，放在/usr/inlcude/里面。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// /usr/include/strlwr.h</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">char</span> *<span class=\"title\">strlwr</span><span class=\"params\">(<span class=\"keyword\">char</span> *s)</span> </span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">char</span> *str;</span><br><span class=\"line\">    str = s;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(*str != <span class=\"string\">'\\0'</span>)</span><br><span class=\"line\">    &#123;   </span><br><span class=\"line\">        <span class=\"keyword\">if</span>(*str &gt;= <span class=\"string\">'A'</span> &amp;&amp; *str &lt;= <span class=\"string\">'Z'</span>)</span><br><span class=\"line\">        &#123;   </span><br><span class=\"line\">            *str += <span class=\"string\">'a'</span>-<span class=\"string\">'A'</span>;</span><br><span class=\"line\">        &#125;   </span><br><span class=\"line\">        str++;</span><br><span class=\"line\">    &#125;   </span><br><span class=\"line\">    <span class=\"keyword\">return</span> s;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;string.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;strlwr.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> i, j, n;</span><br><span class=\"line\">    <span class=\"keyword\">char</span> str[<span class=\"number\">15</span>][<span class=\"number\">100</span>], str1[<span class=\"number\">15</span>][<span class=\"number\">100</span>], tmp[<span class=\"number\">15</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>, &amp;n);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(i = <span class=\"number\">0</span>; i &lt; n; i++)</span><br><span class=\"line\">    &#123;   </span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%s\"</span>, str[i]);</span><br><span class=\"line\">    &#125;   </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(i = <span class=\"number\">0</span>; i &lt; n<span class=\"number\">-1</span>; i++)</span><br><span class=\"line\">    &#123;   </span><br><span class=\"line\">        <span class=\"keyword\">for</span>(j = i+<span class=\"number\">1</span>; j &lt; n; j++)</span><br><span class=\"line\">        &#123;   </span><br><span class=\"line\">            <span class=\"keyword\">if</span>(<span class=\"built_in\">strcmp</span>(strlwr(str[i]), strlwr(str[j])) &gt; <span class=\"number\">0</span>)</span><br><span class=\"line\">            &#123;   </span><br><span class=\"line\">                <span class=\"built_in\">strcpy</span>(tmp, str[i]);</span><br><span class=\"line\">                <span class=\"built_in\">strcpy</span>(str[i], str[j]);</span><br><span class=\"line\">                <span class=\"built_in\">strcpy</span>(str[j], tmp);</span><br><span class=\"line\">            &#125;   </span><br><span class=\"line\">        &#125;   </span><br><span class=\"line\">    &#125;   </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(i = <span class=\"number\">0</span>; i &lt; n; i++)</span><br><span class=\"line\">    &#123;   </span><br><span class=\"line\">        <span class=\"built_in\">puts</span>(str[i]);</span><br><span class=\"line\">    &#125;   </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n"},{"title":"SSH Failed to Connect to CentOS7 in Vultr","date":"2018-11-06T03:15:46.000Z","_content":"SSH无法连接CentOS7(vultr)\n现象一：\n浏览器中无限循环输入用户名和密码，无法登陆console ![](ssh1.png) \n现象二：\nSSH本地无法连接 ![](ssh2.png)\nSSH跳板机也无法连接\n![](ssh3.png) ![](ssh4.jpg) \n其他现象：\n用Chrome打开Console，Ctrl+Alt+Del不起作用\nServer disconnected (code: 1006) ![](ssh5.png)\n检测发现没被墙。国内外可ping通, 22端口也是开启的。国内Tcping也是通的。小鸡上的服务也是可以正常使用的。\n解决方案：\n更换浏览器，用Microsoft Edge可以进入控制台\nSend CtrlAltDel ![](ssh6.png)\n按e编辑\n![](ssh7.png)\n ro : readonly 只读\n rw : read write 即可以读，也可以写；接下来要更改配置文件，所以要写入\n init=/bin/bash 再次启动时进入/bin/bash \n![](ssh8.png)\nCtrl-X进入Bash\n更改selinux配置\n![](ssh9.png) ![](ssh10.png) ![](ssh11.png)\n保存重启，可登陆console ![](ssh12.png)\nSSH可连接 ![](ssh13.png)\n折腾了一圈，Chrome现在Send CtrlAltDel也生效了。\n困惑：\n从来没用过selinux 。之前登陆,直接用passwd修改过root密码，可是一直能登陆的。\n\n<逗比根据地>群里大佬的建议\ntouch /.autorelabel ![](ssh14.png)\n原因：\n可能是Vultr官方把selinux设置改了。因为之前ssh是可以连接的。\n","source":"_posts/ssh-failed-to-connect-centos7-in-vultr.md","raw":"---\ntitle: SSH Failed to Connect to CentOS7 in Vultr\ndate: 2018-11-06 11:15:46\ncategories:\ntags:\n---\nSSH无法连接CentOS7(vultr)\n现象一：\n浏览器中无限循环输入用户名和密码，无法登陆console ![](ssh1.png) \n现象二：\nSSH本地无法连接 ![](ssh2.png)\nSSH跳板机也无法连接\n![](ssh3.png) ![](ssh4.jpg) \n其他现象：\n用Chrome打开Console，Ctrl+Alt+Del不起作用\nServer disconnected (code: 1006) ![](ssh5.png)\n检测发现没被墙。国内外可ping通, 22端口也是开启的。国内Tcping也是通的。小鸡上的服务也是可以正常使用的。\n解决方案：\n更换浏览器，用Microsoft Edge可以进入控制台\nSend CtrlAltDel ![](ssh6.png)\n按e编辑\n![](ssh7.png)\n ro : readonly 只读\n rw : read write 即可以读，也可以写；接下来要更改配置文件，所以要写入\n init=/bin/bash 再次启动时进入/bin/bash \n![](ssh8.png)\nCtrl-X进入Bash\n更改selinux配置\n![](ssh9.png) ![](ssh10.png) ![](ssh11.png)\n保存重启，可登陆console ![](ssh12.png)\nSSH可连接 ![](ssh13.png)\n折腾了一圈，Chrome现在Send CtrlAltDel也生效了。\n困惑：\n从来没用过selinux 。之前登陆,直接用passwd修改过root密码，可是一直能登陆的。\n\n<逗比根据地>群里大佬的建议\ntouch /.autorelabel ![](ssh14.png)\n原因：\n可能是Vultr官方把selinux设置改了。因为之前ssh是可以连接的。\n","slug":"ssh-failed-to-connect-centos7-in-vultr","published":1,"updated":"2019-01-13T10:03:48.528Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjy5kaquz001m5ge8c4cwdr0k","content":"<p>SSH无法连接CentOS7(vultr)<br>现象一：<br>浏览器中无限循环输入用户名和密码，无法登陆console <img src=\"ssh1.png\" alt><br>现象二：<br>SSH本地无法连接 <img src=\"ssh2.png\" alt><br>SSH跳板机也无法连接<br><img src=\"ssh3.png\" alt> <img src=\"ssh4.jpg\" alt><br>其他现象：<br>用Chrome打开Console，Ctrl+Alt+Del不起作用<br>Server disconnected (code: 1006) <img src=\"ssh5.png\" alt><br>检测发现没被墙。国内外可ping通, 22端口也是开启的。国内Tcping也是通的。小鸡上的服务也是可以正常使用的。<br>解决方案：<br>更换浏览器，用Microsoft Edge可以进入控制台<br>Send CtrlAltDel <img src=\"ssh6.png\" alt><br>按e编辑<br><img src=\"ssh7.png\" alt><br> ro : readonly 只读<br> rw : read write 即可以读，也可以写；接下来要更改配置文件，所以要写入<br> init=/bin/bash 再次启动时进入/bin/bash<br><img src=\"ssh8.png\" alt><br>Ctrl-X进入Bash<br>更改selinux配置<br><img src=\"ssh9.png\" alt> <img src=\"ssh10.png\" alt> <img src=\"ssh11.png\" alt><br>保存重启，可登陆console <img src=\"ssh12.png\" alt><br>SSH可连接 <img src=\"ssh13.png\" alt><br>折腾了一圈，Chrome现在Send CtrlAltDel也生效了。<br>困惑：<br>从来没用过selinux 。之前登陆,直接用passwd修改过root密码，可是一直能登陆的。</p>\n<p>&lt;逗比根据地&gt;群里大佬的建议<br>touch /.autorelabel <img src=\"ssh14.png\" alt><br>原因：<br>可能是Vultr官方把selinux设置改了。因为之前ssh是可以连接的。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>SSH无法连接CentOS7(vultr)<br>现象一：<br>浏览器中无限循环输入用户名和密码，无法登陆console <img src=\"ssh1.png\" alt><br>现象二：<br>SSH本地无法连接 <img src=\"ssh2.png\" alt><br>SSH跳板机也无法连接<br><img src=\"ssh3.png\" alt> <img src=\"ssh4.jpg\" alt><br>其他现象：<br>用Chrome打开Console，Ctrl+Alt+Del不起作用<br>Server disconnected (code: 1006) <img src=\"ssh5.png\" alt><br>检测发现没被墙。国内外可ping通, 22端口也是开启的。国内Tcping也是通的。小鸡上的服务也是可以正常使用的。<br>解决方案：<br>更换浏览器，用Microsoft Edge可以进入控制台<br>Send CtrlAltDel <img src=\"ssh6.png\" alt><br>按e编辑<br><img src=\"ssh7.png\" alt><br> ro : readonly 只读<br> rw : read write 即可以读，也可以写；接下来要更改配置文件，所以要写入<br> init=/bin/bash 再次启动时进入/bin/bash<br><img src=\"ssh8.png\" alt><br>Ctrl-X进入Bash<br>更改selinux配置<br><img src=\"ssh9.png\" alt> <img src=\"ssh10.png\" alt> <img src=\"ssh11.png\" alt><br>保存重启，可登陆console <img src=\"ssh12.png\" alt><br>SSH可连接 <img src=\"ssh13.png\" alt><br>折腾了一圈，Chrome现在Send CtrlAltDel也生效了。<br>困惑：<br>从来没用过selinux 。之前登陆,直接用passwd修改过root密码，可是一直能登陆的。</p>\n<p>&lt;逗比根据地&gt;群里大佬的建议<br>touch /.autorelabel <img src=\"ssh14.png\" alt><br>原因：<br>可能是Vultr官方把selinux设置改了。因为之前ssh是可以连接的。</p>\n"},{"title":"System Path of Python in Windows and Ubuntu","date":"2018-11-30T09:40:47.000Z","_content":"\n```python\nimport sys\n\n# print(sys.path)\nprint(\"\\n\".join(sys.path))\n```\n###### Windows(PyCharm)\n```dos\nC:\\Users\\lixiang\\PycharmProjects\\other\nC:\\Users\\lixiang\\PycharmProjects\\other\nC:\\Users\\lixiang\\PycharmProjects\\other\\venv\\Scripts\\python36.zip\nC:\\Users\\lixiang\\AppData\\Local\\Programs\\Python\\Python36\\DLLs\nC:\\Users\\lixiang\\AppData\\Local\\Programs\\Python\\Python36\\lib\nC:\\Users\\lixiang\\AppData\\Local\\Programs\\Python\\Python36\nC:\\Users\\lixiang\\PycharmProjects\\other\\venv\nC:\\Users\\lixiang\\PycharmProjects\\other\\venv\\lib\\site-packages\nC:\\Users\\lixiang\\PycharmProjects\\other\\venv\\lib\\site-packages\\setuptools-28.8.0-py3.6.egg\n```\n###### Windows(IPython)\n```dos\n\nC:\\Users\\lixiang\\AppData\\Local\\Programs\\Python\\Python36\\Scripts\\ipython.exe\nc:\\users\\lixiang\\appdata\\local\\programs\\python\\python36\\python36.zip\nc:\\users\\lixiang\\appdata\\local\\programs\\python\\python36\\DLLs\nc:\\users\\lixiang\\appdata\\local\\programs\\python\\python36\\lib\nc:\\users\\lixiang\\appdata\\local\\programs\\python\\python36\nc:\\users\\lixiang\\appdata\\local\\programs\\python\\python36\\lib\\site-packages\nc:\\users\\lixiang\\appdata\\local\\programs\\python\\python36\\lib\\site-packages\\IPython\\extensions\nC:\\Users\\lixiang\\.ipython\n```\n\n###### Python3.6 in Ubuntu\n```bash\n\n/usr/lib/python36.zip\n/usr/lib/python3.6\n/usr/lib/python3.6/lib-dynload\n/usr/local/lib/python3.6/dist-packages\n/usr/lib/python3/dist-packages\n```\n###### Python2.7 in Ubuntu\n```bash\n\n/usr/lib/python2.7\n/usr/lib/python2.7/plat-x86_64-linux-gnu\n/usr/lib/python2.7/lib-tk\n/usr/lib/python2.7/lib-old\n/usr/lib/python2.7/lib-dynload\n/usr/local/lib/python2.7/dist-packages\n/usr/lib/python2.7/dist-packages\n```\n","source":"_posts/system-path-of-python-in-windows-and-ubuntu.md","raw":"---\ntitle: System Path of Python in Windows and Ubuntu\ndate: 2018-11-30 17:40:47\ncategories:\ntags:\n---\n\n```python\nimport sys\n\n# print(sys.path)\nprint(\"\\n\".join(sys.path))\n```\n###### Windows(PyCharm)\n```dos\nC:\\Users\\lixiang\\PycharmProjects\\other\nC:\\Users\\lixiang\\PycharmProjects\\other\nC:\\Users\\lixiang\\PycharmProjects\\other\\venv\\Scripts\\python36.zip\nC:\\Users\\lixiang\\AppData\\Local\\Programs\\Python\\Python36\\DLLs\nC:\\Users\\lixiang\\AppData\\Local\\Programs\\Python\\Python36\\lib\nC:\\Users\\lixiang\\AppData\\Local\\Programs\\Python\\Python36\nC:\\Users\\lixiang\\PycharmProjects\\other\\venv\nC:\\Users\\lixiang\\PycharmProjects\\other\\venv\\lib\\site-packages\nC:\\Users\\lixiang\\PycharmProjects\\other\\venv\\lib\\site-packages\\setuptools-28.8.0-py3.6.egg\n```\n###### Windows(IPython)\n```dos\n\nC:\\Users\\lixiang\\AppData\\Local\\Programs\\Python\\Python36\\Scripts\\ipython.exe\nc:\\users\\lixiang\\appdata\\local\\programs\\python\\python36\\python36.zip\nc:\\users\\lixiang\\appdata\\local\\programs\\python\\python36\\DLLs\nc:\\users\\lixiang\\appdata\\local\\programs\\python\\python36\\lib\nc:\\users\\lixiang\\appdata\\local\\programs\\python\\python36\nc:\\users\\lixiang\\appdata\\local\\programs\\python\\python36\\lib\\site-packages\nc:\\users\\lixiang\\appdata\\local\\programs\\python\\python36\\lib\\site-packages\\IPython\\extensions\nC:\\Users\\lixiang\\.ipython\n```\n\n###### Python3.6 in Ubuntu\n```bash\n\n/usr/lib/python36.zip\n/usr/lib/python3.6\n/usr/lib/python3.6/lib-dynload\n/usr/local/lib/python3.6/dist-packages\n/usr/lib/python3/dist-packages\n```\n###### Python2.7 in Ubuntu\n```bash\n\n/usr/lib/python2.7\n/usr/lib/python2.7/plat-x86_64-linux-gnu\n/usr/lib/python2.7/lib-tk\n/usr/lib/python2.7/lib-old\n/usr/lib/python2.7/lib-dynload\n/usr/local/lib/python2.7/dist-packages\n/usr/lib/python2.7/dist-packages\n```\n","slug":"system-path-of-python-in-windows-and-ubuntu","published":1,"updated":"2019-01-13T10:03:48.537Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjy5kaqv0001n5ge8oaeep7wc","content":"<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># print(sys.path)</span></span><br><span class=\"line\">print(<span class=\"string\">\"\\n\"</span>.join(sys.path))</span><br></pre></td></tr></table></figure>\n\n<h6 id=\"Windows-PyCharm\"><a href=\"#Windows-PyCharm\" class=\"headerlink\" title=\"Windows(PyCharm)\"></a>Windows(PyCharm)</h6><figure class=\"highlight dos\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">C:\\<span class=\"title\">Users</span>\\<span class=\"title\">lixiang</span>\\<span class=\"title\">PycharmProjects</span>\\<span class=\"title\">other</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">C</span>:\\<span class=\"title\">Users</span>\\<span class=\"title\">lixiang</span>\\<span class=\"title\">PycharmProjects</span>\\<span class=\"title\">other</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">C</span>:\\<span class=\"title\">Users</span>\\<span class=\"title\">lixiang</span>\\<span class=\"title\">PycharmProjects</span>\\<span class=\"title\">other</span>\\<span class=\"title\">venv</span>\\<span class=\"title\">Scripts</span>\\<span class=\"title\">python36.zip</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">C</span>:\\<span class=\"title\">Users</span>\\<span class=\"title\">lixiang</span>\\<span class=\"title\">AppData</span>\\<span class=\"title\">Local</span>\\<span class=\"title\">Programs</span>\\<span class=\"title\">Python</span>\\<span class=\"title\">Python36</span>\\<span class=\"title\">DLLs</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">C</span>:\\<span class=\"title\">Users</span>\\<span class=\"title\">lixiang</span>\\<span class=\"title\">AppData</span>\\<span class=\"title\">Local</span>\\<span class=\"title\">Programs</span>\\<span class=\"title\">Python</span>\\<span class=\"title\">Python36</span>\\<span class=\"title\">lib</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">C</span>:\\<span class=\"title\">Users</span>\\<span class=\"title\">lixiang</span>\\<span class=\"title\">AppData</span>\\<span class=\"title\">Local</span>\\<span class=\"title\">Programs</span>\\<span class=\"title\">Python</span>\\<span class=\"title\">Python36</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">C</span>:\\<span class=\"title\">Users</span>\\<span class=\"title\">lixiang</span>\\<span class=\"title\">PycharmProjects</span>\\<span class=\"title\">other</span>\\<span class=\"title\">venv</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">C</span>:\\<span class=\"title\">Users</span>\\<span class=\"title\">lixiang</span>\\<span class=\"title\">PycharmProjects</span>\\<span class=\"title\">other</span>\\<span class=\"title\">venv</span>\\<span class=\"title\">lib</span>\\<span class=\"title\">site</span>-<span class=\"title\">packages</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">C</span>:\\<span class=\"title\">Users</span>\\<span class=\"title\">lixiang</span>\\<span class=\"title\">PycharmProjects</span>\\<span class=\"title\">other</span>\\<span class=\"title\">venv</span>\\<span class=\"title\">lib</span>\\<span class=\"title\">site</span>-<span class=\"title\">packages</span>\\<span class=\"title\">setuptools</span>-28.8.0-<span class=\"title\">py3</span>.6.<span class=\"title\">egg</span></span></span><br></pre></td></tr></table></figure>\n\n<h6 id=\"Windows-IPython\"><a href=\"#Windows-IPython\" class=\"headerlink\" title=\"Windows(IPython)\"></a>Windows(IPython)</h6><figure class=\"highlight dos\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">C:\\<span class=\"title\">Users</span>\\<span class=\"title\">lixiang</span>\\<span class=\"title\">AppData</span>\\<span class=\"title\">Local</span>\\<span class=\"title\">Programs</span>\\<span class=\"title\">Python</span>\\<span class=\"title\">Python36</span>\\<span class=\"title\">Scripts</span>\\<span class=\"title\">ipython.exe</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>:\\<span class=\"title\">users</span>\\<span class=\"title\">lixiang</span>\\<span class=\"title\">appdata</span>\\<span class=\"title\">local</span>\\<span class=\"title\">programs</span>\\<span class=\"title\">python</span>\\<span class=\"title\">python36</span>\\<span class=\"title\">python36.zip</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>:\\<span class=\"title\">users</span>\\<span class=\"title\">lixiang</span>\\<span class=\"title\">appdata</span>\\<span class=\"title\">local</span>\\<span class=\"title\">programs</span>\\<span class=\"title\">python</span>\\<span class=\"title\">python36</span>\\<span class=\"title\">DLLs</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>:\\<span class=\"title\">users</span>\\<span class=\"title\">lixiang</span>\\<span class=\"title\">appdata</span>\\<span class=\"title\">local</span>\\<span class=\"title\">programs</span>\\<span class=\"title\">python</span>\\<span class=\"title\">python36</span>\\<span class=\"title\">lib</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>:\\<span class=\"title\">users</span>\\<span class=\"title\">lixiang</span>\\<span class=\"title\">appdata</span>\\<span class=\"title\">local</span>\\<span class=\"title\">programs</span>\\<span class=\"title\">python</span>\\<span class=\"title\">python36</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>:\\<span class=\"title\">users</span>\\<span class=\"title\">lixiang</span>\\<span class=\"title\">appdata</span>\\<span class=\"title\">local</span>\\<span class=\"title\">programs</span>\\<span class=\"title\">python</span>\\<span class=\"title\">python36</span>\\<span class=\"title\">lib</span>\\<span class=\"title\">site</span>-<span class=\"title\">packages</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>:\\<span class=\"title\">users</span>\\<span class=\"title\">lixiang</span>\\<span class=\"title\">appdata</span>\\<span class=\"title\">local</span>\\<span class=\"title\">programs</span>\\<span class=\"title\">python</span>\\<span class=\"title\">python36</span>\\<span class=\"title\">lib</span>\\<span class=\"title\">site</span>-<span class=\"title\">packages</span>\\<span class=\"title\">IPython</span>\\<span class=\"title\">extensions</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">C</span>:\\<span class=\"title\">Users</span>\\<span class=\"title\">lixiang</span>\\.<span class=\"title\">ipython</span></span></span><br></pre></td></tr></table></figure>\n\n<h6 id=\"Python3-6-in-Ubuntu\"><a href=\"#Python3-6-in-Ubuntu\" class=\"headerlink\" title=\"Python3.6 in Ubuntu\"></a>Python3.6 in Ubuntu</h6><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">/usr/lib/python36.zip</span><br><span class=\"line\">/usr/lib/python3.6</span><br><span class=\"line\">/usr/lib/python3.6/lib-dynload</span><br><span class=\"line\">/usr/<span class=\"built_in\">local</span>/lib/python3.6/dist-packages</span><br><span class=\"line\">/usr/lib/python3/dist-packages</span><br></pre></td></tr></table></figure>\n\n<h6 id=\"Python2-7-in-Ubuntu\"><a href=\"#Python2-7-in-Ubuntu\" class=\"headerlink\" title=\"Python2.7 in Ubuntu\"></a>Python2.7 in Ubuntu</h6><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">/usr/lib/python2.7</span><br><span class=\"line\">/usr/lib/python2.7/plat-x86_64-linux-gnu</span><br><span class=\"line\">/usr/lib/python2.7/lib-tk</span><br><span class=\"line\">/usr/lib/python2.7/lib-old</span><br><span class=\"line\">/usr/lib/python2.7/lib-dynload</span><br><span class=\"line\">/usr/<span class=\"built_in\">local</span>/lib/python2.7/dist-packages</span><br><span class=\"line\">/usr/lib/python2.7/dist-packages</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># print(sys.path)</span></span><br><span class=\"line\">print(<span class=\"string\">\"\\n\"</span>.join(sys.path))</span><br></pre></td></tr></table></figure>\n\n<h6 id=\"Windows-PyCharm\"><a href=\"#Windows-PyCharm\" class=\"headerlink\" title=\"Windows(PyCharm)\"></a>Windows(PyCharm)</h6><figure class=\"highlight dos\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">C:\\<span class=\"title\">Users</span>\\<span class=\"title\">lixiang</span>\\<span class=\"title\">PycharmProjects</span>\\<span class=\"title\">other</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">C</span>:\\<span class=\"title\">Users</span>\\<span class=\"title\">lixiang</span>\\<span class=\"title\">PycharmProjects</span>\\<span class=\"title\">other</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">C</span>:\\<span class=\"title\">Users</span>\\<span class=\"title\">lixiang</span>\\<span class=\"title\">PycharmProjects</span>\\<span class=\"title\">other</span>\\<span class=\"title\">venv</span>\\<span class=\"title\">Scripts</span>\\<span class=\"title\">python36.zip</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">C</span>:\\<span class=\"title\">Users</span>\\<span class=\"title\">lixiang</span>\\<span class=\"title\">AppData</span>\\<span class=\"title\">Local</span>\\<span class=\"title\">Programs</span>\\<span class=\"title\">Python</span>\\<span class=\"title\">Python36</span>\\<span class=\"title\">DLLs</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">C</span>:\\<span class=\"title\">Users</span>\\<span class=\"title\">lixiang</span>\\<span class=\"title\">AppData</span>\\<span class=\"title\">Local</span>\\<span class=\"title\">Programs</span>\\<span class=\"title\">Python</span>\\<span class=\"title\">Python36</span>\\<span class=\"title\">lib</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">C</span>:\\<span class=\"title\">Users</span>\\<span class=\"title\">lixiang</span>\\<span class=\"title\">AppData</span>\\<span class=\"title\">Local</span>\\<span class=\"title\">Programs</span>\\<span class=\"title\">Python</span>\\<span class=\"title\">Python36</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">C</span>:\\<span class=\"title\">Users</span>\\<span class=\"title\">lixiang</span>\\<span class=\"title\">PycharmProjects</span>\\<span class=\"title\">other</span>\\<span class=\"title\">venv</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">C</span>:\\<span class=\"title\">Users</span>\\<span class=\"title\">lixiang</span>\\<span class=\"title\">PycharmProjects</span>\\<span class=\"title\">other</span>\\<span class=\"title\">venv</span>\\<span class=\"title\">lib</span>\\<span class=\"title\">site</span>-<span class=\"title\">packages</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">C</span>:\\<span class=\"title\">Users</span>\\<span class=\"title\">lixiang</span>\\<span class=\"title\">PycharmProjects</span>\\<span class=\"title\">other</span>\\<span class=\"title\">venv</span>\\<span class=\"title\">lib</span>\\<span class=\"title\">site</span>-<span class=\"title\">packages</span>\\<span class=\"title\">setuptools</span>-28.8.0-<span class=\"title\">py3</span>.6.<span class=\"title\">egg</span></span></span><br></pre></td></tr></table></figure>\n\n<h6 id=\"Windows-IPython\"><a href=\"#Windows-IPython\" class=\"headerlink\" title=\"Windows(IPython)\"></a>Windows(IPython)</h6><figure class=\"highlight dos\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">C:\\<span class=\"title\">Users</span>\\<span class=\"title\">lixiang</span>\\<span class=\"title\">AppData</span>\\<span class=\"title\">Local</span>\\<span class=\"title\">Programs</span>\\<span class=\"title\">Python</span>\\<span class=\"title\">Python36</span>\\<span class=\"title\">Scripts</span>\\<span class=\"title\">ipython.exe</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>:\\<span class=\"title\">users</span>\\<span class=\"title\">lixiang</span>\\<span class=\"title\">appdata</span>\\<span class=\"title\">local</span>\\<span class=\"title\">programs</span>\\<span class=\"title\">python</span>\\<span class=\"title\">python36</span>\\<span class=\"title\">python36.zip</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>:\\<span class=\"title\">users</span>\\<span class=\"title\">lixiang</span>\\<span class=\"title\">appdata</span>\\<span class=\"title\">local</span>\\<span class=\"title\">programs</span>\\<span class=\"title\">python</span>\\<span class=\"title\">python36</span>\\<span class=\"title\">DLLs</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>:\\<span class=\"title\">users</span>\\<span class=\"title\">lixiang</span>\\<span class=\"title\">appdata</span>\\<span class=\"title\">local</span>\\<span class=\"title\">programs</span>\\<span class=\"title\">python</span>\\<span class=\"title\">python36</span>\\<span class=\"title\">lib</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>:\\<span class=\"title\">users</span>\\<span class=\"title\">lixiang</span>\\<span class=\"title\">appdata</span>\\<span class=\"title\">local</span>\\<span class=\"title\">programs</span>\\<span class=\"title\">python</span>\\<span class=\"title\">python36</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>:\\<span class=\"title\">users</span>\\<span class=\"title\">lixiang</span>\\<span class=\"title\">appdata</span>\\<span class=\"title\">local</span>\\<span class=\"title\">programs</span>\\<span class=\"title\">python</span>\\<span class=\"title\">python36</span>\\<span class=\"title\">lib</span>\\<span class=\"title\">site</span>-<span class=\"title\">packages</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>:\\<span class=\"title\">users</span>\\<span class=\"title\">lixiang</span>\\<span class=\"title\">appdata</span>\\<span class=\"title\">local</span>\\<span class=\"title\">programs</span>\\<span class=\"title\">python</span>\\<span class=\"title\">python36</span>\\<span class=\"title\">lib</span>\\<span class=\"title\">site</span>-<span class=\"title\">packages</span>\\<span class=\"title\">IPython</span>\\<span class=\"title\">extensions</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">C</span>:\\<span class=\"title\">Users</span>\\<span class=\"title\">lixiang</span>\\.<span class=\"title\">ipython</span></span></span><br></pre></td></tr></table></figure>\n\n<h6 id=\"Python3-6-in-Ubuntu\"><a href=\"#Python3-6-in-Ubuntu\" class=\"headerlink\" title=\"Python3.6 in Ubuntu\"></a>Python3.6 in Ubuntu</h6><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">/usr/lib/python36.zip</span><br><span class=\"line\">/usr/lib/python3.6</span><br><span class=\"line\">/usr/lib/python3.6/lib-dynload</span><br><span class=\"line\">/usr/<span class=\"built_in\">local</span>/lib/python3.6/dist-packages</span><br><span class=\"line\">/usr/lib/python3/dist-packages</span><br></pre></td></tr></table></figure>\n\n<h6 id=\"Python2-7-in-Ubuntu\"><a href=\"#Python2-7-in-Ubuntu\" class=\"headerlink\" title=\"Python2.7 in Ubuntu\"></a>Python2.7 in Ubuntu</h6><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">/usr/lib/python2.7</span><br><span class=\"line\">/usr/lib/python2.7/plat-x86_64-linux-gnu</span><br><span class=\"line\">/usr/lib/python2.7/lib-tk</span><br><span class=\"line\">/usr/lib/python2.7/lib-old</span><br><span class=\"line\">/usr/lib/python2.7/lib-dynload</span><br><span class=\"line\">/usr/<span class=\"built_in\">local</span>/lib/python2.7/dist-packages</span><br><span class=\"line\">/usr/lib/python2.7/dist-packages</span><br></pre></td></tr></table></figure>\n\n"},{"title":"Tank","date":"2018-07-31T07:45:27.000Z","_content":"某次战役中，为便于信息交互，我军侦察部门将此次战役的关键高地坐标设定为（x=0，y=0）并规定，每向东增加100米，x加1，每向北增加100米，y加1。同时，我军情报部门也破译了敌军向坦克发送的指挥信号，其中有三种信号（L,R,M）用于控制坦克的运动，L 和 R 分别表示使令坦克向左、向右转向，M 表示令坦克直线开进100米，其它信号如 T 用于时间同步，P 用于位置较准。 一日，我军侦察兵发现了敌军的一辆坦克，侦察兵立即将坦克所在坐标（P, Q）及坦克前进方向（W：西，E：东，N：北，S：南）发送给指挥部，同时启动信号接收器，将坦克接收到的信号实时同步发往指挥部，指挥部根据这些信息得以实时掌控了该坦克的位置，并使用榴弹炮精准地击毁了该坦克。   请设计合理的数据结构和算法，根据坦克接收到的信号，推断出坦克所在的位置。 设计时请考虑可能的扩展情况，并体现出您的设计风格。 编码时请注重代码规范，并编写足够的单元测试。   假设，坦克坐标为（11，39）运行方向为 W，当收到以下信号 “MTMPRPMTMLMRPRMTPLMMTLMRRMP” 后，其位置应该为（9，43），运行方向为 E。\n\n```python\n#! /usr/bin/env python\n\nturn_dict = {\"EL\" : \"N\", \"WL\" : \"S\", \"SL\" : \"E\", \"NL\" : \"W\", \"ER\" : \"S\", \"WR\" : \"N\", \"SR\" : \"W\", \"NR\" : \"E\"}\n\ndef action(now, command):\n#   print \"now : \", now, \"command : \", command\n#   print type(now)\n    now = now.split()\n#   print now\n    \n    # x, y, direction\n    x = int(now[0])\n    y = int(now[1])\n    d = now[2]\n#   print \"x : \", x, \",y : \", y, \",d : \", d\n\n    if \"T\" == command or \"P\" == command:\n        pass\n    elif \"L\" == command or \"R\" == command:\n        turn_key = d + command\n        d = turn_dict[turn_key]\n    elif \"M\" == command:\n        if \"E\" == d:\n            x = x + 1\n        elif \"W\" == d:\n            x = x - 1\n        elif \"S\" == d:\n            y = y - 1\n        elif \"N\" == d:\n            y = y + 1\n        else:\n            pass\n    else:\n        pass\n\n    now[0] = str(x)\n    now[1] = str(y)\n    now[2] = d\n\n    next = \" \".join(now)\n    return next\n\n\nif __name__ == \"__main__\":\n    now = raw_input(\"please enter current location and direction of motion(e.g. x y w) : \")\n    print \"now : \", now\n    command_list = raw_input(\"please enter the command list : \")\n#   print \"command_list : \", command_list\n\n    for command in command_list:\n        now = action(now, command)\n\n    print \"now : \", now \n```\n","source":"_posts/tank.md","raw":"---\ntitle: Tank\ndate: 2018-07-31 15:45:27\ncategories: oj\ntags: [oj, python]\n---\n某次战役中，为便于信息交互，我军侦察部门将此次战役的关键高地坐标设定为（x=0，y=0）并规定，每向东增加100米，x加1，每向北增加100米，y加1。同时，我军情报部门也破译了敌军向坦克发送的指挥信号，其中有三种信号（L,R,M）用于控制坦克的运动，L 和 R 分别表示使令坦克向左、向右转向，M 表示令坦克直线开进100米，其它信号如 T 用于时间同步，P 用于位置较准。 一日，我军侦察兵发现了敌军的一辆坦克，侦察兵立即将坦克所在坐标（P, Q）及坦克前进方向（W：西，E：东，N：北，S：南）发送给指挥部，同时启动信号接收器，将坦克接收到的信号实时同步发往指挥部，指挥部根据这些信息得以实时掌控了该坦克的位置，并使用榴弹炮精准地击毁了该坦克。   请设计合理的数据结构和算法，根据坦克接收到的信号，推断出坦克所在的位置。 设计时请考虑可能的扩展情况，并体现出您的设计风格。 编码时请注重代码规范，并编写足够的单元测试。   假设，坦克坐标为（11，39）运行方向为 W，当收到以下信号 “MTMPRPMTMLMRPRMTPLMMTLMRRMP” 后，其位置应该为（9，43），运行方向为 E。\n\n```python\n#! /usr/bin/env python\n\nturn_dict = {\"EL\" : \"N\", \"WL\" : \"S\", \"SL\" : \"E\", \"NL\" : \"W\", \"ER\" : \"S\", \"WR\" : \"N\", \"SR\" : \"W\", \"NR\" : \"E\"}\n\ndef action(now, command):\n#   print \"now : \", now, \"command : \", command\n#   print type(now)\n    now = now.split()\n#   print now\n    \n    # x, y, direction\n    x = int(now[0])\n    y = int(now[1])\n    d = now[2]\n#   print \"x : \", x, \",y : \", y, \",d : \", d\n\n    if \"T\" == command or \"P\" == command:\n        pass\n    elif \"L\" == command or \"R\" == command:\n        turn_key = d + command\n        d = turn_dict[turn_key]\n    elif \"M\" == command:\n        if \"E\" == d:\n            x = x + 1\n        elif \"W\" == d:\n            x = x - 1\n        elif \"S\" == d:\n            y = y - 1\n        elif \"N\" == d:\n            y = y + 1\n        else:\n            pass\n    else:\n        pass\n\n    now[0] = str(x)\n    now[1] = str(y)\n    now[2] = d\n\n    next = \" \".join(now)\n    return next\n\n\nif __name__ == \"__main__\":\n    now = raw_input(\"please enter current location and direction of motion(e.g. x y w) : \")\n    print \"now : \", now\n    command_list = raw_input(\"please enter the command list : \")\n#   print \"command_list : \", command_list\n\n    for command in command_list:\n        now = action(now, command)\n\n    print \"now : \", now \n```\n","slug":"tank","published":1,"updated":"2019-01-13T10:03:48.538Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjy5kaqv0001p5ge83t8sx4ak","content":"<p>某次战役中，为便于信息交互，我军侦察部门将此次战役的关键高地坐标设定为（x=0，y=0）并规定，每向东增加100米，x加1，每向北增加100米，y加1。同时，我军情报部门也破译了敌军向坦克发送的指挥信号，其中有三种信号（L,R,M）用于控制坦克的运动，L 和 R 分别表示使令坦克向左、向右转向，M 表示令坦克直线开进100米，其它信号如 T 用于时间同步，P 用于位置较准。 一日，我军侦察兵发现了敌军的一辆坦克，侦察兵立即将坦克所在坐标（P, Q）及坦克前进方向（W：西，E：东，N：北，S：南）发送给指挥部，同时启动信号接收器，将坦克接收到的信号实时同步发往指挥部，指挥部根据这些信息得以实时掌控了该坦克的位置，并使用榴弹炮精准地击毁了该坦克。   请设计合理的数据结构和算法，根据坦克接收到的信号，推断出坦克所在的位置。 设计时请考虑可能的扩展情况，并体现出您的设计风格。 编码时请注重代码规范，并编写足够的单元测试。   假设，坦克坐标为（11，39）运行方向为 W，当收到以下信号 “MTMPRPMTMLMRPRMTPLMMTLMRRMP” 后，其位置应该为（9，43），运行方向为 E。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#! /usr/bin/env python</span></span><br><span class=\"line\"></span><br><span class=\"line\">turn_dict = &#123;<span class=\"string\">\"EL\"</span> : <span class=\"string\">\"N\"</span>, <span class=\"string\">\"WL\"</span> : <span class=\"string\">\"S\"</span>, <span class=\"string\">\"SL\"</span> : <span class=\"string\">\"E\"</span>, <span class=\"string\">\"NL\"</span> : <span class=\"string\">\"W\"</span>, <span class=\"string\">\"ER\"</span> : <span class=\"string\">\"S\"</span>, <span class=\"string\">\"WR\"</span> : <span class=\"string\">\"N\"</span>, <span class=\"string\">\"SR\"</span> : <span class=\"string\">\"W\"</span>, <span class=\"string\">\"NR\"</span> : <span class=\"string\">\"E\"</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">action</span><span class=\"params\">(now, command)</span>:</span></span><br><span class=\"line\"><span class=\"comment\">#   print \"now : \", now, \"command : \", command</span></span><br><span class=\"line\"><span class=\"comment\">#   print type(now)</span></span><br><span class=\"line\">    now = now.split()</span><br><span class=\"line\"><span class=\"comment\">#   print now</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\"># x, y, direction</span></span><br><span class=\"line\">    x = int(now[<span class=\"number\">0</span>])</span><br><span class=\"line\">    y = int(now[<span class=\"number\">1</span>])</span><br><span class=\"line\">    d = now[<span class=\"number\">2</span>]</span><br><span class=\"line\"><span class=\"comment\">#   print \"x : \", x, \",y : \", y, \",d : \", d</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"string\">\"T\"</span> == command <span class=\"keyword\">or</span> <span class=\"string\">\"P\"</span> == command:</span><br><span class=\"line\">        <span class=\"keyword\">pass</span></span><br><span class=\"line\">    <span class=\"keyword\">elif</span> <span class=\"string\">\"L\"</span> == command <span class=\"keyword\">or</span> <span class=\"string\">\"R\"</span> == command:</span><br><span class=\"line\">        turn_key = d + command</span><br><span class=\"line\">        d = turn_dict[turn_key]</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> <span class=\"string\">\"M\"</span> == command:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"string\">\"E\"</span> == d:</span><br><span class=\"line\">            x = x + <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"string\">\"W\"</span> == d:</span><br><span class=\"line\">            x = x - <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"string\">\"S\"</span> == d:</span><br><span class=\"line\">            y = y - <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"string\">\"N\"</span> == d:</span><br><span class=\"line\">            y = y + <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">pass</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">pass</span></span><br><span class=\"line\"></span><br><span class=\"line\">    now[<span class=\"number\">0</span>] = str(x)</span><br><span class=\"line\">    now[<span class=\"number\">1</span>] = str(y)</span><br><span class=\"line\">    now[<span class=\"number\">2</span>] = d</span><br><span class=\"line\"></span><br><span class=\"line\">    next = <span class=\"string\">\" \"</span>.join(now)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> next</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">\"__main__\"</span>:</span><br><span class=\"line\">    now = raw_input(<span class=\"string\">\"please enter current location and direction of motion(e.g. x y w) : \"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">print</span> <span class=\"string\">\"now : \"</span>, now</span><br><span class=\"line\">    command_list = raw_input(<span class=\"string\">\"please enter the command list : \"</span>)</span><br><span class=\"line\"><span class=\"comment\">#   print \"command_list : \", command_list</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> command <span class=\"keyword\">in</span> command_list:</span><br><span class=\"line\">        now = action(now, command)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">print</span> <span class=\"string\">\"now : \"</span>, now</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<p>某次战役中，为便于信息交互，我军侦察部门将此次战役的关键高地坐标设定为（x=0，y=0）并规定，每向东增加100米，x加1，每向北增加100米，y加1。同时，我军情报部门也破译了敌军向坦克发送的指挥信号，其中有三种信号（L,R,M）用于控制坦克的运动，L 和 R 分别表示使令坦克向左、向右转向，M 表示令坦克直线开进100米，其它信号如 T 用于时间同步，P 用于位置较准。 一日，我军侦察兵发现了敌军的一辆坦克，侦察兵立即将坦克所在坐标（P, Q）及坦克前进方向（W：西，E：东，N：北，S：南）发送给指挥部，同时启动信号接收器，将坦克接收到的信号实时同步发往指挥部，指挥部根据这些信息得以实时掌控了该坦克的位置，并使用榴弹炮精准地击毁了该坦克。   请设计合理的数据结构和算法，根据坦克接收到的信号，推断出坦克所在的位置。 设计时请考虑可能的扩展情况，并体现出您的设计风格。 编码时请注重代码规范，并编写足够的单元测试。   假设，坦克坐标为（11，39）运行方向为 W，当收到以下信号 “MTMPRPMTMLMRPRMTPLMMTLMRRMP” 后，其位置应该为（9，43），运行方向为 E。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#! /usr/bin/env python</span></span><br><span class=\"line\"></span><br><span class=\"line\">turn_dict = &#123;<span class=\"string\">\"EL\"</span> : <span class=\"string\">\"N\"</span>, <span class=\"string\">\"WL\"</span> : <span class=\"string\">\"S\"</span>, <span class=\"string\">\"SL\"</span> : <span class=\"string\">\"E\"</span>, <span class=\"string\">\"NL\"</span> : <span class=\"string\">\"W\"</span>, <span class=\"string\">\"ER\"</span> : <span class=\"string\">\"S\"</span>, <span class=\"string\">\"WR\"</span> : <span class=\"string\">\"N\"</span>, <span class=\"string\">\"SR\"</span> : <span class=\"string\">\"W\"</span>, <span class=\"string\">\"NR\"</span> : <span class=\"string\">\"E\"</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">action</span><span class=\"params\">(now, command)</span>:</span></span><br><span class=\"line\"><span class=\"comment\">#   print \"now : \", now, \"command : \", command</span></span><br><span class=\"line\"><span class=\"comment\">#   print type(now)</span></span><br><span class=\"line\">    now = now.split()</span><br><span class=\"line\"><span class=\"comment\">#   print now</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\"># x, y, direction</span></span><br><span class=\"line\">    x = int(now[<span class=\"number\">0</span>])</span><br><span class=\"line\">    y = int(now[<span class=\"number\">1</span>])</span><br><span class=\"line\">    d = now[<span class=\"number\">2</span>]</span><br><span class=\"line\"><span class=\"comment\">#   print \"x : \", x, \",y : \", y, \",d : \", d</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"string\">\"T\"</span> == command <span class=\"keyword\">or</span> <span class=\"string\">\"P\"</span> == command:</span><br><span class=\"line\">        <span class=\"keyword\">pass</span></span><br><span class=\"line\">    <span class=\"keyword\">elif</span> <span class=\"string\">\"L\"</span> == command <span class=\"keyword\">or</span> <span class=\"string\">\"R\"</span> == command:</span><br><span class=\"line\">        turn_key = d + command</span><br><span class=\"line\">        d = turn_dict[turn_key]</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> <span class=\"string\">\"M\"</span> == command:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"string\">\"E\"</span> == d:</span><br><span class=\"line\">            x = x + <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"string\">\"W\"</span> == d:</span><br><span class=\"line\">            x = x - <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"string\">\"S\"</span> == d:</span><br><span class=\"line\">            y = y - <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"string\">\"N\"</span> == d:</span><br><span class=\"line\">            y = y + <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">pass</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">pass</span></span><br><span class=\"line\"></span><br><span class=\"line\">    now[<span class=\"number\">0</span>] = str(x)</span><br><span class=\"line\">    now[<span class=\"number\">1</span>] = str(y)</span><br><span class=\"line\">    now[<span class=\"number\">2</span>] = d</span><br><span class=\"line\"></span><br><span class=\"line\">    next = <span class=\"string\">\" \"</span>.join(now)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> next</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">\"__main__\"</span>:</span><br><span class=\"line\">    now = raw_input(<span class=\"string\">\"please enter current location and direction of motion(e.g. x y w) : \"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">print</span> <span class=\"string\">\"now : \"</span>, now</span><br><span class=\"line\">    command_list = raw_input(<span class=\"string\">\"please enter the command list : \"</span>)</span><br><span class=\"line\"><span class=\"comment\">#   print \"command_list : \", command_list</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> command <span class=\"keyword\">in</span> command_list:</span><br><span class=\"line\">        now = action(now, command)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">print</span> <span class=\"string\">\"now : \"</span>, now</span><br></pre></td></tr></table></figure>\n\n"}],"PostAsset":[{"_id":"source/_posts/Floyd/floyd_2.png","slug":"floyd_2.png","post":"cjy5kaqts000b5ge850cdiz9r","modified":1,"renderable":0},{"_id":"source/_posts/Floyd/floyd_1.png","slug":"floyd_1.png","post":"cjy5kaqts000b5ge850cdiz9r","modified":1,"renderable":0},{"_id":"source/_posts/Sports-Meeting/question.jpg","slug":"question.jpg","post":"cjy5kaqu8000l5ge86kkl1hf0","modified":1,"renderable":0},{"_id":"source/_posts/Use-Homebrew-to-Install-both-Python-2-and-3-on-Mac/sudo.jpg","slug":"sudo.jpg","post":"cjy5kaquh000n5ge88woa28xn","modified":1,"renderable":0},{"_id":"source/_posts/ssh-failed-to-connect-centos7-in-vultr/ssh10.png","slug":"ssh10.png","post":"cjy5kaquz001m5ge8c4cwdr0k","modified":1,"renderable":0},{"_id":"source/_posts/Data-Structure-Alignment-and-Padding-in-C/alignment.png","post":"cjy5kaqtr000a5ge8onxki3r2","slug":"alignment.png","modified":1,"renderable":1},{"_id":"source/_posts/Generate-0-and-1-with-Equal-Probability/infinite_loop.jpg","post":"cjy5kaqtt000d5ge8fadk0jap","slug":"infinite_loop.jpg","modified":1,"renderable":1},{"_id":"source/_posts/List-Files-and-Directory-Tree-Structure-in-Python/dir_structure.png","post":"cjy5kaqtw000g5ge8ob9ys4y8","slug":"dir_structure.png","modified":1,"renderable":1},{"_id":"source/_posts/Similar-Strings/similar_strings.png","post":"cjy5kaqtx000i5ge8n4hgq9if","slug":"similar_strings.png","modified":1,"renderable":1},{"_id":"source/_posts/Sort-a-Special-Array/sort.png","post":"cjy5kaqu2000k5ge88ph6i3ym","slug":"sort.png","modified":1,"renderable":1},{"_id":"source/_posts/Transformer/transformer.jpg","post":"cjy5kaqud000m5ge86qnyh1qn","slug":"transformer.jpg","modified":1,"renderable":1},{"_id":"source/_posts/remove-special-substrings-in-a-string/remove_substrings.png","post":"cjy5kaquu001e5ge8wf5863qx","slug":"remove_substrings.png","modified":1,"renderable":1},{"_id":"source/_posts/sort-strings-in-c/sort_strings_question.jpg","post":"cjy5kaquy001k5ge8w48gmiva","slug":"sort_strings_question.jpg","modified":1,"renderable":1},{"_id":"source/_posts/4-Ways-of-Fibonacci-in-Python/fibonacci_time.png","post":"cjy5kaqtj00055ge8j7lm66t9","slug":"fibonacci_time.png","modified":1,"renderable":1},{"_id":"source/_posts/4-Ways-of-Fibonacci-in-Python/fibonacci_time_2.png","post":"cjy5kaqtj00055ge8j7lm66t9","slug":"fibonacci_time_2.png","modified":1,"renderable":1},{"_id":"source/_posts/4-Ways-of-Fibonacci-in-Python/spiral.jpg","post":"cjy5kaqtj00055ge8j7lm66t9","slug":"spiral.jpg","modified":1,"renderable":1},{"_id":"source/_posts/Floyd/floyd.png","post":"cjy5kaqts000b5ge850cdiz9r","slug":"floyd.png","modified":1,"renderable":1},{"_id":"source/_posts/Generate-Verification-Code-in-Python/chr.png","post":"cjy5kaqtu000e5ge8balu8f1n","slug":"chr.png","modified":1,"renderable":1},{"_id":"source/_posts/Generate-Verification-Code-in-Python/ord.png","post":"cjy5kaqtu000e5ge8balu8f1n","slug":"ord.png","modified":1,"renderable":1},{"_id":"source/_posts/Generate-Verification-Code-in-Python/random.sample.png","post":"cjy5kaqtu000e5ge8balu8f1n","slug":"random.sample.png","modified":1,"renderable":1},{"_id":"source/_posts/Sports-Meeting/answer.png","post":"cjy5kaqu8000l5ge86kkl1hf0","slug":"answer.png","modified":1,"renderable":1},{"_id":"source/_posts/Sports-Meeting/answer2.png","post":"cjy5kaqu8000l5ge86kkl1hf0","slug":"answer2.png","modified":1,"renderable":1},{"_id":"source/_posts/Use-Homebrew-to-Install-both-Python-2-and-3-on-Mac/activate.jpg","post":"cjy5kaquh000n5ge88woa28xn","slug":"activate.jpg","modified":1,"renderable":1},{"_id":"source/_posts/Use-Homebrew-to-Install-both-Python-2-and-3-on-Mac/deactivate.jpg","post":"cjy5kaquh000n5ge88woa28xn","slug":"deactivate.jpg","modified":1,"renderable":1},{"_id":"source/_posts/Use-Homebrew-to-Install-both-Python-2-and-3-on-Mac/wrong.jpg","slug":"wrong.jpg","post":"cjy5kaquh000n5ge88woa28xn","modified":1,"renderable":0},{"_id":"source/_posts/Use-Homebrew-to-Install-both-Python-2-and-3-on-Mac/wrong2.jpg","post":"cjy5kaquh000n5ge88woa28xn","slug":"wrong2.jpg","modified":1,"renderable":1},{"_id":"source/_posts/ssh-failed-to-connect-centos7-in-vultr/ssh1.png","post":"cjy5kaquz001m5ge8c4cwdr0k","slug":"ssh1.png","modified":1,"renderable":1},{"_id":"source/_posts/ssh-failed-to-connect-centos7-in-vultr/ssh11.png","post":"cjy5kaquz001m5ge8c4cwdr0k","slug":"ssh11.png","modified":1,"renderable":1},{"_id":"source/_posts/ssh-failed-to-connect-centos7-in-vultr/ssh12.png","post":"cjy5kaquz001m5ge8c4cwdr0k","slug":"ssh12.png","modified":1,"renderable":1},{"_id":"source/_posts/ssh-failed-to-connect-centos7-in-vultr/ssh13.png","post":"cjy5kaquz001m5ge8c4cwdr0k","slug":"ssh13.png","modified":1,"renderable":1},{"_id":"source/_posts/ssh-failed-to-connect-centos7-in-vultr/ssh14.png","slug":"ssh14.png","post":"cjy5kaquz001m5ge8c4cwdr0k","modified":1,"renderable":0},{"_id":"source/_posts/ssh-failed-to-connect-centos7-in-vultr/ssh2.png","slug":"ssh2.png","post":"cjy5kaquz001m5ge8c4cwdr0k","modified":1,"renderable":0},{"_id":"source/_posts/ssh-failed-to-connect-centos7-in-vultr/ssh3.png","post":"cjy5kaquz001m5ge8c4cwdr0k","slug":"ssh3.png","modified":1,"renderable":1},{"_id":"source/_posts/ssh-failed-to-connect-centos7-in-vultr/ssh4.jpg","post":"cjy5kaquz001m5ge8c4cwdr0k","slug":"ssh4.jpg","modified":1,"renderable":1},{"_id":"source/_posts/ssh-failed-to-connect-centos7-in-vultr/ssh5.png","post":"cjy5kaquz001m5ge8c4cwdr0k","slug":"ssh5.png","modified":1,"renderable":1},{"_id":"source/_posts/ssh-failed-to-connect-centos7-in-vultr/ssh6.png","post":"cjy5kaquz001m5ge8c4cwdr0k","slug":"ssh6.png","modified":1,"renderable":1},{"_id":"source/_posts/ssh-failed-to-connect-centos7-in-vultr/ssh7.png","post":"cjy5kaquz001m5ge8c4cwdr0k","slug":"ssh7.png","modified":1,"renderable":1},{"_id":"source/_posts/ssh-failed-to-connect-centos7-in-vultr/ssh8.png","post":"cjy5kaquz001m5ge8c4cwdr0k","slug":"ssh8.png","modified":1,"renderable":1},{"_id":"source/_posts/ssh-failed-to-connect-centos7-in-vultr/ssh9.png","post":"cjy5kaquz001m5ge8c4cwdr0k","slug":"ssh9.png","modified":1,"renderable":1},{"_id":"source/_posts/failed-to-start-mysql8-0-in-centos7/35968830.png","post":"cjy5kaqum000x5ge8yea8o9nr","slug":"35968830.png","modified":1,"renderable":1},{"_id":"source/_posts/failed-to-start-mysql8-0-in-centos7/36006075.png","post":"cjy5kaqum000x5ge8yea8o9nr","slug":"36006075.png","modified":1,"renderable":1},{"_id":"source/_posts/failed-to-start-mysql8-0-in-centos7/36115949.png","post":"cjy5kaqum000x5ge8yea8o9nr","slug":"36115949.png","modified":1,"renderable":1},{"_id":"source/_posts/failed-to-start-mysql8-0-in-centos7/36201778.png","post":"cjy5kaqum000x5ge8yea8o9nr","slug":"36201778.png","modified":1,"renderable":1},{"_id":"source/_posts/failed-to-start-mysql8-0-in-centos7/71003550.png","post":"cjy5kaqum000x5ge8yea8o9nr","slug":"71003550.png","modified":1,"renderable":1},{"_id":"source/_posts/failed-to-start-mysql8-0-in-centos7/71918674.png","post":"cjy5kaqum000x5ge8yea8o9nr","slug":"71918674.png","modified":1,"renderable":1},{"_id":"source/_posts/failed-to-start-mysql8-0-in-centos7/71982775.png","post":"cjy5kaqum000x5ge8yea8o9nr","slug":"71982775.png","modified":1,"renderable":1},{"_id":"source/_posts/failed-to-start-mysql8-0-in-centos7/72127872.png","post":"cjy5kaqum000x5ge8yea8o9nr","slug":"72127872.png","modified":1,"renderable":1},{"_id":"source/_posts/failed-to-start-mysql8-0-in-centos7/72326504.png","post":"cjy5kaqum000x5ge8yea8o9nr","slug":"72326504.png","modified":1,"renderable":1},{"_id":"source/_posts/failed-to-start-mysql8-0-in-centos7/75749952.png","post":"cjy5kaqum000x5ge8yea8o9nr","slug":"75749952.png","modified":1,"renderable":1},{"_id":"source/_posts/failed-to-start-mysql8-0-in-centos7/75771201.png","post":"cjy5kaqum000x5ge8yea8o9nr","slug":"75771201.png","modified":1,"renderable":1},{"_id":"source/_posts/failed-to-start-mysql8-0-in-centos7/75840236.png","post":"cjy5kaqum000x5ge8yea8o9nr","slug":"75840236.png","modified":1,"renderable":1},{"_id":"source/_posts/failed-to-start-mysql8-0-in-centos7/76140575.png","post":"cjy5kaqum000x5ge8yea8o9nr","slug":"76140575.png","modified":1,"renderable":1},{"_id":"source/_posts/failed-to-start-mysql8-0-in-centos7/76232995.png","post":"cjy5kaqum000x5ge8yea8o9nr","slug":"76232995.png","modified":1,"renderable":1},{"_id":"source/_posts/failed-to-start-mysql8-0-in-centos7/vultr_hardinfo.jpg","post":"cjy5kaqum000x5ge8yea8o9nr","slug":"vultr_hardinfo.jpg","modified":1,"renderable":1}],"PostCategory":[{"post_id":"cjy5kaqth00035ge8h2kgnrxh","category_id":"cjy5kaqtl00065ge8etd98tei","_id":"cjy5kaqtv000f5ge8oahamb7f"},{"post_id":"cjy5kaqui000p5ge8iju51knp","category_id":"cjy5kaquk000r5ge82vkqxovm","_id":"cjy5kaqup00105ge8ktex2vls"},{"post_id":"cjy5kaqum000v5ge82sm6y3p5","category_id":"cjy5kaquo000y5ge8m4d63sds","_id":"cjy5kaqut001a5ge8vbt8ntao"},{"post_id":"cjy5kaqup00125ge8ls00me6y","category_id":"cjy5kaqur00165ge8xpzw15d8","_id":"cjy5kaquv001g5ge8om2aus7t"},{"post_id":"cjy5kaqur00175ge856psu5d4","category_id":"cjy5kaqut001d5ge8whez5l1g","_id":"cjy5kaquz001l5ge8ow6maa7a"},{"post_id":"cjy5kaqus00195ge8tv8wrzxo","category_id":"cjy5kaqut001d5ge8whez5l1g","_id":"cjy5kaqv0001o5ge8g97gqiuz"},{"post_id":"cjy5kaqv0001p5ge83t8sx4ak","category_id":"cjy5kaquo000y5ge8m4d63sds","_id":"cjy5kaqv1001s5ge8bd3vg8iw"}],"PostTag":[{"post_id":"cjy5kaqth00035ge8h2kgnrxh","tag_id":"cjy5kaqtn00075ge8mekgmoqi","_id":"cjy5kaqtw000h5ge8awe0kw86"},{"post_id":"cjy5kaqth00035ge8h2kgnrxh","tag_id":"cjy5kaqts000c5ge878yr2isu","_id":"cjy5kaqty000j5ge8pif42kh3"},{"post_id":"cjy5kaqui000p5ge8iju51knp","tag_id":"cjy5kaquk000s5ge8cuoapsii","_id":"cjy5kaquq00135ge82s6m6e01"},{"post_id":"cjy5kaqui000p5ge8iju51knp","tag_id":"cjy5kaqum000w5ge8aydrzxsf","_id":"cjy5kaqur00155ge8i11k73ac"},{"post_id":"cjy5kaqum000v5ge82sm6y3p5","tag_id":"cjy5kaqtn00075ge8mekgmoqi","_id":"cjy5kaqus00185ge88j8zu658"},{"post_id":"cjy5kaqum000v5ge82sm6y3p5","tag_id":"cjy5kaqup00115ge8vbm3mk3t","_id":"cjy5kaqut001b5ge8qcjvdo9b"},{"post_id":"cjy5kaquu001f5ge8hx4m5u8l","tag_id":"cjy5kaqtn00075ge8mekgmoqi","_id":"cjy5kaquy001j5ge8erllj2rz"},{"post_id":"cjy5kaqv0001p5ge83t8sx4ak","tag_id":"cjy5kaqup00115ge8vbm3mk3t","_id":"cjy5kaqv1001q5ge8swp0hgdl"},{"post_id":"cjy5kaqv0001p5ge83t8sx4ak","tag_id":"cjy5kaqtn00075ge8mekgmoqi","_id":"cjy5kaqv1001r5ge8j5aefgqd"}],"Tag":[{"name":"python","_id":"cjy5kaqtn00075ge8mekgmoqi"},{"name":"leetcode","_id":"cjy5kaqts000c5ge878yr2isu"},{"name":"nlp","_id":"cjy5kaquk000s5ge8cuoapsii"},{"name":"ml","_id":"cjy5kaqum000w5ge8aydrzxsf"},{"name":"oj","_id":"cjy5kaqup00115ge8vbm3mk3t"}]}}